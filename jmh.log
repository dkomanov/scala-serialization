# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_events_1k

# Run progress: 0.00% complete, ETA 01:06:00
# Fork: 1 of 1
# Warmup Iteration   1: 692601.754 ns/op
Iteration   1: 507382.058 ns/op
Iteration   2: 496328.366 ns/op
Iteration   3: 505882.674 ns/op
Iteration   4: 493393.918 ns/op
Iteration   5: 495822.356 ns/op
Iteration   6: 498541.243 ns/op
Iteration   7: 498301.215 ns/op
Iteration   8: 501551.955 ns/op
Iteration   9: 498304.723 ns/op
Iteration  10: 502554.064 ns/op


Result "deserialization_events_1k":
  499806.257 ±(99.9%) 6763.462 ns/op [Average]
  (min, avg, max) = (493393.918, 499806.257, 507382.058), stdev = 4473.612
  CI (99.9%): [493042.795, 506569.720] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_events_2k

# Run progress: 0.28% complete, ETA 01:08:59
# Fork: 1 of 1
# Warmup Iteration   1: 1206829.958 ns/op
Iteration   1: 962558.243 ns/op
Iteration   2: 948855.455 ns/op
Iteration   3: 948837.603 ns/op
Iteration   4: 952470.773 ns/op
Iteration   5: 953403.061 ns/op
Iteration   6: 949744.718 ns/op
Iteration   7: 958877.765 ns/op
Iteration   8: 955179.618 ns/op
Iteration   9: 961632.117 ns/op
Iteration  10: 957960.285 ns/op


Result "deserialization_events_2k":
  954951.964 ±(99.9%) 7761.805 ns/op [Average]
  (min, avg, max) = (948837.603, 954951.964, 962558.243), stdev = 5133.953
  CI (99.9%): [947190.159, 962713.769] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_events_4k

# Run progress: 0.56% complete, ETA 01:09:04
# Fork: 1 of 1
# Warmup Iteration   1: 1938978.196 ns/op
Iteration   1: 1623625.550 ns/op
Iteration   2: 1634152.382 ns/op
Iteration   3: 1590273.210 ns/op
Iteration   4: 1589994.722 ns/op
Iteration   5: 1597619.805 ns/op
Iteration   6: 1613082.845 ns/op
Iteration   7: 1602771.699 ns/op
Iteration   8: 1613083.048 ns/op
Iteration   9: 1605291.308 ns/op
Iteration  10: 1600165.640 ns/op


Result "deserialization_events_4k":
  1607006.021 ±(99.9%) 21452.780 ns/op [Average]
  (min, avg, max) = (1589994.722, 1607006.021, 1634152.382), stdev = 14189.686
  CI (99.9%): [1585553.241, 1628458.801] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_events_64k

# Run progress: 0.83% complete, ETA 01:08:50
# Fork: 1 of 1
# Warmup Iteration   1: 55599322.222 ns/op
Iteration   1: 41685855.167 ns/op
Iteration   2: 40015558.520 ns/op
Iteration   3: 40011689.320 ns/op
Iteration   4: 40017983.840 ns/op
Iteration   5: 40016137.960 ns/op
Iteration   6: 40012340.160 ns/op
Iteration   7: 40015089.160 ns/op
Iteration   8: 40013615.840 ns/op
Iteration   9: 40019756.200 ns/op
Iteration  10: 40009387.440 ns/op


Result "deserialization_events_64k":
  40181741.361 ±(99.9%) 799017.304 ns/op [Average]
  (min, avg, max) = (40009387.440, 40181741.361, 41685855.167), stdev = 528500.475
  CI (99.9%): [39382724.056, 40980758.665] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_events_8k

# Run progress: 1.11% complete, ETA 01:08:43
# Fork: 1 of 1
# Warmup Iteration   1: 5183910.974 ns/op
Iteration   1: 4016604.169 ns/op
Iteration   2: 3968727.738 ns/op
Iteration   3: 3984519.207 ns/op
Iteration   4: 3968755.147 ns/op
Iteration   5: 3953012.530 ns/op
Iteration   6: 3937456.929 ns/op
Iteration   7: 3953166.877 ns/op
Iteration   8: 3968722.746 ns/op
Iteration   9: 4000421.796 ns/op
Iteration  10: 3984593.088 ns/op


Result "deserialization_events_8k":
  3973598.023 ±(99.9%) 35732.756 ns/op [Average]
  (min, avg, max) = (3937456.929, 3973598.023, 4016604.169), stdev = 23635.006
  CI (99.9%): [3937865.267, 4009330.779] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_site_1k

# Run progress: 1.39% complete, ETA 01:08:32
# Fork: 1 of 1
# Warmup Iteration   1: 298575.905 ns/op
Iteration   1: 234327.332 ns/op
Iteration   2: 228125.376 ns/op
Iteration   3: 226207.317 ns/op
Iteration   4: 221165.193 ns/op
Iteration   5: 223588.991 ns/op
Iteration   6: 223433.318 ns/op
Iteration   7: 224338.662 ns/op
Iteration   8: 224046.559 ns/op
Iteration   9: 224135.964 ns/op
Iteration  10: 222588.529 ns/op


Result "deserialization_site_1k":
  225195.724 ±(99.9%) 5632.127 ns/op [Average]
  (min, avg, max) = (221165.193, 225195.724, 234327.332), stdev = 3725.304
  CI (99.9%): [219563.597, 230827.851] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_site_2k

# Run progress: 1.67% complete, ETA 01:08:19
# Fork: 1 of 1
# Warmup Iteration   1: 550055.191 ns/op
Iteration   1: 423961.321 ns/op
Iteration   2: 412246.976 ns/op
Iteration   3: 412747.084 ns/op
Iteration   4: 407033.329 ns/op
Iteration   5: 407051.648 ns/op
Iteration   6: 410209.526 ns/op
Iteration   7: 408533.460 ns/op
Iteration   8: 407868.624 ns/op
Iteration   9: 406713.363 ns/op
Iteration  10: 406394.202 ns/op


Result "deserialization_site_2k":
  410275.953 ±(99.9%) 8044.120 ns/op [Average]
  (min, avg, max) = (406394.202, 410275.953, 423961.321), stdev = 5320.688
  CI (99.9%): [402231.833, 418320.074] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_site_4k

# Run progress: 1.94% complete, ETA 01:08:06
# Fork: 1 of 1
# Warmup Iteration   1: 1002495.428 ns/op
Iteration   1: 726806.489 ns/op
Iteration   2: 712834.938 ns/op
Iteration   3: 708293.870 ns/op
Iteration   4: 696927.532 ns/op
Iteration   5: 699376.784 ns/op
Iteration   6: 698888.087 ns/op
Iteration   7: 704793.786 ns/op
Iteration   8: 707298.103 ns/op
Iteration   9: 703809.159 ns/op
Iteration  10: 703822.287 ns/op


Result "deserialization_site_4k":
  706285.104 ±(99.9%) 13078.644 ns/op [Average]
  (min, avg, max) = (696927.532, 706285.104, 726806.489), stdev = 8650.713
  CI (99.9%): [693206.459, 719363.748] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_site_64k

# Run progress: 2.22% complete, ETA 01:07:53
# Fork: 1 of 1
# Warmup Iteration   1: 10532003.137 ns/op
Iteration   1: 8000910.168 ns/op
Iteration   2: 7937190.040 ns/op
Iteration   3: 8264977.091 ns/op
Iteration   4: 8621854.103 ns/op
Iteration   5: 8475699.653 ns/op
Iteration   6: 8131189.350 ns/op
Iteration   7: 8083822.984 ns/op
Iteration   8: 8480229.169 ns/op
Iteration   9: 8001079.336 ns/op
Iteration  10: 7463924.888 ns/op


Result "deserialization_site_64k":
  8146087.678 ±(99.9%) 507960.569 ns/op [Average]
  (min, avg, max) = (7463924.888, 8146087.678, 8621854.103), stdev = 335984.466
  CI (99.9%): [7638127.109, 8654048.247] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_site_8k

# Run progress: 2.50% complete, ETA 01:07:41
# Fork: 1 of 1
# Warmup Iteration   1: 1977218.907 ns/op
Iteration   1: 1392968.184 ns/op
Iteration   2: 1353329.302 ns/op
Iteration   3: 1340637.016 ns/op
Iteration   4: 1292125.389 ns/op
Iteration   5: 1290433.289 ns/op
Iteration   6: 1297155.319 ns/op
Iteration   7: 1291151.738 ns/op
Iteration   8: 1307301.050 ns/op
Iteration   9: 1302203.729 ns/op
Iteration  10: 1305624.962 ns/op


Result "deserialization_site_8k":
  1317292.998 ±(99.9%) 51584.903 ns/op [Average]
  (min, avg, max) = (1290433.289, 1317292.998, 1392968.184), stdev = 34120.219
  CI (99.9%): [1265708.095, 1368877.901] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_events_1k

# Run progress: 2.78% complete, ETA 01:07:30
# Fork: 1 of 1
# Warmup Iteration   1: 1920371.384 ns/op
Iteration   1: 1449534.993 ns/op
Iteration   2: 1434876.300 ns/op
Iteration   3: 1449674.397 ns/op
Iteration   4: 1458176.526 ns/op
Iteration   5: 1460061.498 ns/op
Iteration   6: 1453666.740 ns/op
Iteration   7: 1455521.860 ns/op
Iteration   8: 1517594.936 ns/op
Iteration   9: 1451531.631 ns/op
Iteration  10: 1441114.974 ns/op


Result "serialization_events_1k":
  1457175.386 ±(99.9%) 34092.586 ns/op [Average]
  (min, avg, max) = (1434876.300, 1457175.386, 1517594.936), stdev = 22550.135
  CI (99.9%): [1423082.800, 1491267.972] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_events_2k

# Run progress: 3.06% complete, ETA 01:07:19
# Fork: 1 of 1
# Warmup Iteration   1: 3638048.142 ns/op
Iteration   1: 2710348.073 ns/op
Iteration   2: 2717642.106 ns/op
Iteration   3: 2778859.244 ns/op
Iteration   4: 2725041.894 ns/op
Iteration   5: 2732605.202 ns/op
Iteration   6: 2717660.514 ns/op
Iteration   7: 2717695.538 ns/op
Iteration   8: 2725133.926 ns/op
Iteration   9: 2717702.168 ns/op
Iteration  10: 2718159.519 ns/op


Result "serialization_events_2k":
  2726084.819 ±(99.9%) 29484.448 ns/op [Average]
  (min, avg, max) = (2710348.073, 2726084.819, 2778859.244), stdev = 19502.137
  CI (99.9%): [2696600.371, 2755569.266] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_events_4k

# Run progress: 3.33% complete, ETA 01:07:07
# Fork: 1 of 1
# Warmup Iteration   1: 10532115.358 ns/op
Iteration   1: 5917891.586 ns/op
Iteration   2: 5682597.426 ns/op
Iteration   3: 5618738.427 ns/op
Iteration   4: 5622127.292 ns/op
Iteration   5: 5682587.057 ns/op
Iteration   6: 5781123.705 ns/op
Iteration   7: 5650496.384 ns/op
Iteration   8: 5650692.729 ns/op
Iteration   9: 5656024.644 ns/op
Iteration  10: 5618999.045 ns/op


Result "serialization_events_4k":
  5688127.830 ±(99.9%) 141913.201 ns/op [Average]
  (min, avg, max) = (5618738.427, 5688127.830, 5917891.586), stdev = 93866.796
  CI (99.9%): [5546214.629, 5830041.030] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_events_64k

# Run progress: 3.61% complete, ETA 01:06:55
# Fork: 1 of 1
# Warmup Iteration   1: 250167136.000 ns/op
Iteration   1: 143021487.714 ns/op
Iteration   2: 142908561.143 ns/op
Iteration   3: 142900555.571 ns/op
Iteration   4: 142981411.857 ns/op
Iteration   5: 142877791.286 ns/op
Iteration   6: 142927923.857 ns/op
Iteration   7: 142876362.857 ns/op
Iteration   8: 143047790.000 ns/op
Iteration   9: 142998801.857 ns/op
Iteration  10: 143062454.714 ns/op


Result "serialization_events_64k":
  142960314.086 ±(99.9%) 106797.231 ns/op [Average]
  (min, avg, max) = (142876362.857, 142960314.086, 143062454.714), stdev = 70639.756
  CI (99.9%): [142853516.854, 143067111.317] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_events_8k

# Run progress: 3.89% complete, ETA 01:06:43
# Fork: 1 of 1
# Warmup Iteration   1: 23267440.302 ns/op
Iteration   1: 15876733.397 ns/op
Iteration   2: 14087498.817 ns/op
Iteration   3: 14288156.729 ns/op
Iteration   4: 14288891.729 ns/op
Iteration   5: 14288117.843 ns/op
Iteration   6: 14288473.400 ns/op
Iteration   7: 14288333.100 ns/op
Iteration   8: 14287940.286 ns/op
Iteration   9: 14288660.214 ns/op
Iteration  10: 14288484.157 ns/op


Result "serialization_events_8k":
  14427128.967 ±(99.9%) 775940.734 ns/op [Average]
  (min, avg, max) = (14087498.817, 14427128.967, 15876733.397), stdev = 513236.753
  CI (99.9%): [13651188.233, 15203069.702] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_site_1k

# Run progress: 4.17% complete, ETA 01:06:32
# Fork: 1 of 1
# Warmup Iteration   1: 559266.813 ns/op
Iteration   1: 338321.856 ns/op
Iteration   2: 328862.068 ns/op
Iteration   3: 325664.240 ns/op
Iteration   4: 322300.740 ns/op
Iteration   5: 328015.472 ns/op
Iteration   6: 329735.149 ns/op
Iteration   7: 333583.816 ns/op
Iteration   8: 325025.472 ns/op
Iteration   9: 323763.150 ns/op
Iteration  10: 324917.018 ns/op


Result "serialization_site_1k":
  328018.898 ±(99.9%) 7401.603 ns/op [Average]
  (min, avg, max) = (322300.740, 328018.898, 338321.856), stdev = 4895.702
  CI (99.9%): [320617.295, 335420.501] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_site_2k

# Run progress: 4.44% complete, ETA 01:06:22
# Fork: 1 of 1
# Warmup Iteration   1: 1006515.575 ns/op
Iteration   1: 630178.175 ns/op
Iteration   2: 607973.559 ns/op
Iteration   3: 607589.129 ns/op
Iteration   4: 604666.199 ns/op
Iteration   5: 606487.908 ns/op
Iteration   6: 607221.132 ns/op
Iteration   7: 609451.656 ns/op
Iteration   8: 610939.593 ns/op
Iteration   9: 610559.514 ns/op
Iteration  10: 642520.822 ns/op


Result "serialization_site_2k":
  613758.769 ±(99.9%) 18744.056 ns/op [Average]
  (min, avg, max) = (604666.199, 613758.769, 642520.822), stdev = 12398.032
  CI (99.9%): [595014.713, 632502.824] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_site_4k

# Run progress: 4.72% complete, ETA 01:06:10
# Fork: 1 of 1
# Warmup Iteration   1: 1954088.066 ns/op
Iteration   1: 1133975.490 ns/op
Iteration   2: 1113709.125 ns/op
Iteration   3: 1106288.181 ns/op
Iteration   4: 1091329.540 ns/op
Iteration   5: 1096609.886 ns/op
Iteration   6: 1096591.251 ns/op
Iteration   7: 1105269.896 ns/op
Iteration   8: 1103872.641 ns/op
Iteration   9: 1109993.865 ns/op
Iteration  10: 1105080.280 ns/op


Result "serialization_site_4k":
  1106272.015 ±(99.9%) 17854.278 ns/op [Average]
  (min, avg, max) = (1091329.540, 1106272.015, 1133975.490), stdev = 11809.499
  CI (99.9%): [1088417.737, 1124126.294] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_site_64k

# Run progress: 5.00% complete, ETA 01:05:59
# Fork: 1 of 1
# Warmup Iteration   1: 34493326.414 ns/op
Iteration   1: 20836214.667 ns/op
Iteration   2: 19613870.686 ns/op
Iteration   3: 18520154.574 ns/op
Iteration   4: 18522787.963 ns/op
Iteration   5: 18521656.389 ns/op
Iteration   6: 18523649.074 ns/op
Iteration   7: 18523027.056 ns/op
Iteration   8: 18522289.648 ns/op
Iteration   9: 18525086.241 ns/op
Iteration  10: 18523453.426 ns/op


Result "serialization_site_64k":
  18863218.972 ±(99.9%) 1169287.692 ns/op [Average]
  (min, avg, max) = (18520154.574, 18863218.972, 20836214.667), stdev = 773411.410
  CI (99.9%): [17693931.280, 20032506.664] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_site_8k

# Run progress: 5.28% complete, ETA 01:05:47
# Fork: 1 of 1
# Warmup Iteration   1: 3691875.317 ns/op
Iteration   1: 2262712.299 ns/op
Iteration   2: 2222561.102 ns/op
Iteration   3: 2169488.746 ns/op
Iteration   4: 2155351.845 ns/op
Iteration   5: 2155434.847 ns/op
Iteration   6: 2160057.205 ns/op
Iteration   7: 2164689.734 ns/op
Iteration   8: 2169464.245 ns/op
Iteration   9: 2169478.490 ns/op
Iteration  10: 2174187.407 ns/op


Result "serialization_site_8k":
  2180342.592 ±(99.9%) 52519.177 ns/op [Average]
  (min, avg, max) = (2155351.845, 2180342.592, 2262712.299), stdev = 34738.184
  CI (99.9%): [2127823.415, 2232861.769] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_events_1k

# Run progress: 5.56% complete, ETA 01:05:36
# Fork: 1 of 1
# Warmup Iteration   1: 4117158.959 ns/op
Iteration   1: 3846655.565 ns/op
Iteration   2: 3731699.657 ns/op
Iteration   3: 3649978.215 ns/op
Iteration   4: 3663400.015 ns/op
Iteration   5: 3717821.093 ns/op
Iteration   6: 3623569.583 ns/op
Iteration   7: 3636748.004 ns/op
Iteration   8: 3663268.077 ns/op
Iteration   9: 3610529.877 ns/op
Iteration  10: 3636796.055 ns/op


Result "deserialization_events_1k":
  3678046.614 ±(99.9%) 106956.517 ns/op [Average]
  (min, avg, max) = (3610529.877, 3678046.614, 3846655.565), stdev = 70745.114
  CI (99.9%): [3571090.097, 3785003.131] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_events_2k

# Run progress: 5.83% complete, ETA 01:05:25
# Fork: 1 of 1
# Warmup Iteration   1: 6292395.233 ns/op
Iteration   1: 5525548.845 ns/op
Iteration   2: 5556351.067 ns/op
Iteration   3: 5587200.547 ns/op
Iteration   4: 5494949.764 ns/op
Iteration   5: 5525419.525 ns/op
Iteration   6: 5525350.552 ns/op
Iteration   7: 5495203.044 ns/op
Iteration   8: 5556257.789 ns/op
Iteration   9: 5525620.436 ns/op
Iteration  10: 5525652.171 ns/op


Result "deserialization_events_2k":
  5531755.374 ±(99.9%) 42657.071 ns/op [Average]
  (min, avg, max) = (5494949.764, 5531755.374, 5587200.547), stdev = 28215.011
  CI (99.9%): [5489098.303, 5574412.445] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_events_4k

# Run progress: 6.11% complete, ETA 01:05:13
# Fork: 1 of 1
# Warmup Iteration   1: 16402545.377 ns/op
Iteration   1: 14287546.400 ns/op
Iteration   2: 14086683.465 ns/op
Iteration   3: 14085589.493 ns/op
Iteration   4: 14288419.129 ns/op
Iteration   5: 14495327.464 ns/op
Iteration   6: 14086984.676 ns/op
Iteration   7: 14085247.972 ns/op
Iteration   8: 14085579.437 ns/op
Iteration   9: 14494625.014 ns/op
Iteration  10: 13891198.569 ns/op


Result "deserialization_events_4k":
  14188720.162 ±(99.9%) 297525.536 ns/op [Average]
  (min, avg, max) = (13891198.569, 14188720.162, 14495327.464), stdev = 196794.721
  CI (99.9%): [13891194.626, 14486245.698] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_events_64k

# Run progress: 6.39% complete, ETA 01:05:02
# Fork: 1 of 1
# Warmup Iteration   1: 333797054.667 ns/op
Iteration   1: 250174953.750 ns/op
Iteration   2: 333754060.333 ns/op
Iteration   3: 334578611.000 ns/op
Iteration   4: 333592347.000 ns/op
Iteration   5: 250256199.500 ns/op
Iteration   6: 250552657.000 ns/op
Iteration   7: 250614338.750 ns/op
Iteration   8: 250527024.750 ns/op
Iteration   9: 250054089.000 ns/op
Iteration  10: 250459743.500 ns/op


Result "deserialization_events_64k":
  275456402.458 ±(99.9%) 61053065.741 ns/op [Average]
  (min, avg, max) = (250054089.000, 275456402.458, 334578611.000), stdev = 40382822.820
  CI (99.9%): [214403336.718, 336509468.199] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_events_8k

# Run progress: 6.67% complete, ETA 01:04:52
# Fork: 1 of 1
# Warmup Iteration   1: 29432805.206 ns/op
Iteration   1: 25643498.410 ns/op
Iteration   2: 26318783.316 ns/op
Iteration   3: 26317837.579 ns/op
Iteration   4: 26318766.921 ns/op
Iteration   5: 25647722.282 ns/op
Iteration   6: 25643345.872 ns/op
Iteration   7: 25644910.462 ns/op
Iteration   8: 25643622.846 ns/op
Iteration   9: 25647525.462 ns/op
Iteration  10: 25642976.641 ns/op


Result "deserialization_events_8k":
  25846898.979 ±(99.9%) 491979.685 ns/op [Average]
  (min, avg, max) = (25642976.641, 25846898.979, 26318783.316), stdev = 325414.100
  CI (99.9%): [25354919.294, 26338878.664] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_site_1k

# Run progress: 6.94% complete, ETA 01:04:41
# Fork: 1 of 1
# Warmup Iteration   1: 759681.740 ns/op
Iteration   1: 581450.270 ns/op
Iteration   2: 563742.745 ns/op
Iteration   3: 567261.714 ns/op
Iteration   4: 567911.898 ns/op
Iteration   5: 559012.397 ns/op
Iteration   6: 567581.335 ns/op
Iteration   7: 564058.823 ns/op
Iteration   8: 569208.364 ns/op
Iteration   9: 566950.066 ns/op
Iteration  10: 567912.040 ns/op


Result "deserialization_site_1k":
  567508.965 ±(99.9%) 8673.709 ns/op [Average]
  (min, avg, max) = (559012.397, 567508.965, 581450.270), stdev = 5737.121
  CI (99.9%): [558835.256, 576182.674] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_site_2k

# Run progress: 7.22% complete, ETA 01:04:30
# Fork: 1 of 1
# Warmup Iteration   1: 1361139.382 ns/op
Iteration   1: 915847.302 ns/op
Iteration   2: 903421.134 ns/op
Iteration   3: 905033.773 ns/op
Iteration   4: 903409.437 ns/op
Iteration   5: 894693.462 ns/op
Iteration   6: 899325.624 ns/op
Iteration   7: 892930.604 ns/op
Iteration   8: 888965.030 ns/op
Iteration   9: 896109.925 ns/op
Iteration  10: 896130.411 ns/op


Result "deserialization_site_2k":
  899586.670 ±(99.9%) 11586.121 ns/op [Average]
  (min, avg, max) = (888965.030, 899586.670, 915847.302), stdev = 7663.502
  CI (99.9%): [888000.549, 911172.791] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_site_4k

# Run progress: 7.50% complete, ETA 01:04:19
# Fork: 1 of 1
# Warmup Iteration   1: 1815696.203 ns/op
Iteration   1: 1400744.158 ns/op
Iteration   2: 1416551.644 ns/op
Iteration   3: 1377553.019 ns/op
Iteration   4: 1369972.262 ns/op
Iteration   5: 1373751.647 ns/op
Iteration   6: 1366248.262 ns/op
Iteration   7: 1392869.825 ns/op
Iteration   8: 1394824.146 ns/op
Iteration   9: 1385805.717 ns/op
Iteration  10: 1374108.729 ns/op


Result "deserialization_site_4k":
  1385242.941 ±(99.9%) 24063.162 ns/op [Average]
  (min, avg, max) = (1366248.262, 1385242.941, 1416551.644), stdev = 15916.292
  CI (99.9%): [1361179.779, 1409306.103] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_site_64k

# Run progress: 7.78% complete, ETA 01:04:08
# Fork: 1 of 1
# Warmup Iteration   1: 21749635.609 ns/op
Iteration   1: 17861164.750 ns/op
Iteration   2: 17546965.632 ns/op
Iteration   3: 17247649.172 ns/op
Iteration   4: 18873292.283 ns/op
Iteration   5: 17546983.298 ns/op
Iteration   6: 17547079.649 ns/op
Iteration   7: 17546115.544 ns/op
Iteration   8: 17546231.088 ns/op
Iteration   9: 17548564.070 ns/op
Iteration  10: 17548462.281 ns/op


Result "deserialization_site_64k":
  17681250.777 ±(99.9%) 669922.244 ns/op [Average]
  (min, avg, max) = (17247649.172, 17681250.777, 18873292.283), stdev = 443112.086
  CI (99.9%): [17011328.532, 18351173.021] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_site_8k

# Run progress: 8.06% complete, ETA 01:03:57
# Fork: 1 of 1
# Warmup Iteration   1: 2991757.340 ns/op
Iteration   1: 2347602.300 ns/op
Iteration   2: 2347718.268 ns/op
Iteration   3: 2304418.899 ns/op
Iteration   4: 2309651.072 ns/op
Iteration   5: 2342112.618 ns/op
Iteration   6: 2293780.667 ns/op
Iteration   7: 2309728.734 ns/op
Iteration   8: 2415623.065 ns/op
Iteration   9: 2293799.271 ns/op
Iteration  10: 2304311.744 ns/op


Result "deserialization_site_8k":
  2326874.664 ±(99.9%) 56939.357 ns/op [Average]
  (min, avg, max) = (2293780.667, 2326874.664, 2415623.065), stdev = 37661.859
  CI (99.9%): [2269935.307, 2383814.021] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_events_1k

# Run progress: 8.33% complete, ETA 01:03:46
# Fork: 1 of 1
# Warmup Iteration   1: 3216926.058 ns/op
Iteration   1: 3077288.348 ns/op
Iteration   2: 3067891.138 ns/op
Iteration   3: 3067742.874 ns/op
Iteration   4: 3039853.894 ns/op
Iteration   5: 3067895.666 ns/op
Iteration   6: 3058886.248 ns/op
Iteration   7: 3096261.402 ns/op
Iteration   8: 3077282.197 ns/op
Iteration   9: 3058429.884 ns/op
Iteration  10: 3058463.382 ns/op


Result "serialization_events_1k":
  3066999.503 ±(99.9%) 22644.330 ns/op [Average]
  (min, avg, max) = (3039853.894, 3066999.503, 3096261.402), stdev = 14977.822
  CI (99.9%): [3044355.174, 3089643.833] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_events_2k

# Run progress: 8.61% complete, ETA 01:03:35
# Fork: 1 of 1
# Warmup Iteration   1: 7302504.029 ns/op
Iteration   1: 6452323.084 ns/op
Iteration   2: 6452710.574 ns/op
Iteration   3: 6453458.116 ns/op
Iteration   4: 6290968.553 ns/op
Iteration   5: 6712475.000 ns/op
Iteration   6: 6370157.255 ns/op
Iteration   7: 6579841.434 ns/op
Iteration   8: 6536599.542 ns/op
Iteration   9: 6623726.053 ns/op
Iteration  10: 6712747.919 ns/op


Result "serialization_events_2k":
  6518500.753 ±(99.9%) 212160.774 ns/op [Average]
  (min, avg, max) = (6290968.553, 6518500.753, 6712747.919), stdev = 140331.216
  CI (99.9%): [6306339.979, 6730661.527] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_events_4k

# Run progress: 8.89% complete, ETA 01:03:24
# Fork: 1 of 1
# Warmup Iteration   1: 12506716.925 ns/op
Iteration   1: 11113098.233 ns/op
Iteration   2: 10990685.418 ns/op
Iteration   3: 10990354.484 ns/op
Iteration   4: 11365203.523 ns/op
Iteration   5: 12501894.963 ns/op
Iteration   6: 10990847.527 ns/op
Iteration   7: 10870570.891 ns/op
Iteration   8: 10870688.598 ns/op
Iteration   9: 10870934.717 ns/op
Iteration  10: 11113176.089 ns/op


Result "serialization_events_4k":
  11167745.444 ±(99.9%) 744703.174 ns/op [Average]
  (min, avg, max) = (10870570.891, 11167745.444, 12501894.963), stdev = 492575.040
  CI (99.9%): [10423042.270, 11912448.618] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_events_64k

# Run progress: 9.17% complete, ETA 01:03:12
# Fork: 1 of 1
# Warmup Iteration   1: 334152223.000 ns/op
Iteration   1: 250154950.000 ns/op
Iteration   2: 250200470.000 ns/op
Iteration   3: 250026581.000 ns/op
Iteration   4: 250153010.250 ns/op
Iteration   5: 250124994.250 ns/op
Iteration   6: 250558000.500 ns/op
Iteration   7: 250212375.750 ns/op
Iteration   8: 250230280.500 ns/op
Iteration   9: 250152259.750 ns/op
Iteration  10: 250052796.750 ns/op


Result "serialization_events_64k":
  250186571.875 ±(99.9%) 220427.770 ns/op [Average]
  (min, avg, max) = (250026581.000, 250186571.875, 250558000.500), stdev = 145799.322
  CI (99.9%): [249966144.105, 250406999.645] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_events_8k

# Run progress: 9.44% complete, ETA 01:03:01
# Fork: 1 of 1
# Warmup Iteration   1: 26317831.947 ns/op
Iteration   1: 25002541.025 ns/op
Iteration   2: 25002588.225 ns/op
Iteration   3: 25001933.250 ns/op
Iteration   4: 25005578.350 ns/op
Iteration   5: 25004667.150 ns/op
Iteration   6: 25003863.275 ns/op
Iteration   7: 27033498.811 ns/op
Iteration   8: 24397952.415 ns/op
Iteration   9: 25006595.000 ns/op
Iteration  10: 25005413.125 ns/op


Result "serialization_events_8k":
  25146463.063 ±(99.9%) 1042977.255 ns/op [Average]
  (min, avg, max) = (24397952.415, 25146463.063, 27033498.811), stdev = 689864.877
  CI (99.9%): [24103485.808, 26189440.317] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_site_1k

# Run progress: 9.72% complete, ETA 01:02:50
# Fork: 1 of 1
# Warmup Iteration   1: 600154.724 ns/op
Iteration   1: 508153.310 ns/op
Iteration   2: 503066.221 ns/op
Iteration   3: 501544.890 ns/op
Iteration   4: 507660.908 ns/op
Iteration   5: 504907.990 ns/op
Iteration   6: 502559.970 ns/op
Iteration   7: 507140.076 ns/op
Iteration   8: 512854.579 ns/op
Iteration   9: 500054.526 ns/op
Iteration  10: 503825.854 ns/op


Result "serialization_site_1k":
  505176.832 ±(99.9%) 5756.127 ns/op [Average]
  (min, avg, max) = (500054.526, 505176.832, 512854.579), stdev = 3807.321
  CI (99.9%): [499420.706, 510932.959] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_site_2k

# Run progress: 10.00% complete, ETA 01:02:39
# Fork: 1 of 1
# Warmup Iteration   1: 943747.135 ns/op
Iteration   1: 774125.714 ns/op
Iteration   2: 762852.123 ns/op
Iteration   3: 761676.154 ns/op
Iteration   4: 765307.562 ns/op
Iteration   5: 764011.516 ns/op
Iteration   6: 759374.301 ns/op
Iteration   7: 767539.111 ns/op
Iteration   8: 800065.439 ns/op
Iteration   9: 758227.083 ns/op
Iteration  10: 778889.302 ns/op


Result "serialization_site_2k":
  769206.831 ±(99.9%) 19053.822 ns/op [Average]
  (min, avg, max) = (758227.083, 769206.831, 800065.439), stdev = 12602.924
  CI (99.9%): [750153.008, 788260.653] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_site_4k

# Run progress: 10.28% complete, ETA 01:02:27
# Fork: 1 of 1
# Warmup Iteration   1: 1529694.951 ns/op
Iteration   1: 1254833.731 ns/op
Iteration   2: 1258010.362 ns/op
Iteration   3: 1245589.308 ns/op
Iteration   4: 1264329.843 ns/op
Iteration   5: 1248538.843 ns/op
Iteration   6: 1267558.456 ns/op
Iteration   7: 1248540.398 ns/op
Iteration   8: 1243899.537 ns/op
Iteration   9: 1245628.408 ns/op
Iteration  10: 1250312.844 ns/op


Result "serialization_site_4k":
  1252724.173 ±(99.9%) 12417.161 ns/op [Average]
  (min, avg, max) = (1243899.537, 1252724.173, 1267558.456), stdev = 8213.183
  CI (99.9%): [1240307.012, 1265141.334] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_site_64k

# Run progress: 10.56% complete, ETA 01:02:16
# Fork: 1 of 1
# Warmup Iteration   1: 27790516.389 ns/op
Iteration   1: 23815981.095 ns/op
Iteration   2: 22731087.364 ns/op
Iteration   3: 23262790.023 ns/op
Iteration   4: 22733858.727 ns/op
Iteration   5: 23261911.860 ns/op
Iteration   6: 22732442.409 ns/op
Iteration   7: 23259682.326 ns/op
Iteration   8: 23260369.558 ns/op
Iteration   9: 22731377.705 ns/op
Iteration  10: 22731657.864 ns/op


Result "serialization_site_64k":
  23052115.893 ±(99.9%) 568025.223 ns/op [Average]
  (min, avg, max) = (22731087.364, 23052115.893, 23815981.095), stdev = 375713.515
  CI (99.9%): [22484090.670, 23620141.116] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_site_8k

# Run progress: 10.83% complete, ETA 01:02:05
# Fork: 1 of 1
# Warmup Iteration   1: 2802373.997 ns/op
Iteration   1: 2336700.942 ns/op
Iteration   2: 2347630.559 ns/op
Iteration   3: 2353152.179 ns/op
Iteration   4: 2331225.713 ns/op
Iteration   5: 2381216.386 ns/op
Iteration   6: 2353136.240 ns/op
Iteration   7: 2337172.979 ns/op
Iteration   8: 2353153.645 ns/op
Iteration   9: 2342130.499 ns/op
Iteration  10: 2347688.425 ns/op


Result "serialization_site_8k":
  2348320.757 ±(99.9%) 21038.067 ns/op [Average]
  (min, avg, max) = (2331225.713, 2348320.757, 2381216.386), stdev = 13915.378
  CI (99.9%): [2327282.690, 2369358.823] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_events_1k

# Run progress: 11.11% complete, ETA 01:01:53
# Fork: 1 of 1
# Warmup Iteration   1: 330277.506 ns/op
Iteration   1: 245486.559 ns/op
Iteration   2: 239890.030 ns/op
Iteration   3: 241702.536 ns/op
Iteration   4: 240777.271 ns/op
Iteration   5: 241135.511 ns/op
Iteration   6: 241660.823 ns/op
Iteration   7: 240932.026 ns/op
Iteration   8: 243507.930 ns/op
Iteration   9: 265920.859 ns/op
Iteration  10: 248656.940 ns/op


Result "deserialization_events_1k":
  244967.048 ±(99.9%) 11829.010 ns/op [Average]
  (min, avg, max) = (239890.030, 244967.048, 265920.859), stdev = 7824.158
  CI (99.9%): [233138.039, 256796.058] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_events_2k

# Run progress: 11.39% complete, ETA 01:01:42
# Fork: 1 of 1
# Warmup Iteration   1: 739422.381 ns/op
Iteration   1: 533385.662 ns/op
Iteration   2: 514719.380 ns/op
Iteration   3: 517918.688 ns/op
Iteration   4: 515514.599 ns/op
Iteration   5: 517381.289 ns/op
Iteration   6: 517918.419 ns/op
Iteration   7: 517652.142 ns/op
Iteration   8: 518990.799 ns/op
Iteration   9: 520888.749 ns/op
Iteration  10: 521172.386 ns/op


Result "deserialization_events_2k":
  519554.211 ±(99.9%) 7958.783 ns/op [Average]
  (min, avg, max) = (514719.380, 519554.211, 533385.662), stdev = 5264.242
  CI (99.9%): [511595.428, 527512.994] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_events_4k

# Run progress: 11.67% complete, ETA 01:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 1411043.371 ns/op
Iteration   1: 988228.263 ns/op
Iteration   2: 975715.760 ns/op
Iteration   3: 961631.126 ns/op
Iteration   4: 961784.101 ns/op
Iteration   5: 961655.743 ns/op
Iteration   6: 969080.281 ns/op
Iteration   7: 967358.428 ns/op
Iteration   8: 973822.274 ns/op
Iteration   9: 975875.792 ns/op
Iteration  10: 970956.949 ns/op


Result "deserialization_events_4k":
  970610.872 ±(99.9%) 12611.381 ns/op [Average]
  (min, avg, max) = (961631.126, 970610.872, 988228.263), stdev = 8341.648
  CI (99.9%): [957999.491, 983222.252] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_events_64k

# Run progress: 11.94% complete, ETA 01:01:18
# Fork: 1 of 1
# Warmup Iteration   1: 27793228.806 ns/op
Iteration   1: 20836053.688 ns/op
Iteration   2: 20413310.408 ns/op
Iteration   3: 20005010.340 ns/op
Iteration   4: 20412469.796 ns/op
Iteration   5: 20411380.796 ns/op
Iteration   6: 20005359.260 ns/op
Iteration   7: 20413316.531 ns/op
Iteration   8: 20410874.510 ns/op
Iteration   9: 20414270.776 ns/op
Iteration  10: 20413537.429 ns/op


Result "deserialization_events_64k":
  20373558.353 ±(99.9%) 354939.265 ns/op [Average]
  (min, avg, max) = (20005010.340, 20373558.353, 20836053.688), stdev = 234770.347
  CI (99.9%): [20018619.088, 20728497.618] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_events_8k

# Run progress: 12.22% complete, ETA 01:01:07
# Fork: 1 of 1
# Warmup Iteration   1: 2771356.316 ns/op
Iteration   1: 2008291.731 ns/op
Iteration   2: 1957200.548 ns/op
Iteration   3: 1976472.818 ns/op
Iteration   4: 1949524.435 ns/op
Iteration   5: 1953367.395 ns/op
Iteration   6: 1953334.525 ns/op
Iteration   7: 1961037.516 ns/op
Iteration   8: 1957182.499 ns/op
Iteration   9: 1976514.162 ns/op
Iteration  10: 1964888.864 ns/op


Result "deserialization_events_8k":
  1965781.449 ±(99.9%) 26575.172 ns/op [Average]
  (min, avg, max) = (1949524.435, 1965781.449, 2008291.731), stdev = 17577.831
  CI (99.9%): [1939206.278, 1992356.621] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_site_1k

# Run progress: 12.50% complete, ETA 01:00:55
# Fork: 1 of 1
# Warmup Iteration   1: 585394.270 ns/op
Iteration   1: 286802.834 ns/op
Iteration   2: 273773.248 ns/op
Iteration   3: 272582.363 ns/op
Iteration   4: 274415.629 ns/op
Iteration   5: 274215.661 ns/op
Iteration   6: 272874.176 ns/op
Iteration   7: 272800.812 ns/op
Iteration   8: 276571.522 ns/op
Iteration   9: 275122.158 ns/op
Iteration  10: 277347.000 ns/op


Result "deserialization_site_1k":
  275650.540 ±(99.9%) 6389.076 ns/op [Average]
  (min, avg, max) = (272582.363, 275650.540, 286802.834), stdev = 4225.978
  CI (99.9%): [269261.465, 282039.616] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_site_2k

# Run progress: 12.78% complete, ETA 01:00:43
# Fork: 1 of 1
# Warmup Iteration   1: 1439476.505 ns/op
Iteration   1: 531959.289 ns/op
Iteration   2: 523615.233 ns/op
Iteration   3: 516878.590 ns/op
Iteration   4: 518446.263 ns/op
Iteration   5: 517371.895 ns/op
Iteration   6: 518456.572 ns/op
Iteration   7: 520601.390 ns/op
Iteration   8: 519527.595 ns/op
Iteration   9: 521429.865 ns/op
Iteration  10: 557461.730 ns/op


Result "deserialization_site_2k":
  524574.842 ±(99.9%) 18682.025 ns/op [Average]
  (min, avg, max) = (516878.590, 524574.842, 557461.730), stdev = 12357.003
  CI (99.9%): [505892.817, 543256.867] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_site_4k

# Run progress: 13.06% complete, ETA 01:00:31
# Fork: 1 of 1
# Warmup Iteration   1: 2066932.035 ns/op
Iteration   1: 934712.210 ns/op
Iteration   2: 919215.735 ns/op
Iteration   3: 924446.735 ns/op
Iteration   4: 903426.042 ns/op
Iteration   5: 906716.861 ns/op
Iteration   6: 902767.119 ns/op
Iteration   7: 916693.050 ns/op
Iteration   8: 911681.564 ns/op
Iteration   9: 909192.008 ns/op
Iteration  10: 913343.556 ns/op


Result "deserialization_site_4k":
  914219.488 ±(99.9%) 15051.717 ns/op [Average]
  (min, avg, max) = (902767.119, 914219.488, 934712.210), stdev = 9955.779
  CI (99.9%): [899167.772, 929271.205] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_site_64k

# Run progress: 13.33% complete, ETA 01:00:20
# Fork: 1 of 1
# Warmup Iteration   1: 21289106.277 ns/op
Iteration   1: 16670127.067 ns/op
Iteration   2: 15386394.738 ns/op
Iteration   3: 15626803.094 ns/op
Iteration   4: 15386478.615 ns/op
Iteration   5: 15628812.453 ns/op
Iteration   6: 15626891.516 ns/op
Iteration   7: 15389927.108 ns/op
Iteration   8: 15627248.781 ns/op
Iteration   9: 15630714.172 ns/op
Iteration  10: 15629204.922 ns/op


Result "deserialization_site_64k":
  15660260.247 ±(99.9%) 563214.743 ns/op [Average]
  (min, avg, max) = (15386394.738, 15660260.247, 16670127.067), stdev = 372531.680
  CI (99.9%): [15097045.504, 16223474.989] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_site_8k

# Run progress: 13.61% complete, ETA 01:00:08
# Fork: 1 of 1
# Warmup Iteration   1: 3013396.753 ns/op
Iteration   1: 1855482.675 ns/op
Iteration   2: 1733303.350 ns/op
Iteration   3: 1745398.157 ns/op
Iteration   4: 1730256.804 ns/op
Iteration   5: 1748455.073 ns/op
Iteration   6: 1748684.028 ns/op
Iteration   7: 1742337.310 ns/op
Iteration   8: 1785878.168 ns/op
Iteration   9: 1865880.804 ns/op
Iteration  10: 1996229.910 ns/op


Result "deserialization_site_8k":
  1795190.628 ±(99.9%) 130251.986 ns/op [Average]
  (min, avg, max) = (1730256.804, 1795190.628, 1996229.910), stdev = 86153.624
  CI (99.9%): [1664938.642, 1925442.614] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_events_1k

# Run progress: 13.89% complete, ETA 00:59:57
# Fork: 1 of 1
# Warmup Iteration   1: 663490.908 ns/op
Iteration   1: 351772.627 ns/op
Iteration   2: 337775.614 ns/op
Iteration   3: 342967.244 ns/op
Iteration   4: 302783.999 ns/op
Iteration   5: 301050.386 ns/op
Iteration   6: 302148.724 ns/op
Iteration   7: 311114.505 ns/op
Iteration   8: 305191.224 ns/op
Iteration   9: 303474.555 ns/op
Iteration  10: 303747.936 ns/op


Result "serialization_events_1k":
  316202.681 ±(99.9%) 29892.446 ns/op [Average]
  (min, avg, max) = (301050.386, 316202.681, 351772.627), stdev = 19772.002
  CI (99.9%): [286310.235, 346095.127] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_events_2k

# Run progress: 14.17% complete, ETA 00:59:46
# Fork: 1 of 1
# Warmup Iteration   1: 940232.286 ns/op
Iteration   1: 654527.437 ns/op
Iteration   2: 598857.116 ns/op
Iteration   3: 599586.878 ns/op
Iteration   4: 596368.825 ns/op
Iteration   5: 595055.139 ns/op
Iteration   6: 597883.521 ns/op
Iteration   7: 599720.552 ns/op
Iteration   8: 603652.576 ns/op
Iteration   9: 599210.758 ns/op
Iteration  10: 596722.911 ns/op


Result "serialization_events_2k":
  604158.571 ±(99.9%) 26991.719 ns/op [Average]
  (min, avg, max) = (595055.139, 604158.571, 654527.437), stdev = 17853.351
  CI (99.9%): [577166.852, 631150.291] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_events_4k

# Run progress: 14.44% complete, ETA 00:59:35
# Fork: 1 of 1
# Warmup Iteration   1: 2398984.480 ns/op
Iteration   1: 1233233.761 ns/op
Iteration   2: 1197737.637 ns/op
Iteration   3: 1193449.628 ns/op
Iteration   4: 1189193.137 ns/op
Iteration   5: 1195015.251 ns/op
Iteration   6: 1239301.318 ns/op
Iteration   7: 1212464.950 ns/op
Iteration   8: 1190606.886 ns/op
Iteration   9: 1200895.709 ns/op
Iteration  10: 1207863.550 ns/op


Result "serialization_events_4k":
  1205976.183 ±(99.9%) 26608.659 ns/op [Average]
  (min, avg, max) = (1189193.137, 1205976.183, 1239301.318), stdev = 17599.981
  CI (99.9%): [1179367.523, 1232584.842] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_events_64k

# Run progress: 14.72% complete, ETA 00:59:23
# Fork: 1 of 1
# Warmup Iteration   1: 45486374.455 ns/op
Iteration   1: 32264150.968 ns/op
Iteration   2: 30309751.455 ns/op
Iteration   3: 29428566.529 ns/op
Iteration   4: 29418493.059 ns/op
Iteration   5: 29418551.265 ns/op
Iteration   6: 29415274.000 ns/op
Iteration   7: 29423155.765 ns/op
Iteration   8: 29421521.647 ns/op
Iteration   9: 29422122.882 ns/op
Iteration  10: 29420457.029 ns/op


Result "serialization_events_64k":
  29794204.460 ±(99.9%) 1378351.800 ns/op [Average]
  (min, avg, max) = (29415274.000, 29794204.460, 32264150.968), stdev = 911694.374
  CI (99.9%): [28415852.660, 31172556.260] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_events_8k

# Run progress: 15.00% complete, ETA 00:59:11
# Fork: 1 of 1
# Warmup Iteration   1: 3847764.819 ns/op
Iteration   1: 2445228.166 ns/op
Iteration   2: 2315063.394 ns/op
Iteration   3: 2314996.620 ns/op
Iteration   4: 2325845.067 ns/op
Iteration   5: 2342210.185 ns/op
Iteration   6: 2331285.466 ns/op
Iteration   7: 2386862.322 ns/op
Iteration   8: 2347676.364 ns/op
Iteration   9: 2347680.958 ns/op
Iteration  10: 2347684.315 ns/op


Result "serialization_events_8k":
  2350453.286 ±(99.9%) 59375.560 ns/op [Average]
  (min, avg, max) = (2314996.620, 2350453.286, 2445228.166), stdev = 39273.257
  CI (99.9%): [2291077.726, 2409828.846] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_site_1k

# Run progress: 15.28% complete, ETA 00:59:00
# Fork: 1 of 1
# Warmup Iteration   1: 816702.376 ns/op
Iteration   1: 496810.022 ns/op
Iteration   2: 304069.211 ns/op
Iteration   3: 298448.406 ns/op
Iteration   4: 300472.377 ns/op
Iteration   5: 299976.046 ns/op
Iteration   6: 298484.912 ns/op
Iteration   7: 300130.421 ns/op
Iteration   8: 302780.296 ns/op
Iteration   9: 302144.633 ns/op
Iteration  10: 304438.811 ns/op


Result "serialization_site_1k":
  320775.513 ±(99.9%) 93566.339 ns/op [Average]
  (min, avg, max) = (298448.406, 320775.513, 496810.022), stdev = 61888.340
  CI (99.9%): [227209.174, 414341.853] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_site_2k

# Run progress: 15.56% complete, ETA 00:58:48
# Fork: 1 of 1
# Warmup Iteration   1: 1175530.741 ns/op
Iteration   1: 521161.866 ns/op
Iteration   2: 507916.147 ns/op
Iteration   3: 512874.205 ns/op
Iteration   4: 506638.794 ns/op
Iteration   5: 510776.505 ns/op
Iteration   6: 518446.363 ns/op
Iteration   7: 513664.054 ns/op
Iteration   8: 511044.676 ns/op
Iteration   9: 512444.057 ns/op
Iteration  10: 507910.827 ns/op


Result "serialization_site_2k":
  512287.749 ±(99.9%) 7000.209 ns/op [Average]
  (min, avg, max) = (506638.794, 512287.749, 521161.866), stdev = 4630.205
  CI (99.9%): [505287.540, 519287.959] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_site_4k

# Run progress: 15.83% complete, ETA 00:58:37
# Fork: 1 of 1
# Warmup Iteration   1: 3922971.592 ns/op
Iteration   1: 1644838.217 ns/op
Iteration   2: 1006134.479 ns/op
Iteration   3: 985311.844 ns/op
Iteration   4: 987344.846 ns/op
Iteration   5: 991178.192 ns/op
Iteration   6: 989227.844 ns/op
Iteration   7: 990210.632 ns/op
Iteration   8: 995112.128 ns/op
Iteration   9: 1005127.301 ns/op
Iteration  10: 996118.343 ns/op


Result "serialization_site_4k":
  1059060.383 ±(99.9%) 311352.691 ns/op [Average]
  (min, avg, max) = (985311.844, 1059060.383, 1644838.217), stdev = 205940.528
  CI (99.9%): [747707.691, 1370413.074] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_site_64k

# Run progress: 16.11% complete, ETA 00:58:25
# Fork: 1 of 1
# Warmup Iteration   1: 62536698.813 ns/op
Iteration   1: 22229509.356 ns/op
Iteration   2: 21281990.191 ns/op
Iteration   3: 20836579.896 ns/op
Iteration   4: 20411531.408 ns/op
Iteration   5: 20412287.327 ns/op
Iteration   6: 20412080.408 ns/op
Iteration   7: 20837409.625 ns/op
Iteration   8: 20839770.208 ns/op
Iteration   9: 20837431.500 ns/op
Iteration  10: 20837667.896 ns/op


Result "serialization_site_64k":
  20893625.781 ±(99.9%) 819911.172 ns/op [Average]
  (min, avg, max) = (20411531.408, 20893625.781, 22229509.356), stdev = 542320.474
  CI (99.9%): [20073714.610, 21713536.953] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_site_8k

# Run progress: 16.39% complete, ETA 00:58:14
# Fork: 1 of 1
# Warmup Iteration   1: 8407083.933 ns/op
Iteration   1: 2801433.101 ns/op
Iteration   2: 2062140.627 ns/op
Iteration   3: 2053626.916 ns/op
Iteration   4: 2045206.380 ns/op
Iteration   5: 2037729.314 ns/op
Iteration   6: 2053653.090 ns/op
Iteration   7: 2040987.094 ns/op
Iteration   8: 2053777.029 ns/op
Iteration   9: 2062131.447 ns/op
Iteration  10: 2053589.899 ns/op


Result "serialization_site_8k":
  2126427.490 ±(99.9%) 358778.422 ns/op [Average]
  (min, avg, max) = (2037729.314, 2126427.490, 2801433.101), stdev = 237309.712
  CI (99.9%): [1767649.068, 2485205.911] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_events_1k

# Run progress: 16.67% complete, ETA 00:58:02
# Fork: 1 of 1
# Warmup Iteration   1: 15626900.406 ns/op
Iteration   1: 8334407.108 ns/op
Iteration   2: 7813416.984 ns/op
Iteration   3: 7693236.977 ns/op
Iteration   4: 7354157.904 ns/op
Iteration   5: 7354191.596 ns/op
Iteration   6: 7408456.741 ns/op
Iteration   7: 7408134.985 ns/op
Iteration   8: 7408624.800 ns/op
Iteration   9: 7353812.787 ns/op
Iteration  10: 7353840.816 ns/op


Result "deserialization_events_1k":
  7548228.070 ±(99.9%) 483105.765 ns/op [Average]
  (min, avg, max) = (7353812.787, 7548228.070, 8334407.108), stdev = 319544.551
  CI (99.9%): [7065122.305, 8031333.835] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_events_2k

# Run progress: 16.94% complete, ETA 00:57:50
# Fork: 1 of 1
# Warmup Iteration   1: 27792694.444 ns/op
Iteration   1: 14495880.507 ns/op
Iteration   2: 14086603.380 ns/op
Iteration   3: 13703089.178 ns/op
Iteration   4: 13159471.342 ns/op
Iteration   5: 13159415.579 ns/op
Iteration   6: 13159176.816 ns/op
Iteration   7: 13160554.750 ns/op
Iteration   8: 13159556.158 ns/op
Iteration   9: 12988383.364 ns/op
Iteration  10: 12989222.558 ns/op


Result "deserialization_events_2k":
  13406135.363 ±(99.9%) 779239.743 ns/op [Average]
  (min, avg, max) = (12988383.364, 13406135.363, 14495880.507), stdev = 515418.842
  CI (99.9%): [12626895.621, 14185375.106] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_events_4k

# Run progress: 17.22% complete, ETA 00:57:38
# Fork: 1 of 1
# Warmup Iteration   1: 71540000.857 ns/op
Iteration   1: 35721836.107 ns/op
Iteration   2: 34496911.690 ns/op
Iteration   3: 32264416.484 ns/op
Iteration   4: 32271281.968 ns/op
Iteration   5: 32268676.065 ns/op
Iteration   6: 32278284.000 ns/op
Iteration   7: 32273815.645 ns/op
Iteration   8: 32264352.774 ns/op
Iteration   9: 32263230.645 ns/op
Iteration  10: 31253855.656 ns/op


Result "deserialization_events_4k":
  32735666.103 ±(99.9%) 1999275.526 ns/op [Average]
  (min, avg, max) = (31253855.656, 32735666.103, 35721836.107), stdev = 1322396.973
  CI (99.9%): [30736390.578, 34734941.629] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_events_64k

# Run progress: 17.50% complete, ETA 00:57:27
# Fork: 1 of 1
# Warmup Iteration   1: Infinity ns/op
Iteration   1: 1001226504.000 ns/op
Iteration   2: 1001131465.000 ns/op
Iteration   3: 1004931371.000 ns/op
Iteration   4: 1005385623.000 ns/op
Iteration   5: 1000269802.000 ns/op
Iteration   6: 1000645110.000 ns/op
Iteration   7: 1005545379.000 ns/op
Iteration   8: 1004130190.000 ns/op
Iteration   9: 1004812270.000 ns/op
Iteration  10: 1005168993.000 ns/op


Result "deserialization_events_64k":
  1003324670.700 ±(99.9%) 3333279.334 ns/op [Average]
  (min, avg, max) = (1000269802.000, 1003324670.700, 1005545379.000), stdev = 2204757.896
  CI (99.9%): [999991391.366, 1006657950.034] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_events_8k

# Run progress: 17.78% complete, ETA 00:57:15
# Fork: 1 of 1
# Warmup Iteration   1: 200214361.200 ns/op
Iteration   1: 83399316.583 ns/op
Iteration   2: 83401877.333 ns/op
Iteration   3: 83409486.750 ns/op
Iteration   4: 76958857.385 ns/op
Iteration   5: 76948510.692 ns/op
Iteration   6: 76994812.231 ns/op
Iteration   7: 76955461.692 ns/op
Iteration   8: 76949109.462 ns/op
Iteration   9: 76947955.462 ns/op
Iteration  10: 76965242.615 ns/op


Result "deserialization_events_8k":
  78893063.021 ±(99.9%) 4705760.711 ns/op [Average]
  (min, avg, max) = (76947955.462, 78893063.021, 83409486.750), stdev = 3112569.348
  CI (99.9%): [74187302.309, 83598823.732] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_site_1k

# Run progress: 18.06% complete, ETA 00:57:03
# Fork: 1 of 1
# Warmup Iteration   1: 10995065.231 ns/op
Iteration   1: 6098546.000 ns/op
Iteration   2: 5781294.555 ns/op
Iteration   3: 5465568.508 ns/op
Iteration   4: 5236240.639 ns/op
Iteration   5: 5263763.837 ns/op
Iteration   6: 5236150.827 ns/op
Iteration   7: 5349089.278 ns/op
Iteration   8: 5208930.318 ns/op
Iteration   9: 5208770.938 ns/op
Iteration  10: 5209626.333 ns/op


Result "deserialization_site_1k":
  5405798.123 ±(99.9%) 456751.441 ns/op [Average]
  (min, avg, max) = (5208770.938, 5405798.123, 6098546.000), stdev = 302112.798
  CI (99.9%): [4949046.683, 5862549.564] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_site_2k

# Run progress: 18.33% complete, ETA 00:56:51
# Fork: 1 of 1
# Warmup Iteration   1: 23944013.643 ns/op
Iteration   1: 11237759.730 ns/op
Iteration   2: 8850694.743 ns/op
Iteration   3: 8335446.658 ns/op
Iteration   4: 7937469.532 ns/op
Iteration   5: 7937873.587 ns/op
Iteration   6: 7937280.198 ns/op
Iteration   7: 7937712.968 ns/op
Iteration   8: 7937370.690 ns/op
Iteration   9: 7875287.047 ns/op
Iteration  10: 7874862.150 ns/op


Result "deserialization_site_2k":
  8386175.731 ±(99.9%) 1583942.272 ns/op [Average]
  (min, avg, max) = (7874862.150, 8386175.731, 11237759.730), stdev = 1047679.741
  CI (99.9%): [6802233.459, 9970118.002] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_site_4k

# Run progress: 18.61% complete, ETA 00:56:39
# Fork: 1 of 1
# Warmup Iteration   1: 31265421.031 ns/op
Iteration   1: 11114112.911 ns/op
Iteration   2: 10418030.365 ns/op
Iteration   3: 10103960.495 ns/op
Iteration   4: 9435780.811 ns/op
Iteration   5: 9347604.682 ns/op
Iteration   6: 9435491.462 ns/op
Iteration   7: 9434855.953 ns/op
Iteration   8: 9435961.142 ns/op
Iteration   9: 9435377.434 ns/op
Iteration  10: 9346950.196 ns/op


Result "deserialization_site_4k":
  9750812.545 ±(99.9%) 908694.022 ns/op [Average]
  (min, avg, max) = (9346950.196, 9750812.545, 11114112.911), stdev = 601044.833
  CI (99.9%): [8842118.523, 10659506.567] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_site_64k

# Run progress: 18.89% complete, ETA 00:56:27
# Fork: 1 of 1
# Warmup Iteration   1: 200160406.400 ns/op
Iteration   1: 76979403.846 ns/op
Iteration   2: 71468186.286 ns/op
Iteration   3: 62537851.125 ns/op
Iteration   4: 55569845.000 ns/op
Iteration   5: 52700787.105 ns/op
Iteration   6: 52658142.684 ns/op
Iteration   7: 52663477.211 ns/op
Iteration   8: 52643354.053 ns/op
Iteration   9: 52651220.789 ns/op
Iteration  10: 52642507.632 ns/op


Result "deserialization_site_64k":
  58251477.573 ±(99.9%) 13695796.767 ns/op [Average]
  (min, avg, max) = (52642507.632, 58251477.573, 76979403.846), stdev = 9058921.571
  CI (99.9%): [44555680.806, 71947274.340] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_site_8k

# Run progress: 19.17% complete, ETA 00:56:16
# Fork: 1 of 1
# Warmup Iteration   1: 38480743.769 ns/op
Iteration   1: 14928066.597 ns/op
Iteration   2: 14496594.971 ns/op
Iteration   3: 13159187.289 ns/op
Iteration   4: 12197276.037 ns/op
Iteration   5: 12197369.610 ns/op
Iteration   6: 12661089.696 ns/op
Iteration   7: 12197966.902 ns/op
Iteration   8: 12197721.829 ns/op
Iteration   9: 12197802.695 ns/op
Iteration  10: 12197475.134 ns/op


Result "deserialization_site_8k":
  12843055.076 ±(99.9%) 1570697.454 ns/op [Average]
  (min, avg, max) = (12197276.037, 12843055.076, 14928066.597), stdev = 1038919.115
  CI (99.9%): [11272357.622, 14413752.530] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_events_1k

# Run progress: 19.44% complete, ETA 00:56:04
# Fork: 1 of 1
# Warmup Iteration   1: 4331242.900 ns/op
Iteration   1: 2057839.784 ns/op
Iteration   2: 1980365.020 ns/op
Iteration   3: 1934455.582 ns/op
Iteration   4: 1890545.456 ns/op
Iteration   5: 1897760.161 ns/op
Iteration   6: 1901334.257 ns/op
Iteration   7: 1897708.414 ns/op
Iteration   8: 1908571.992 ns/op
Iteration   9: 1908592.767 ns/op
Iteration  10: 1908587.952 ns/op


Result "serialization_events_1k":
  1928576.138 ±(99.9%) 79227.459 ns/op [Average]
  (min, avg, max) = (1890545.456, 1928576.138, 2057839.784), stdev = 52404.059
  CI (99.9%): [1849348.679, 2007803.598] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_events_2k

# Run progress: 19.72% complete, ETA 00:55:52
# Fork: 1 of 1
# Warmup Iteration   1: 6100481.220 ns/op
Iteration   1: 3663426.352 ns/op
Iteration   2: 3484888.798 ns/op
Iteration   3: 3425135.185 ns/op
Iteration   4: 3333657.233 ns/op
Iteration   5: 3333738.240 ns/op
Iteration   6: 3333539.833 ns/op
Iteration   7: 3344880.077 ns/op
Iteration   8: 3367463.690 ns/op
Iteration   9: 3367339.586 ns/op
Iteration  10: 3356042.403 ns/op


Result "serialization_events_2k":
  3401011.140 ±(99.9%) 157379.942 ns/op [Average]
  (min, avg, max) = (3333539.833, 3401011.140, 3663426.352), stdev = 104097.087
  CI (99.9%): [3243631.198, 3558391.081] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_events_4k

# Run progress: 20.00% complete, ETA 00:55:40
# Fork: 1 of 1
# Warmup Iteration   1: 13895935.681 ns/op
Iteration   1: 8131082.675 ns/op
Iteration   2: 7693335.000 ns/op
Iteration   3: 7634358.321 ns/op
Iteration   4: 7408360.044 ns/op
Iteration   5: 7408225.548 ns/op
Iteration   6: 7408299.704 ns/op
Iteration   7: 7466437.104 ns/op
Iteration   8: 7520303.105 ns/op
Iteration   9: 7520160.970 ns/op
Iteration  10: 7463715.784 ns/op


Result "serialization_events_4k":
  7565427.825 ±(99.9%) 334048.242 ns/op [Average]
  (min, avg, max) = (7408225.548, 7565427.825, 8131082.675), stdev = 220952.229
  CI (99.9%): [7231379.583, 7899476.068] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_events_64k

# Run progress: 20.28% complete, ETA 00:55:28
# Fork: 1 of 1
# Warmup Iteration   1: 250259068.250 ns/op
Iteration   1: 200085955.800 ns/op
Iteration   2: 166701594.000 ns/op
Iteration   3: 166732923.167 ns/op
Iteration   4: 166737718.333 ns/op
Iteration   5: 166757096.833 ns/op
Iteration   6: 166847507.167 ns/op
Iteration   7: 166829356.833 ns/op
Iteration   8: 166727419.167 ns/op
Iteration   9: 166728437.000 ns/op
Iteration  10: 166832485.833 ns/op


Result "serialization_events_64k":
  170098049.413 ±(99.9%) 15930143.106 ns/op [Average]
  (min, avg, max) = (166701594.000, 170098049.413, 200085955.800), stdev = 10536803.333
  CI (99.9%): [154167906.307, 186028192.520] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_events_8k

# Run progress: 20.56% complete, ETA 00:55:16
# Fork: 1 of 1
# Warmup Iteration   1: 27802096.694 ns/op
Iteration   1: 17860707.732 ns/op
Iteration   2: 16668373.917 ns/op
Iteration   3: 16398035.082 ns/op
Iteration   4: 15876868.048 ns/op
Iteration   5: 15876915.810 ns/op
Iteration   6: 16131671.419 ns/op
Iteration   7: 16131514.645 ns/op
Iteration   8: 16134865.500 ns/op
Iteration   9: 16132681.710 ns/op
Iteration  10: 16132448.113 ns/op


Result "serialization_events_8k":
  16334408.198 ±(99.9%) 882619.245 ns/op [Average]
  (min, avg, max) = (15876868.048, 16334408.198, 17860707.732), stdev = 583797.983
  CI (99.9%): [15451788.952, 17217027.443] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_site_1k

# Run progress: 20.83% complete, ETA 00:55:04
# Fork: 1 of 1
# Warmup Iteration   1: 2170200.115 ns/op
Iteration   1: 1543455.233 ns/op
Iteration   2: 1536232.719 ns/op
Iteration   3: 1522223.793 ns/op
Iteration   4: 1449443.367 ns/op
Iteration   5: 1449458.997 ns/op
Iteration   6: 1433071.593 ns/op
Iteration   7: 1445496.348 ns/op
Iteration   8: 1466464.472 ns/op
Iteration   9: 1432840.712 ns/op
Iteration  10: 1436965.408 ns/op


Result "serialization_site_1k":
  1471565.264 ±(99.9%) 67195.041 ns/op [Average]
  (min, avg, max) = (1432840.712, 1471565.264, 1543455.233), stdev = 44445.359
  CI (99.9%): [1404370.224, 1538760.305] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_site_2k

# Run progress: 21.11% complete, ETA 00:54:53
# Fork: 1 of 1
# Warmup Iteration   1: 3761110.816 ns/op
Iteration   1: 2865582.762 ns/op
Iteration   2: 2325804.428 ns/op
Iteration   3: 2283353.952 ns/op
Iteration   4: 2197992.138 ns/op
Iteration   5: 2202857.945 ns/op
Iteration   6: 2197527.760 ns/op
Iteration   7: 2198027.268 ns/op
Iteration   8: 2207685.826 ns/op
Iteration   9: 2193580.228 ns/op
Iteration  10: 2202928.106 ns/op


Result "serialization_site_2k":
  2287534.041 ±(99.9%) 314429.178 ns/op [Average]
  (min, avg, max) = (2193580.228, 2287534.041, 2865582.762), stdev = 207975.433
  CI (99.9%): [1973104.863, 2601963.219] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_site_4k

# Run progress: 21.39% complete, ETA 00:54:41
# Fork: 1 of 1
# Warmup Iteration   1: 9175067.826 ns/op
Iteration   1: 4444855.342 ns/op
Iteration   2: 4049005.676 ns/op
Iteration   3: 3861392.008 ns/op
Iteration   4: 3745692.247 ns/op
Iteration   5: 3731745.407 ns/op
Iteration   6: 3717906.197 ns/op
Iteration   7: 3717763.249 ns/op
Iteration   8: 3731765.246 ns/op
Iteration   9: 3731784.063 ns/op
Iteration  10: 3717936.182 ns/op


Result "serialization_site_4k":
  3844984.562 ±(99.9%) 355823.708 ns/op [Average]
  (min, avg, max) = (3717763.249, 3844984.562, 4444855.342), stdev = 235355.351
  CI (99.9%): [3489160.854, 4200808.269] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_site_64k

# Run progress: 21.67% complete, ETA 00:54:29
# Fork: 1 of 1
# Warmup Iteration   1: 200361105.000 ns/op
Iteration   1: 76945851.615 ns/op
Iteration   2: 71466038.429 ns/op
Iteration   3: 66675610.333 ns/op
Iteration   4: 66708714.867 ns/op
Iteration   5: 66701888.067 ns/op
Iteration   6: 66690278.467 ns/op
Iteration   7: 66698086.400 ns/op
Iteration   8: 66705856.733 ns/op
Iteration   9: 66695812.467 ns/op
Iteration  10: 66711445.600 ns/op


Result "serialization_site_64k":
  68199958.298 ±(99.9%) 5168763.877 ns/op [Average]
  (min, avg, max) = (66675610.333, 68199958.298, 76945851.615), stdev = 3418817.275
  CI (99.9%): [63031194.420, 73368722.175] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_site_8k

# Run progress: 21.94% complete, ETA 00:54:17
# Fork: 1 of 1
# Warmup Iteration   1: 11116279.733 ns/op
Iteration   1: 8773402.167 ns/op
Iteration   2: 8334620.233 ns/op
Iteration   3: 8131158.984 ns/op
Iteration   4: 7813846.672 ns/op
Iteration   5: 7752942.481 ns/op
Iteration   6: 7874732.717 ns/op
Iteration   7: 7813694.602 ns/op
Iteration   8: 7813659.891 ns/op
Iteration   9: 7814731.297 ns/op
Iteration  10: 7753216.240 ns/op


Result "serialization_site_8k":
  7987600.528 ±(99.9%) 504412.900 ns/op [Average]
  (min, avg, max) = (7752942.481, 7987600.528, 8773402.167), stdev = 333637.902
  CI (99.9%): [7483187.628, 8492013.428] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_events_1k

# Run progress: 22.22% complete, ETA 00:54:05
# Fork: 1 of 1
# Warmup Iteration   1: 425691.406 ns/op
Iteration   1: 295970.122 ns/op
Iteration   2: 284931.878 ns/op
Iteration   3: 287300.246 ns/op
Iteration   4: 287749.770 ns/op
Iteration   5: 288715.268 ns/op
Iteration   6: 289126.403 ns/op
Iteration   7: 290384.616 ns/op
Iteration   8: 287959.628 ns/op
Iteration   9: 291510.066 ns/op
Iteration  10: 289631.339 ns/op


Result "deserialization_events_1k":
  289327.934 ±(99.9%) 4459.471 ns/op [Average]
  (min, avg, max) = (284931.878, 289327.934, 295970.122), stdev = 2949.664
  CI (99.9%): [284868.463, 293787.404] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_events_2k

# Run progress: 22.50% complete, ETA 00:53:54
# Fork: 1 of 1
# Warmup Iteration   1: 965682.607 ns/op
Iteration   1: 586936.130 ns/op
Iteration   2: 568549.678 ns/op
Iteration   3: 568560.079 ns/op
Iteration   4: 571469.757 ns/op
Iteration   5: 569853.732 ns/op
Iteration   6: 574447.304 ns/op
Iteration   7: 575149.370 ns/op
Iteration   8: 573222.985 ns/op
Iteration   9: 571242.572 ns/op
Iteration  10: 569277.019 ns/op


Result "deserialization_events_2k":
  572870.863 ±(99.9%) 8273.438 ns/op [Average]
  (min, avg, max) = (568549.678, 572870.863, 586936.130), stdev = 5472.367
  CI (99.9%): [564597.424, 581144.301] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_events_4k

# Run progress: 22.78% complete, ETA 00:53:42
# Fork: 1 of 1
# Warmup Iteration   1: 1805880.930 ns/op
Iteration   1: 1111275.233 ns/op
Iteration   2: 1111231.176 ns/op
Iteration   3: 1085895.866 ns/op
Iteration   4: 1111337.228 ns/op
Iteration   5: 1093142.577 ns/op
Iteration   6: 1091891.158 ns/op
Iteration   7: 1108796.366 ns/op
Iteration   8: 1100227.125 ns/op
Iteration   9: 1095392.588 ns/op
Iteration  10: 1096585.536 ns/op


Result "deserialization_events_4k":
  1100577.485 ±(99.9%) 14258.262 ns/op [Average]
  (min, avg, max) = (1085895.866, 1100577.485, 1111337.228), stdev = 9430.957
  CI (99.9%): [1086319.224, 1114835.747] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_events_64k

# Run progress: 23.06% complete, ETA 00:53:31
# Fork: 1 of 1
# Warmup Iteration   1: 32273765.452 ns/op
Iteration   1: 23816959.952 ns/op
Iteration   2: 22731194.705 ns/op
Iteration   3: 22734081.568 ns/op
Iteration   4: 22739615.750 ns/op
Iteration   5: 22733543.182 ns/op
Iteration   6: 22732550.068 ns/op
Iteration   7: 22738224.364 ns/op
Iteration   8: 22733418.114 ns/op
Iteration   9: 22730857.455 ns/op
Iteration  10: 22730832.295 ns/op


Result "deserialization_events_64k":
  22842127.745 ±(99.9%) 517862.558 ns/op [Average]
  (min, avg, max) = (22730832.295, 22842127.745, 23816959.952), stdev = 342534.018
  CI (99.9%): [22324265.187, 23359990.304] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_events_8k

# Run progress: 23.33% complete, ETA 00:53:19
# Fork: 1 of 1
# Warmup Iteration   1: 3908192.379 ns/op
Iteration   1: 2398384.566 ns/op
Iteration   2: 2304439.968 ns/op
Iteration   3: 2272948.389 ns/op
Iteration   4: 2273014.614 ns/op
Iteration   5: 2293871.518 ns/op
Iteration   6: 2288594.334 ns/op
Iteration   7: 2294024.034 ns/op
Iteration   8: 2288850.087 ns/op
Iteration   9: 2299084.154 ns/op
Iteration  10: 2293805.580 ns/op


Result "deserialization_events_8k":
  2300701.724 ±(99.9%) 54092.674 ns/op [Average]
  (min, avg, max) = (2272948.389, 2300701.724, 2398384.566), stdev = 35778.955
  CI (99.9%): [2246609.050, 2354794.399] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_site_1k

# Run progress: 23.61% complete, ETA 00:53:07
# Fork: 1 of 1
# Warmup Iteration   1: 549899.614 ns/op
Iteration   1: 241980.700 ns/op
Iteration   2: 236044.873 ns/op
Iteration   3: 235322.196 ns/op
Iteration   4: 235503.936 ns/op
Iteration   5: 233501.346 ns/op
Iteration   6: 234380.514 ns/op
Iteration   7: 233918.415 ns/op
Iteration   8: 237883.527 ns/op
Iteration   9: 235091.688 ns/op
Iteration  10: 235427.316 ns/op


Result "deserialization_site_1k":
  235905.451 ±(99.9%) 3713.092 ns/op [Average]
  (min, avg, max) = (233501.346, 235905.451, 241980.700), stdev = 2455.981
  CI (99.9%): [232192.359, 239618.543] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_site_2k

# Run progress: 23.89% complete, ETA 00:52:56
# Fork: 1 of 1
# Warmup Iteration   1: 1242801.516 ns/op
Iteration   1: 446692.970 ns/op
Iteration   2: 429966.842 ns/op
Iteration   3: 434438.922 ns/op
Iteration   4: 432187.834 ns/op
Iteration   5: 431826.008 ns/op
Iteration   6: 433129.797 ns/op
Iteration   7: 435005.028 ns/op
Iteration   8: 434075.714 ns/op
Iteration   9: 438119.988 ns/op
Iteration  10: 435993.523 ns/op


Result "deserialization_site_2k":
  435143.663 ±(99.9%) 7041.327 ns/op [Average]
  (min, avg, max) = (429966.842, 435143.663, 446692.970), stdev = 4657.402
  CI (99.9%): [428102.335, 442184.990] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_site_4k

# Run progress: 24.17% complete, ETA 00:52:44
# Fork: 1 of 1
# Warmup Iteration   1: 2238034.579 ns/op
Iteration   1: 832776.702 ns/op
Iteration   2: 774682.936 ns/op
Iteration   3: 780727.632 ns/op
Iteration   4: 791991.390 ns/op
Iteration   5: 776486.634 ns/op
Iteration   6: 777091.866 ns/op
Iteration   7: 780732.546 ns/op
Iteration   8: 781423.603 ns/op
Iteration   9: 788127.541 ns/op
Iteration  10: 774069.301 ns/op


Result "deserialization_site_4k":
  785811.015 ±(99.9%) 26402.922 ns/op [Average]
  (min, avg, max) = (774069.301, 785811.015, 832776.702), stdev = 17463.898
  CI (99.9%): [759408.093, 812213.937] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_site_64k

# Run progress: 24.44% complete, ETA 00:52:33
# Fork: 1 of 1
# Warmup Iteration   1: 27041242.622 ns/op
Iteration   1: 20004206.420 ns/op
Iteration   2: 14086415.085 ns/op
Iteration   3: 13701947.342 ns/op
Iteration   4: 13701083.562 ns/op
Iteration   5: 13891842.389 ns/op
Iteration   6: 13894267.264 ns/op
Iteration   7: 13891502.722 ns/op
Iteration   8: 13892049.819 ns/op
Iteration   9: 13892239.167 ns/op
Iteration  10: 13893069.306 ns/op


Result "deserialization_site_64k":
  14484862.308 ±(99.9%) 2936559.127 ns/op [Average]
  (min, avg, max) = (13701083.562, 14484862.308, 20004206.420), stdev = 1942352.042
  CI (99.9%): [11548303.181, 17421421.435] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_site_8k

# Run progress: 24.72% complete, ETA 00:52:21
# Fork: 1 of 1
# Warmup Iteration   1: 2951258.472 ns/op
Iteration   1: 1577635.532 ns/op
Iteration   2: 1534256.393 ns/op
Iteration   3: 1536264.619 ns/op
Iteration   4: 1548129.483 ns/op
Iteration   5: 1529293.466 ns/op
Iteration   6: 1536278.124 ns/op
Iteration   7: 1545822.708 ns/op
Iteration   8: 1545750.124 ns/op
Iteration   9: 1548258.385 ns/op
Iteration  10: 1650456.332 ns/op


Result "deserialization_site_8k":
  1555214.517 ±(99.9%) 54461.617 ns/op [Average]
  (min, avg, max) = (1529293.466, 1555214.517, 1650456.332), stdev = 36022.988
  CI (99.9%): [1500752.899, 1609676.134] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_events_1k

# Run progress: 25.00% complete, ETA 00:52:09
# Fork: 1 of 1
# Warmup Iteration   1: 845835.745 ns/op
Iteration   1: 541478.240 ns/op
Iteration   2: 526096.516 ns/op
Iteration   3: 439035.019 ns/op
Iteration   4: 406368.273 ns/op
Iteration   5: 427386.512 ns/op
Iteration   6: 417398.582 ns/op
Iteration   7: 438254.015 ns/op
Iteration   8: 447070.078 ns/op
Iteration   9: 412653.679 ns/op
Iteration  10: 416710.844 ns/op


Result "serialization_events_1k":
  447245.176 ±(99.9%) 71856.454 ns/op [Average]
  (min, avg, max) = (406368.273, 447245.176, 541478.240), stdev = 47528.596
  CI (99.9%): [375388.722, 519101.630] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_events_2k

# Run progress: 25.28% complete, ETA 00:51:58
# Fork: 1 of 1
# Warmup Iteration   1: 1449946.770 ns/op
Iteration   1: 1058301.508 ns/op
Iteration   2: 1038536.244 ns/op
Iteration   3: 935559.007 ns/op
Iteration   4: 846087.623 ns/op
Iteration   5: 884243.415 ns/op
Iteration   6: 926915.816 ns/op
Iteration   7: 943611.427 ns/op
Iteration   8: 916679.562 ns/op
Iteration   9: 956147.741 ns/op
Iteration  10: 932971.854 ns/op


Result "serialization_events_2k":
  943905.420 ±(99.9%) 96330.603 ns/op [Average]
  (min, avg, max) = (846087.623, 943905.420, 1058301.508), stdev = 63716.729
  CI (99.9%): [847574.817, 1040236.023] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_events_4k

# Run progress: 25.56% complete, ETA 00:51:47
# Fork: 1 of 1
# Warmup Iteration   1: 2883121.084 ns/op
Iteration   1: 2336667.689 ns/op
Iteration   2: 2198030.974 ns/op
Iteration   3: 1866023.677 ns/op
Iteration   4: 1653045.058 ns/op
Iteration   5: 1634132.920 ns/op
Iteration   6: 1664059.855 ns/op
Iteration   7: 1675253.295 ns/op
Iteration   8: 1620939.872 ns/op
Iteration   9: 1664237.441 ns/op
Iteration  10: 1620984.418 ns/op


Result "serialization_events_4k":
  1793337.520 ±(99.9%) 395545.134 ns/op [Average]
  (min, avg, max) = (1620939.872, 1793337.520, 2336667.689), stdev = 261628.615
  CI (99.9%): [1397792.386, 2188882.654] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_events_64k

# Run progress: 25.83% complete, ETA 00:51:35
# Fork: 1 of 1
# Warmup Iteration   1: 66723949.733 ns/op
Iteration   1: 52646382.211 ns/op
Iteration   2: 52655006.632 ns/op
Iteration   3: 45466616.364 ns/op
Iteration   4: 37052346.556 ns/op
Iteration   5: 37048022.444 ns/op
Iteration   6: 37046850.667 ns/op
Iteration   7: 37051622.074 ns/op
Iteration   8: 38470071.846 ns/op
Iteration   9: 38481565.269 ns/op
Iteration  10: 38476627.115 ns/op


Result "serialization_events_64k":
  41439511.118 ±(99.9%) 9707149.454 ns/op [Average]
  (min, avg, max) = (37046850.667, 41439511.118, 52655006.632), stdev = 6420678.335
  CI (99.9%): [31732361.663, 51146660.572] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_events_8k

# Run progress: 26.11% complete, ETA 00:51:24
# Fork: 1 of 1
# Warmup Iteration   1: 6539047.673 ns/op
Iteration   1: 4975779.512 ns/op
Iteration   2: 4831587.319 ns/op
Iteration   3: 4132921.917 ns/op
Iteration   4: 3623673.366 ns/op
Iteration   5: 3559101.178 ns/op
Iteration   6: 3649909.080 ns/op
Iteration   7: 3559150.331 ns/op
Iteration   8: 3623705.504 ns/op
Iteration   9: 3623613.656 ns/op
Iteration  10: 3584743.039 ns/op


Result "serialization_events_8k":
  3916418.490 ±(99.9%) 828096.880 ns/op [Average]
  (min, avg, max) = (3559101.178, 3916418.490, 4975779.512), stdev = 547734.814
  CI (99.9%): [3088321.610, 4744515.370] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_site_1k

# Run progress: 26.39% complete, ETA 00:51:12
# Fork: 1 of 1
# Warmup Iteration   1: 798456.555 ns/op
Iteration   1: 476005.898 ns/op
Iteration   2: 469968.158 ns/op
Iteration   3: 374564.442 ns/op
Iteration   4: 310972.111 ns/op
Iteration   5: 310515.291 ns/op
Iteration   6: 313113.232 ns/op
Iteration   7: 312630.964 ns/op
Iteration   8: 313307.872 ns/op
Iteration   9: 317997.882 ns/op
Iteration  10: 313545.678 ns/op


Result "serialization_site_1k":
  351262.153 ±(99.9%) 101288.158 ns/op [Average]
  (min, avg, max) = (310515.291, 351262.153, 476005.898), stdev = 66995.845
  CI (99.9%): [249973.995, 452550.310] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_site_2k

# Run progress: 26.67% complete, ETA 00:51:01
# Fork: 1 of 1
# Warmup Iteration   1: 1441546.576 ns/op
Iteration   1: 908337.780 ns/op
Iteration   2: 878855.943 ns/op
Iteration   3: 714426.908 ns/op
Iteration   4: 590019.781 ns/op
Iteration   5: 595365.667 ns/op
Iteration   6: 589057.986 ns/op
Iteration   7: 590731.538 ns/op
Iteration   8: 595288.364 ns/op
Iteration   9: 598484.545 ns/op
Iteration  10: 599222.611 ns/op


Result "serialization_site_2k":
  665979.112 ±(99.9%) 190401.822 ns/op [Average]
  (min, avg, max) = (589057.986, 665979.112, 908337.780), stdev = 125939.016
  CI (99.9%): [475577.290, 856380.934] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_site_4k

# Run progress: 26.94% complete, ETA 00:50:49
# Fork: 1 of 1
# Warmup Iteration   1: 2682139.172 ns/op
Iteration   1: 1776385.060 ns/op
Iteration   2: 1767021.039 ns/op
Iteration   3: 1410641.941 ns/op
Iteration   4: 1141650.727 ns/op
Iteration   5: 1140374.366 ns/op
Iteration   6: 1137769.985 ns/op
Iteration   7: 1137811.338 ns/op
Iteration   8: 1144500.575 ns/op
Iteration   9: 1143079.062 ns/op
Iteration  10: 1178145.757 ns/op


Result "serialization_site_4k":
  1297737.985 ±(99.9%) 398113.854 ns/op [Average]
  (min, avg, max) = (1137769.985, 1297737.985, 1776385.060), stdev = 263327.665
  CI (99.9%): [899624.131, 1695851.839] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_site_64k

# Run progress: 27.22% complete, ETA 00:50:37
# Fork: 1 of 1
# Warmup Iteration   1: 55660077.111 ns/op
Iteration   1: 35725631.571 ns/op
Iteration   2: 35726043.179 ns/op
Iteration   3: 27780678.472 ns/op
Iteration   4: 22733313.750 ns/op
Iteration   5: 22226252.244 ns/op
Iteration   6: 22225104.156 ns/op
Iteration   7: 22230761.844 ns/op
Iteration   8: 22229435.222 ns/op
Iteration   9: 22232258.222 ns/op
Iteration  10: 22226490.400 ns/op


Result "serialization_site_64k":
  25533596.906 ±(99.9%) 8525605.410 ns/op [Average]
  (min, avg, max) = (22225104.156, 25533596.906, 35726043.179), stdev = 5639160.107
  CI (99.9%): [17007991.496, 34059202.316] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_site_8k

# Run progress: 27.50% complete, ETA 00:50:26
# Fork: 1 of 1
# Warmup Iteration   1: 9712957.223 ns/op
Iteration   1: 4484691.978 ns/op
Iteration   2: 3776267.404 ns/op
Iteration   3: 2958956.808 ns/op
Iteration   4: 2375551.990 ns/op
Iteration   5: 2392512.679 ns/op
Iteration   6: 2381218.336 ns/op
Iteration   7: 2382779.152 ns/op
Iteration   8: 2386946.162 ns/op
Iteration   9: 2451610.902 ns/op
Iteration  10: 2381213.519 ns/op


Result "serialization_site_8k":
  2797174.893 ±(99.9%) 1124559.043 ns/op [Average]
  (min, avg, max) = (2375551.990, 2797174.893, 4484691.978), stdev = 743826.179
  CI (99.9%): [1672615.850, 3921733.936] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_events_1k

# Run progress: 27.78% complete, ETA 00:50:14
# Fork: 1 of 1
# Warmup Iteration   1: 1960939.055 ns/op
Iteration   1: 1130098.242 ns/op
Iteration   2: 1132610.870 ns/op
Iteration   3: 1099028.892 ns/op
Iteration   4: 1097807.795 ns/op
Iteration   5: 1102653.356 ns/op
Iteration   6: 1106474.675 ns/op
Iteration   7: 1090623.979 ns/op
Iteration   8: 1094214.893 ns/op
Iteration   9: 1095410.320 ns/op
Iteration  10: 1105076.074 ns/op


Result "deserialization_events_1k":
  1105399.910 ±(99.9%) 21970.836 ns/op [Average]
  (min, avg, max) = (1090623.979, 1105399.910, 1132610.870), stdev = 14532.348
  CI (99.9%): [1083429.073, 1127370.746] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_events_2k

# Run progress: 28.06% complete, ETA 00:50:04
# Fork: 1 of 1
# Warmup Iteration   1: 5850751.333 ns/op
Iteration   1: 2074982.160 ns/op
Iteration   2: 2008251.359 ns/op
Iteration   3: 1968734.130 ns/op
Iteration   4: 1965840.851 ns/op
Iteration   5: 1961110.884 ns/op
Iteration   6: 1972584.191 ns/op
Iteration   7: 1945782.644 ns/op
Iteration   8: 1976501.219 ns/op
Iteration   9: 1957149.387 ns/op
Iteration  10: 1960993.186 ns/op


Result "deserialization_events_2k":
  1979193.001 ±(99.9%) 56610.954 ns/op [Average]
  (min, avg, max) = (1945782.644, 1979193.001, 2074982.160), stdev = 37444.641
  CI (99.9%): [1922582.047, 2035803.955] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_events_4k

# Run progress: 28.33% complete, ETA 00:49:54
# Fork: 1 of 1
# Warmup Iteration   1: 8932763.839 ns/op
Iteration   1: 4405768.123 ns/op
Iteration   2: 4310850.953 ns/op
Iteration   3: 4255770.153 ns/op
Iteration   4: 4256011.553 ns/op
Iteration   5: 4238136.136 ns/op
Iteration   6: 4255712.740 ns/op
Iteration   7: 4274109.637 ns/op
Iteration   8: 4274113.632 ns/op
Iteration   9: 4255716.306 ns/op
Iteration  10: 4256050.379 ns/op


Result "deserialization_events_4k":
  4278223.961 ±(99.9%) 73851.770 ns/op [Average]
  (min, avg, max) = (4238136.136, 4278223.961, 4405768.123), stdev = 48848.373
  CI (99.9%): [4204372.191, 4352075.731] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_events_64k

# Run progress: 28.61% complete, ETA 00:49:44
# Fork: 1 of 1
# Warmup Iteration   1: 333591849.333 ns/op
Iteration   1: 90960110.455 ns/op
Iteration   2: 83367185.583 ns/op
Iteration   3: 83376559.917 ns/op
Iteration   4: 83345829.417 ns/op
Iteration   5: 83371887.667 ns/op
Iteration   6: 83403303.250 ns/op
Iteration   7: 83406749.583 ns/op
Iteration   8: 83401145.917 ns/op
Iteration   9: 83416264.917 ns/op
Iteration  10: 83347447.083 ns/op


Result "deserialization_events_64k":
  84139648.379 ±(99.9%) 3623306.143 ns/op [Average]
  (min, avg, max) = (83345829.417, 84139648.379, 90960110.455), stdev = 2396592.673
  CI (99.9%): [80516342.235, 87762954.522] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_events_8k

# Run progress: 28.89% complete, ETA 00:49:33
# Fork: 1 of 1
# Warmup Iteration   1: 50026599.050 ns/op
Iteration   1: 11365746.216 ns/op
Iteration   2: 9903108.931 ns/op
Iteration   3: 9902224.901 ns/op
Iteration   4: 9805207.235 ns/op
Iteration   5: 9805613.725 ns/op
Iteration   6: 9804859.873 ns/op
Iteration   7: 9805160.216 ns/op
Iteration   8: 9711447.417 ns/op
Iteration   9: 9805561.461 ns/op
Iteration  10: 9805827.775 ns/op


Result "deserialization_events_8k":
  9971475.775 ±(99.9%) 745205.512 ns/op [Average]
  (min, avg, max) = (9711447.417, 9971475.775, 11365746.216), stdev = 492907.306
  CI (99.9%): [9226270.263, 10716681.287] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_site_1k

# Run progress: 29.17% complete, ETA 00:49:23
# Fork: 1 of 1
# Warmup Iteration   1: 4426834.588 ns/op
Iteration   1: 802033.033 ns/op
Iteration   2: 718484.873 ns/op
Iteration   3: 724732.761 ns/op
Iteration   4: 712334.132 ns/op
Iteration   5: 713352.748 ns/op
Iteration   6: 711298.337 ns/op
Iteration   7: 711816.932 ns/op
Iteration   8: 707289.303 ns/op
Iteration   9: 709780.828 ns/op
Iteration  10: 706281.507 ns/op


Result "deserialization_site_1k":
  721740.445 ±(99.9%) 43420.833 ns/op [Average]
  (min, avg, max) = (706281.507, 721740.445, 802033.033), stdev = 28720.192
  CI (99.9%): [678319.613, 765161.278] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_site_2k

# Run progress: 29.44% complete, ETA 00:49:12
# Fork: 1 of 1
# Warmup Iteration   1: 6412920.833 ns/op
Iteration   1: 1335271.577 ns/op
Iteration   2: 1218179.697 ns/op
Iteration   3: 1209278.648 ns/op
Iteration   4: 1199167.951 ns/op
Iteration   5: 1200610.043 ns/op
Iteration   6: 1192319.293 ns/op
Iteration   7: 1190603.160 ns/op
Iteration   8: 1189154.977 ns/op
Iteration   9: 1197700.509 ns/op
Iteration  10: 1193592.474 ns/op


Result "deserialization_site_2k":
  1212587.833 ±(99.9%) 66557.553 ns/op [Average]
  (min, avg, max) = (1189154.977, 1212587.833, 1335271.577), stdev = 44023.700
  CI (99.9%): [1146030.280, 1279145.386] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_site_4k

# Run progress: 29.72% complete, ETA 00:49:02
# Fork: 1 of 1
# Warmup Iteration   1: 6214107.143 ns/op
Iteration   1: 2320476.376 ns/op
Iteration   2: 2331308.242 ns/op
Iteration   3: 2257703.594 ns/op
Iteration   4: 2278097.952 ns/op
Iteration   5: 2268035.499 ns/op
Iteration   6: 2267743.150 ns/op
Iteration   7: 2278142.681 ns/op
Iteration   8: 2257551.007 ns/op
Iteration   9: 2267814.014 ns/op
Iteration  10: 2283315.279 ns/op


Result "deserialization_site_4k":
  2281018.779 ±(99.9%) 38119.320 ns/op [Average]
  (min, avg, max) = (2257551.007, 2281018.779, 2331308.242), stdev = 25213.570
  CI (99.9%): [2242899.459, 2319138.100] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_site_64k

# Run progress: 30.00% complete, ETA 00:48:52
# Fork: 1 of 1
# Warmup Iteration   1: 200126529.000 ns/op
Iteration   1: 38475454.423 ns/op
Iteration   2: 37049470.889 ns/op
Iteration   3: 35726993.714 ns/op
Iteration   4: 35724402.250 ns/op
Iteration   5: 35721495.393 ns/op
Iteration   6: 35721234.714 ns/op
Iteration   7: 35743060.786 ns/op
Iteration   8: 35723200.179 ns/op
Iteration   9: 35723735.464 ns/op
Iteration  10: 35726920.071 ns/op


Result "deserialization_site_64k":
  36133596.788 ±(99.9%) 1393870.382 ns/op [Average]
  (min, avg, max) = (35721234.714, 36133596.788, 38475454.423), stdev = 921958.954
  CI (99.9%): [34739726.407, 37527467.170] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_site_8k

# Run progress: 30.28% complete, ETA 00:48:41
# Fork: 1 of 1
# Warmup Iteration   1: 13334875.027 ns/op
Iteration   1: 4975705.617 ns/op
Iteration   2: 4808218.976 ns/op
Iteration   3: 4739958.564 ns/op
Iteration   4: 4717537.585 ns/op
Iteration   5: 4719272.675 ns/op
Iteration   6: 4695848.507 ns/op
Iteration   7: 4695384.272 ns/op
Iteration   8: 4696869.798 ns/op
Iteration   9: 4695563.028 ns/op
Iteration  10: 4673810.037 ns/op


Result "deserialization_site_8k":
  4741816.906 ±(99.9%) 136410.184 ns/op [Average]
  (min, avg, max) = (4673810.037, 4741816.906, 4975705.617), stdev = 90226.891
  CI (99.9%): [4605406.722, 4878227.090] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_events_1k

# Run progress: 30.56% complete, ETA 00:48:31
# Fork: 1 of 1
# Warmup Iteration   1: 2299977.692 ns/op
Iteration   1: 913400.766 ns/op
Iteration   2: 875735.119 ns/op
Iteration   3: 878820.317 ns/op
Iteration   4: 878834.940 ns/op
Iteration   5: 871182.665 ns/op
Iteration   6: 886764.771 ns/op
Iteration   7: 874351.696 ns/op
Iteration   8: 879577.135 ns/op
Iteration   9: 879591.651 ns/op
Iteration  10: 872045.955 ns/op


Result "serialization_events_1k":
  881030.502 ±(99.9%) 18481.753 ns/op [Average]
  (min, avg, max) = (871182.665, 881030.502, 913400.766), stdev = 12224.535
  CI (99.9%): [862548.749, 899512.254] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_events_2k

# Run progress: 30.83% complete, ETA 00:48:20
# Fork: 1 of 1
# Warmup Iteration   1: 2826132.178 ns/op
Iteration   1: 1675197.067 ns/op
Iteration   2: 1626177.889 ns/op
Iteration   3: 1600153.547 ns/op
Iteration   4: 1595049.115 ns/op
Iteration   5: 1607889.656 ns/op
Iteration   6: 1592547.368 ns/op
Iteration   7: 1589973.700 ns/op
Iteration   8: 1602717.179 ns/op
Iteration   9: 1595065.400 ns/op
Iteration  10: 1589943.517 ns/op


Result "serialization_events_2k":
  1607471.444 ±(99.9%) 39544.606 ns/op [Average]
  (min, avg, max) = (1589943.517, 1607471.444, 1675197.067), stdev = 26156.308
  CI (99.9%): [1567926.838, 1647016.050] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_events_4k

# Run progress: 31.11% complete, ETA 00:48:09
# Fork: 1 of 1
# Warmup Iteration   1: 9353881.916 ns/op
Iteration   1: 3436809.144 ns/op
Iteration   2: 3289803.329 ns/op
Iteration   3: 3300612.647 ns/op
Iteration   4: 3268330.902 ns/op
Iteration   5: 3289813.829 ns/op
Iteration   6: 3268639.167 ns/op
Iteration   7: 3278958.207 ns/op
Iteration   8: 3278957.911 ns/op
Iteration   9: 3278940.987 ns/op
Iteration  10: 3279509.262 ns/op


Result "serialization_events_4k":
  3297037.538 ±(99.9%) 75714.385 ns/op [Average]
  (min, avg, max) = (3268330.902, 3297037.538, 3436809.144), stdev = 50080.378
  CI (99.9%): [3221323.153, 3372751.924] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_events_64k

# Run progress: 31.39% complete, ETA 00:47:59
# Fork: 1 of 1
# Warmup Iteration   1: 250272247.250 ns/op
Iteration   1: 71436685.000 ns/op
Iteration   2: 66696871.667 ns/op
Iteration   3: 66706087.867 ns/op
Iteration   4: 66713170.000 ns/op
Iteration   5: 66675398.000 ns/op
Iteration   6: 66689478.267 ns/op
Iteration   7: 66694648.133 ns/op
Iteration   8: 66682353.600 ns/op
Iteration   9: 66712474.733 ns/op
Iteration  10: 66687199.933 ns/op


Result "serialization_events_64k":
  67169436.720 ±(99.9%) 2266893.912 ns/op [Average]
  (min, avg, max) = (66675398.000, 67169436.720, 71436685.000), stdev = 1499409.966
  CI (99.9%): [64902542.808, 69436330.632] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_events_8k

# Run progress: 31.67% complete, ETA 00:47:48
# Fork: 1 of 1
# Warmup Iteration   1: 17859487.964 ns/op
Iteration   1: 7693565.638 ns/op
Iteration   2: 7353987.765 ns/op
Iteration   3: 7247320.826 ns/op
Iteration   4: 7303503.591 ns/op
Iteration   5: 7247880.355 ns/op
Iteration   6: 7247494.471 ns/op
Iteration   7: 7195015.410 ns/op
Iteration   8: 7299919.409 ns/op
Iteration   9: 7247377.696 ns/op
Iteration  10: 7876375.110 ns/op


Result "serialization_events_8k":
  7371244.027 ±(99.9%) 342283.990 ns/op [Average]
  (min, avg, max) = (7195015.410, 7371244.027, 7876375.110), stdev = 226399.666
  CI (99.9%): [7028960.037, 7713528.017] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_site_1k

# Run progress: 31.94% complete, ETA 00:47:37
# Fork: 1 of 1
# Warmup Iteration   1: 1632082.238 ns/op
Iteration   1: 426494.600 ns/op
Iteration   2: 408254.285 ns/op
Iteration   3: 399559.713 ns/op
Iteration   4: 404718.674 ns/op
Iteration   5: 398122.101 ns/op
Iteration   6: 401650.045 ns/op
Iteration   7: 400513.516 ns/op
Iteration   8: 402654.289 ns/op
Iteration   9: 402285.786 ns/op
Iteration  10: 408539.904 ns/op


Result "serialization_site_1k":
  405279.291 ±(99.9%) 12401.332 ns/op [Average]
  (min, avg, max) = (398122.101, 405279.291, 426494.600), stdev = 8202.713
  CI (99.9%): [392877.960, 417680.623] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_site_2k

# Run progress: 32.22% complete, ETA 00:47:26
# Fork: 1 of 1
# Warmup Iteration   1: 1783454.307 ns/op
Iteration   1: 816457.433 ns/op
Iteration   2: 810448.438 ns/op
Iteration   3: 788086.374 ns/op
Iteration   4: 800705.977 ns/op
Iteration   5: 786927.328 ns/op
Iteration   6: 789332.378 ns/op
Iteration   7: 789959.464 ns/op
Iteration   8: 788693.233 ns/op
Iteration   9: 788087.024 ns/op
Iteration  10: 795413.162 ns/op


Result "serialization_site_2k":
  795411.081 ±(99.9%) 15841.866 ns/op [Average]
  (min, avg, max) = (786927.328, 795411.081, 816457.433), stdev = 10478.414
  CI (99.9%): [779569.215, 811252.947] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_site_4k

# Run progress: 32.50% complete, ETA 00:47:16
# Fork: 1 of 1
# Warmup Iteration   1: 2959886.683 ns/op
Iteration   1: 1655813.232 ns/op
Iteration   2: 1644941.528 ns/op
Iteration   3: 1618292.775 ns/op
Iteration   4: 1636868.372 ns/op
Iteration   5: 1615706.360 ns/op
Iteration   6: 1610501.729 ns/op
Iteration   7: 1631508.003 ns/op
Iteration   8: 1626151.590 ns/op
Iteration   9: 1615663.299 ns/op
Iteration  10: 1605306.175 ns/op


Result "serialization_site_4k":
  1626075.306 ±(99.9%) 24360.639 ns/op [Average]
  (min, avg, max) = (1605306.175, 1626075.306, 1655813.232), stdev = 16113.054
  CI (99.9%): [1601714.668, 1650435.945] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_site_64k

# Run progress: 32.78% complete, ETA 00:47:05
# Fork: 1 of 1
# Warmup Iteration   1: 52659028.842 ns/op
Iteration   1: 27785311.417 ns/op
Iteration   2: 27786519.694 ns/op
Iteration   3: 27036786.000 ns/op
Iteration   4: 26322144.658 ns/op
Iteration   5: 27038335.216 ns/op
Iteration   6: 26319853.342 ns/op
Iteration   7: 26320462.000 ns/op
Iteration   8: 27034873.297 ns/op
Iteration   9: 26323199.974 ns/op
Iteration  10: 26326805.053 ns/op


Result "serialization_site_64k":
  26829429.065 ±(99.9%) 907608.501 ns/op [Average]
  (min, avg, max) = (26319853.342, 26829429.065, 27786519.694), stdev = 600326.828
  CI (99.9%): [25921820.564, 27737037.567] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_site_8k

# Run progress: 33.06% complete, ETA 00:46:54
# Fork: 1 of 1
# Warmup Iteration   1: 8268281.413 ns/op
Iteration   1: 3534011.329 ns/op
Iteration   2: 3460663.298 ns/op
Iteration   3: 3436716.711 ns/op
Iteration   4: 3460588.654 ns/op
Iteration   5: 3436823.392 ns/op
Iteration   6: 3425074.514 ns/op
Iteration   7: 3413402.631 ns/op
Iteration   8: 3402458.993 ns/op
Iteration   9: 3402178.027 ns/op
Iteration  10: 3484673.575 ns/op


Result "serialization_site_8k":
  3445659.112 ±(99.9%) 62040.121 ns/op [Average]
  (min, avg, max) = (3402178.027, 3445659.112, 3534011.329), stdev = 41035.699
  CI (99.9%): [3383618.992, 3507699.233] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_events_1k

# Run progress: 33.33% complete, ETA 00:46:43
# Fork: 1 of 1
# Warmup Iteration   1: 8268649.934 ns/op
Iteration   1: 3333710.513 ns/op
Iteration   2: 3058461.330 ns/op
Iteration   3: 2898940.351 ns/op
Iteration   4: 2882198.963 ns/op
Iteration   5: 2849368.063 ns/op
Iteration   6: 2841288.253 ns/op
Iteration   7: 2890551.697 ns/op
Iteration   8: 2849358.530 ns/op
Iteration   9: 2841635.997 ns/op
Iteration  10: 2849287.601 ns/op


Result "deserialization_events_1k":
  2929480.130 ±(99.9%) 236097.611 ns/op [Average]
  (min, avg, max) = (2841288.253, 2929480.130, 3333710.513), stdev = 156163.951
  CI (99.9%): [2693382.519, 3165577.741] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_events_2k

# Run progress: 33.61% complete, ETA 00:46:33
# Fork: 1 of 1
# Warmup Iteration   1: 25653413.436 ns/op
Iteration   1: 7247298.833 ns/op
Iteration   2: 5525494.757 ns/op
Iteration   3: 5291747.905 ns/op
Iteration   4: 5208953.052 ns/op
Iteration   5: 5236812.576 ns/op
Iteration   6: 5237256.089 ns/op
Iteration   7: 5181985.326 ns/op
Iteration   8: 5130359.421 ns/op
Iteration   9: 5182926.762 ns/op
Iteration  10: 5155367.088 ns/op


Result "deserialization_events_2k":
  5439820.181 ±(99.9%) 974720.239 ns/op [Average]
  (min, avg, max) = (5130359.421, 5439820.181, 7247298.833), stdev = 644717.088
  CI (99.9%): [4465099.941, 6414540.420] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_events_4k

# Run progress: 33.89% complete, ETA 00:46:23
# Fork: 1 of 1
# Warmup Iteration   1: 66695944.267 ns/op
Iteration   1: 21743058.630 ns/op
Iteration   2: 15875420.397 ns/op
Iteration   3: 14516879.522 ns/op
Iteration   4: 14500504.623 ns/op
Iteration   5: 14707821.162 ns/op
Iteration   6: 14288213.214 ns/op
Iteration   7: 14288185.500 ns/op
Iteration   8: 14288425.529 ns/op
Iteration   9: 14287717.300 ns/op
Iteration  10: 14288407.729 ns/op


Result "deserialization_events_4k":
  15278463.361 ±(99.9%) 3511844.187 ns/op [Average]
  (min, avg, max) = (14287717.300, 15278463.361, 21743058.630), stdev = 2322867.490
  CI (99.9%): [11766619.174, 18790307.547] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_events_64k

# Run progress: 34.17% complete, ETA 00:46:13
# Fork: 1 of 1
# Warmup Iteration   1: Infinity ns/op
Iteration   1: 502679846.000 ns/op
Iteration   2: 333681928.000 ns/op
Iteration   3: 333934860.667 ns/op
Iteration   4: 334155990.667 ns/op
Iteration   5: 333486813.667 ns/op
Iteration   6: 333424860.000 ns/op
Iteration   7: 334127319.667 ns/op
Iteration   8: 333450818.333 ns/op
Iteration   9: 334153091.333 ns/op
Iteration  10: 334170768.000 ns/op


Result "deserialization_events_64k":
  350726629.633 ±(99.9%) 80720821.631 ns/op [Average]
  (min, avg, max) = (333424860.000, 350726629.633, 502679846.000), stdev = 53391825.591
  CI (99.9%): [270005808.003, 431447451.264] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_events_8k

# Run progress: 34.44% complete, ETA 00:46:03
# Fork: 1 of 1
# Warmup Iteration   1: 250583574.250 ns/op
Iteration   1: 66693491.200 ns/op
Iteration   2: 43490841.870 ns/op
Iteration   3: 41681654.750 ns/op
Iteration   4: 40016603.560 ns/op
Iteration   5: 40015367.200 ns/op
Iteration   6: 40019237.480 ns/op
Iteration   7: 40018116.960 ns/op
Iteration   8: 40010129.600 ns/op
Iteration   9: 40006092.000 ns/op
Iteration  10: 40006402.040 ns/op


Result "deserialization_events_8k":
  43195793.666 ±(99.9%) 12603112.208 ns/op [Average]
  (min, avg, max) = (40006092.000, 43195793.666, 66693491.200), stdev = 8336178.390
  CI (99.9%): [30592681.458, 55798905.874] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_site_1k

# Run progress: 34.72% complete, ETA 00:45:53
# Fork: 1 of 1
# Warmup Iteration   1: 14091187.127 ns/op
Iteration   1: 4292296.210 ns/op
Iteration   2: 3247191.240 ns/op
Iteration   3: 3185072.182 ns/op
Iteration   4: 3135178.652 ns/op
Iteration   5: 3106404.811 ns/op
Iteration   6: 3096297.437 ns/op
Iteration   7: 3096643.266 ns/op
Iteration   8: 3077757.068 ns/op
Iteration   9: 3067778.951 ns/op
Iteration  10: 3087152.738 ns/op


Result "deserialization_site_1k":
  3239177.255 ±(99.9%) 565633.852 ns/op [Average]
  (min, avg, max) = (3067778.951, 3239177.255, 4292296.210), stdev = 374131.771
  CI (99.9%): [2673543.404, 3804811.107] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_site_2k

# Run progress: 35.00% complete, ETA 00:45:43
# Fork: 1 of 1
# Warmup Iteration   1: 14287692.529 ns/op
Iteration   1: 6757434.338 ns/op
Iteration   2: 5348421.529 ns/op
Iteration   3: 5236243.696 ns/op
Iteration   4: 5076715.320 ns/op
Iteration   5: 5051032.995 ns/op
Iteration   6: 5076771.858 ns/op
Iteration   7: 5000621.190 ns/op
Iteration   8: 5025784.704 ns/op
Iteration   9: 5000504.040 ns/op
Iteration  10: 5001303.325 ns/op


Result "deserialization_site_2k":
  5257483.299 ±(99.9%) 815384.812 ns/op [Average]
  (min, avg, max) = (5000504.040, 5257483.299, 6757434.338), stdev = 539326.567
  CI (99.9%): [4442098.488, 6072868.111] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_site_4k

# Run progress: 35.28% complete, ETA 00:45:33
# Fork: 1 of 1
# Warmup Iteration   1: 50036065.200 ns/op
Iteration   1: 18524619.148 ns/op
Iteration   2: 14495838.348 ns/op
Iteration   3: 13515714.514 ns/op
Iteration   4: 13335326.000 ns/op
Iteration   5: 13336337.693 ns/op
Iteration   6: 13335993.200 ns/op
Iteration   7: 13336040.333 ns/op
Iteration   8: 13335586.093 ns/op
Iteration   9: 13334924.040 ns/op
Iteration  10: 13159361.737 ns/op


Result "deserialization_site_4k":
  13970974.111 ±(99.9%) 2484162.094 ns/op [Average]
  (min, avg, max) = (13159361.737, 13970974.111, 18524619.148), stdev = 1643119.416
  CI (99.9%): [11486812.016, 16455136.205] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_site_64k

# Run progress: 35.56% complete, ETA 00:45:23
# Fork: 1 of 1
# Warmup Iteration   1: 1003190037.000 ns/op
Iteration   1: 333438805.333 ns/op
Iteration   2: 333796677.000 ns/op
Iteration   3: 333486666.667 ns/op
Iteration   4: 333533463.000 ns/op
Iteration   5: 250289951.250 ns/op
Iteration   6: 250287046.250 ns/op
Iteration   7: 333988759.333 ns/op
Iteration   8: 250611865.250 ns/op
Iteration   9: 250224422.000 ns/op
Iteration  10: 250650551.500 ns/op


Result "deserialization_site_64k":
  292030820.758 ±(99.9%) 66324826.515 ns/op [Average]
  (min, avg, max) = (250224422.000, 292030820.758, 333988759.333), stdev = 43869766.165
  CI (99.9%): [225705994.244, 358355647.273] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_site_8k

# Run progress: 35.83% complete, ETA 00:45:13
# Fork: 1 of 1
# Warmup Iteration   1: 250223048.250 ns/op
Iteration   1: 47635365.571 ns/op
Iteration   2: 38476886.154 ns/op
Iteration   3: 37050351.370 ns/op
Iteration   4: 35727732.429 ns/op
Iteration   5: 35881679.321 ns/op
Iteration   6: 34492011.414 ns/op
Iteration   7: 35719854.750 ns/op
Iteration   8: 35726452.607 ns/op
Iteration   9: 35726700.964 ns/op
Iteration  10: 35729493.357 ns/op


Result "deserialization_site_8k":
  37216652.794 ±(99.9%) 5756558.241 ns/op [Average]
  (min, avg, max) = (34492011.414, 37216652.794, 47635365.571), stdev = 3807606.853
  CI (99.9%): [31460094.552, 42973211.035] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_events_1k

# Run progress: 36.11% complete, ETA 00:45:02
# Fork: 1 of 1
# Warmup Iteration   1: 25014957.500 ns/op
Iteration   1: 6757469.959 ns/op
Iteration   2: 4505112.595 ns/op
Iteration   3: 4255809.298 ns/op
Iteration   4: 4255950.362 ns/op
Iteration   5: 4255892.468 ns/op
Iteration   6: 4255922.119 ns/op
Iteration   7: 4220087.186 ns/op
Iteration   8: 4220037.038 ns/op
Iteration   9: 4237888.733 ns/op
Iteration  10: 4220023.709 ns/op


Result "serialization_events_1k":
  4518419.347 ±(99.9%) 1196287.482 ns/op [Average]
  (min, avg, max) = (4220023.709, 4518419.347, 6757469.959), stdev = 791270.100
  CI (99.9%): [3322131.864, 5714706.829] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_events_2k

# Run progress: 36.39% complete, ETA 00:44:52
# Fork: 1 of 1
# Warmup Iteration   1: 25654828.974 ns/op
Iteration   1: 10990922.176 ns/op
Iteration   2: 10001323.590 ns/op
Iteration   3: 9092188.055 ns/op
Iteration   4: 8930903.375 ns/op
Iteration   5: 8336367.425 ns/op
Iteration   6: 8850932.115 ns/op
Iteration   7: 8631630.448 ns/op
Iteration   8: 8334450.333 ns/op
Iteration   9: 7876242.276 ns/op
Iteration  10: 7813944.656 ns/op


Result "serialization_events_2k":
  8885890.445 ±(99.9%) 1474465.594 ns/op [Average]
  (min, avg, max) = (7813944.656, 8885890.445, 10990922.176), stdev = 975267.697
  CI (99.9%): [7411424.851, 10360356.039] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_events_4k

# Run progress: 36.67% complete, ETA 00:44:42
# Fork: 1 of 1
# Warmup Iteration   1: 58859112.059 ns/op
Iteration   1: 32268844.290 ns/op
Iteration   2: 25004778.225 ns/op
Iteration   3: 22733426.318 ns/op
Iteration   4: 22227323.867 ns/op
Iteration   5: 22225615.400 ns/op
Iteration   6: 22229375.956 ns/op
Iteration   7: 22227578.333 ns/op
Iteration   8: 22227116.467 ns/op
Iteration   9: 22228619.711 ns/op
Iteration  10: 22230341.956 ns/op


Result "serialization_events_4k":
  23560302.052 ±(99.9%) 4808304.032 ns/op [Average]
  (min, avg, max) = (22225615.400, 23560302.052, 32268844.290), stdev = 3180395.405
  CI (99.9%): [18751998.021, 28368606.084] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_events_64k

# Run progress: 36.94% complete, ETA 00:44:31
# Fork: 1 of 1
# Warmup Iteration   1: Infinity ns/op
Iteration   1: 1004102488.000 ns/op
Iteration   2: 500751428.000 ns/op
Iteration   3: 500714949.500 ns/op
Iteration   4: 502307087.500 ns/op
Iteration   5: 501504145.500 ns/op
Iteration   6: 500233226.500 ns/op
Iteration   7: 500412922.500 ns/op
Iteration   8: 501605488.500 ns/op
Iteration   9: 500904907.000 ns/op
Iteration  10: 500274692.000 ns/op


Result "serialization_events_64k":
  551281133.500 ±(99.9%) 240546443.064 ns/op [Average]
  (min, avg, max) = (500233226.500, 551281133.500, 1004102488.000), stdev = 159106578.391
  CI (99.9%): [310734690.436, 791827576.564] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_events_8k

# Run progress: 37.22% complete, ETA 00:44:21
# Fork: 1 of 1
# Warmup Iteration   1: 166937125.667 ns/op
Iteration   1: 71465524.143 ns/op
Iteration   2: 66690812.000 ns/op
Iteration   3: 62552063.750 ns/op
Iteration   4: 66691371.400 ns/op
Iteration   5: 62535514.938 ns/op
Iteration   6: 62526631.438 ns/op
Iteration   7: 62537570.125 ns/op
Iteration   8: 62510503.125 ns/op
Iteration   9: 62547140.875 ns/op
Iteration  10: 62534722.125 ns/op


Result "serialization_events_8k":
  64259185.392 ±(99.9%) 4634538.536 ns/op [Average]
  (min, avg, max) = (62510503.125, 64259185.392, 71465524.143), stdev = 3065460.289
  CI (99.9%): [59624646.856, 68893723.928] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_site_1k

# Run progress: 37.50% complete, ETA 00:44:11
# Fork: 1 of 1
# Warmup Iteration   1: 13340304.187 ns/op
Iteration   1: 6712118.671 ns/op
Iteration   2: 5406066.108 ns/op
Iteration   3: 5025749.472 ns/op
Iteration   4: 4951069.203 ns/op
Iteration   5: 4926592.030 ns/op
Iteration   6: 5025845.196 ns/op
Iteration   7: 4878741.049 ns/op
Iteration   8: 4878701.483 ns/op
Iteration   9: 4926587.138 ns/op
Iteration  10: 4879192.800 ns/op


Result "serialization_site_1k":
  5161066.315 ±(99.9%) 857508.989 ns/op [Average]
  (min, avg, max) = (4878701.483, 5161066.315, 6712118.671), stdev = 567189.103
  CI (99.9%): [4303557.326, 6018575.304] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_site_2k

# Run progress: 37.78% complete, ETA 00:44:00
# Fork: 1 of 1
# Warmup Iteration   1: 24400756.073 ns/op
Iteration   1: 10001503.030 ns/op
Iteration   2: 8697226.313 ns/op
Iteration   3: 8000532.448 ns/op
Iteration   4: 7937606.198 ns/op
Iteration   5: 8000649.592 ns/op
Iteration   6: 7937611.175 ns/op
Iteration   7: 7875406.370 ns/op
Iteration   8: 8000667.336 ns/op
Iteration   9: 7938115.008 ns/op
Iteration  10: 7875590.488 ns/op


Result "serialization_site_2k":
  8226490.796 ±(99.9%) 1010644.621 ns/op [Average]
  (min, avg, max) = (7875406.370, 8226490.796, 10001503.030), stdev = 668478.842
  CI (99.9%): [7215846.174, 9237135.417] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_site_4k

# Run progress: 38.06% complete, ETA 00:43:50
# Fork: 1 of 1
# Warmup Iteration   1: 62551275.375 ns/op
Iteration   1: 26321610.605 ns/op
Iteration   2: 24394927.366 ns/op
Iteration   3: 20836631.042 ns/op
Iteration   4: 20839047.604 ns/op
Iteration   5: 20838168.271 ns/op
Iteration   6: 20839058.229 ns/op
Iteration   7: 20851891.563 ns/op
Iteration   8: 20834943.583 ns/op
Iteration   9: 20837824.792 ns/op
Iteration  10: 20837801.646 ns/op


Result "serialization_site_4k":
  21743190.470 ±(99.9%) 2961260.969 ns/op [Average]
  (min, avg, max) = (20834943.583, 21743190.470, 26321610.605), stdev = 1958690.781
  CI (99.9%): [18781929.501, 24704451.439] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_site_64k

# Run progress: 38.33% complete, ETA 00:43:39
# Fork: 1 of 1
# Warmup Iteration   1: Infinity ns/op
Iteration   1: 1005913375.000 ns/op
Iteration   2: 500974530.000 ns/op
Iteration   3: 501380097.500 ns/op
Iteration   4: 500681026.000 ns/op
Iteration   5: 500954490.500 ns/op
Iteration   6: 500308489.500 ns/op
Iteration   7: 500791906.000 ns/op
Iteration   8: 500473699.000 ns/op
Iteration   9: 501740679.500 ns/op
Iteration  10: 501722595.500 ns/op


Result "serialization_site_64k":
  551494088.850 ±(99.9%) 241394323.592 ns/op [Average]
  (min, avg, max) = (500308489.500, 551494088.850, 1005913375.000), stdev = 159667398.863
  CI (99.9%): [310099765.258, 792888412.442] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_site_8k

# Run progress: 38.61% complete, ETA 00:43:29
# Fork: 1 of 1
# Warmup Iteration   1: 166846283.000 ns/op
Iteration   1: 71446396.714 ns/op
Iteration   2: 62541532.250 ns/op
Iteration   3: 62527957.125 ns/op
Iteration   4: 58829364.294 ns/op
Iteration   5: 58837780.059 ns/op
Iteration   6: 58859876.941 ns/op
Iteration   7: 58892881.941 ns/op
Iteration   8: 58852679.118 ns/op
Iteration   9: 58840424.059 ns/op
Iteration  10: 58847137.588 ns/op


Result "serialization_site_8k":
  60847603.009 ±(99.9%) 6087662.610 ns/op [Average]
  (min, avg, max) = (58829364.294, 60847603.009, 71446396.714), stdev = 4026611.892
  CI (99.9%): [54759940.399, 66935265.619] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_events_1k

# Run progress: 38.89% complete, ETA 00:43:18
# Fork: 1 of 1
# Warmup Iteration   1: 340791.179 ns/op
Iteration   1: 284694.002 ns/op
Iteration   2: 281252.192 ns/op
Iteration   3: 279070.055 ns/op
Iteration   4: 279600.140 ns/op
Iteration   5: 277849.253 ns/op
Iteration   6: 278655.361 ns/op
Iteration   7: 276121.639 ns/op
Iteration   8: 277266.851 ns/op
Iteration   9: 278880.840 ns/op
Iteration  10: 276591.399 ns/op


Result "deserialization_events_1k":
  278998.173 ±(99.9%) 3784.894 ns/op [Average]
  (min, avg, max) = (276121.639, 278998.173, 284694.002), stdev = 2503.473
  CI (99.9%): [275213.279, 282783.067] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_events_2k

# Run progress: 39.17% complete, ETA 00:43:07
# Fork: 1 of 1
# Warmup Iteration   1: 784692.989 ns/op
Iteration   1: 570822.552 ns/op
Iteration   2: 566621.398 ns/op
Iteration   3: 565994.080 ns/op
Iteration   4: 559400.805 ns/op
Iteration   5: 560587.761 ns/op
Iteration   6: 565350.194 ns/op
Iteration   7: 563125.375 ns/op
Iteration   8: 559646.631 ns/op
Iteration   9: 560584.766 ns/op
Iteration  10: 558093.388 ns/op


Result "deserialization_events_2k":
  563022.695 ±(99.9%) 6145.983 ns/op [Average]
  (min, avg, max) = (558093.388, 563022.695, 570822.552), stdev = 4065.187
  CI (99.9%): [556876.712, 569168.678] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_events_4k

# Run progress: 39.44% complete, ETA 00:42:56
# Fork: 1 of 1
# Warmup Iteration   1: 1452045.218 ns/op
Iteration   1: 1097796.992 ns/op
Iteration   2: 1082349.307 ns/op
Iteration   3: 1068489.434 ns/op
Iteration   4: 1080030.543 ns/op
Iteration   5: 1074209.820 ns/op
Iteration   6: 1071928.950 ns/op
Iteration   7: 1066189.249 ns/op
Iteration   8: 1068493.307 ns/op
Iteration   9: 1070740.100 ns/op
Iteration  10: 1073026.233 ns/op


Result "deserialization_events_4k":
  1075325.393 ±(99.9%) 14186.192 ns/op [Average]
  (min, avg, max) = (1066189.249, 1075325.393, 1097796.992), stdev = 9383.288
  CI (99.9%): [1061139.201, 1089511.586] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_events_64k

# Run progress: 39.72% complete, ETA 00:42:45
# Fork: 1 of 1
# Warmup Iteration   1: 27791978.083 ns/op
Iteration   1: 22734855.364 ns/op
Iteration   2: 22228314.756 ns/op
Iteration   3: 21742721.652 ns/op
Iteration   4: 21745359.522 ns/op
Iteration   5: 21745287.022 ns/op
Iteration   6: 21744793.826 ns/op
Iteration   7: 21744528.239 ns/op
Iteration   8: 21745313.326 ns/op
Iteration   9: 21741994.261 ns/op
Iteration  10: 21744640.522 ns/op


Result "deserialization_events_64k":
  21891780.849 ±(99.9%) 503442.063 ns/op [Average]
  (min, avg, max) = (21741994.261, 21891780.849, 22734855.364), stdev = 332995.754
  CI (99.9%): [21388338.786, 22395222.912] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_events_8k

# Run progress: 40.00% complete, ETA 00:42:35
# Fork: 1 of 1
# Warmup Iteration   1: 3164782.079 ns/op
Iteration   1: 2393353.388 ns/op
Iteration   2: 2475477.495 ns/op
Iteration   3: 2325805.842 ns/op
Iteration   4: 2336705.157 ns/op
Iteration   5: 2342104.286 ns/op
Iteration   6: 2336654.937 ns/op
Iteration   7: 2320650.610 ns/op
Iteration   8: 2337085.757 ns/op
Iteration   9: 2336688.287 ns/op
Iteration  10: 2364323.184 ns/op


Result "deserialization_events_8k":
  2356884.894 ±(99.9%) 70487.010 ns/op [Average]
  (min, avg, max) = (2320650.610, 2356884.894, 2475477.495), stdev = 46622.793
  CI (99.9%): [2286397.885, 2427371.904] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_site_1k

# Run progress: 40.28% complete, ETA 00:42:24
# Fork: 1 of 1
# Warmup Iteration   1: 466444.992 ns/op
Iteration   1: 216236.551 ns/op
Iteration   2: 211038.195 ns/op
Iteration   3: 210860.748 ns/op
Iteration   4: 209662.245 ns/op
Iteration   5: 210180.621 ns/op
Iteration   6: 210951.099 ns/op
Iteration   7: 211256.596 ns/op
Iteration   8: 209624.213 ns/op
Iteration   9: 210815.588 ns/op
Iteration  10: 211173.336 ns/op


Result "deserialization_site_1k":
  211179.919 ±(99.9%) 2833.121 ns/op [Average]
  (min, avg, max) = (209624.213, 211179.919, 216236.551), stdev = 1873.934
  CI (99.9%): [208346.799, 214013.040] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_site_2k

# Run progress: 40.56% complete, ETA 00:42:13
# Fork: 1 of 1
# Warmup Iteration   1: 721381.277 ns/op
Iteration   1: 398331.834 ns/op
Iteration   2: 395762.206 ns/op
Iteration   3: 390483.885 ns/op
Iteration   4: 389269.536 ns/op
Iteration   5: 388694.695 ns/op
Iteration   6: 389292.441 ns/op
Iteration   7: 388845.985 ns/op
Iteration   8: 388696.164 ns/op
Iteration   9: 391903.596 ns/op
Iteration  10: 389016.317 ns/op


Result "deserialization_site_2k":
  391029.666 ±(99.9%) 5105.006 ns/op [Average]
  (min, avg, max) = (388694.695, 391029.666, 398331.834), stdev = 3376.645
  CI (99.9%): [385924.660, 396134.671] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_site_4k

# Run progress: 40.83% complete, ETA 00:42:02
# Fork: 1 of 1
# Warmup Iteration   1: 1873545.507 ns/op
Iteration   1: 720115.490 ns/op
Iteration   2: 715379.065 ns/op
Iteration   3: 706786.235 ns/op
Iteration   4: 707783.829 ns/op
Iteration   5: 704386.273 ns/op
Iteration   6: 705277.911 ns/op
Iteration   7: 701809.723 ns/op
Iteration   8: 702336.017 ns/op
Iteration   9: 701814.945 ns/op
Iteration  10: 703283.446 ns/op


Result "deserialization_site_4k":
  706897.293 ±(99.9%) 9319.249 ns/op [Average]
  (min, avg, max) = (701809.723, 706897.293, 720115.490), stdev = 6164.106
  CI (99.9%): [697578.044, 716216.543] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_site_64k

# Run progress: 41.11% complete, ETA 00:41:51
# Fork: 1 of 1
# Warmup Iteration   1: 25011213.425 ns/op
Iteration   1: 13703203.000 ns/op
Iteration   2: 12502330.388 ns/op
Iteration   3: 12347389.099 ns/op
Iteration   4: 12196526.354 ns/op
Iteration   5: 12347660.494 ns/op
Iteration   6: 12197171.439 ns/op
Iteration   7: 12197918.817 ns/op
Iteration   8: 12347856.321 ns/op
Iteration   9: 12196983.524 ns/op
Iteration  10: 12196497.817 ns/op


Result "deserialization_site_64k":
  12423353.725 ±(99.9%) 697858.310 ns/op [Average]
  (min, avg, max) = (12196497.817, 12423353.725, 13703203.000), stdev = 461590.063
  CI (99.9%): [11725495.415, 13121212.035] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_site_8k

# Run progress: 41.39% complete, ETA 00:41:40
# Fork: 1 of 1
# Warmup Iteration   1: 3107024.898 ns/op
Iteration   1: 1404613.034 ns/op
Iteration   2: 1364498.508 ns/op
Iteration   3: 1353378.256 ns/op
Iteration   4: 1364397.255 ns/op
Iteration   5: 1357008.240 ns/op
Iteration   6: 1357002.704 ns/op
Iteration   7: 1368145.747 ns/op
Iteration   8: 1358843.720 ns/op
Iteration   9: 1356996.810 ns/op
Iteration  10: 1360740.365 ns/op


Result "deserialization_site_8k":
  1364562.464 ±(99.9%) 22315.329 ns/op [Average]
  (min, avg, max) = (1353378.256, 1364562.464, 1404613.034), stdev = 14760.209
  CI (99.9%): [1342247.135, 1386877.793] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_events_1k

# Run progress: 41.67% complete, ETA 00:41:29
# Fork: 1 of 1
# Warmup Iteration   1: 261846.094 ns/op
Iteration   1: 178750.278 ns/op
Iteration   2: 177235.491 ns/op
Iteration   3: 174538.516 ns/op
Iteration   4: 175978.480 ns/op
Iteration   5: 175483.081 ns/op
Iteration   6: 174962.572 ns/op
Iteration   7: 174291.786 ns/op
Iteration   8: 175851.003 ns/op
Iteration   9: 174229.847 ns/op
Iteration  10: 175375.804 ns/op


Result "serialization_events_1k":
  175669.686 ±(99.9%) 2134.672 ns/op [Average]
  (min, avg, max) = (174229.847, 175669.686, 178750.278), stdev = 1411.953
  CI (99.9%): [173535.014, 177804.358] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_events_2k

# Run progress: 41.94% complete, ETA 00:41:18
# Fork: 1 of 1
# Warmup Iteration   1: 616817.570 ns/op
Iteration   1: 382285.545 ns/op
Iteration   2: 377539.581 ns/op
Iteration   3: 375547.845 ns/op
Iteration   4: 375695.182 ns/op
Iteration   5: 374318.165 ns/op
Iteration   6: 374563.900 ns/op
Iteration   7: 373584.859 ns/op
Iteration   8: 371921.848 ns/op
Iteration   9: 372799.652 ns/op
Iteration  10: 373911.898 ns/op


Result "serialization_events_2k":
  375216.848 ±(99.9%) 4450.789 ns/op [Average]
  (min, avg, max) = (371921.848, 375216.848, 382285.545), stdev = 2943.921
  CI (99.9%): [370766.059, 379667.636] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_events_4k

# Run progress: 42.22% complete, ETA 00:41:07
# Fork: 1 of 1
# Warmup Iteration   1: 1068885.971 ns/op
Iteration   1: 757642.563 ns/op
Iteration   2: 754802.357 ns/op
Iteration   3: 749715.650 ns/op
Iteration   4: 747449.327 ns/op
Iteration   5: 745909.645 ns/op
Iteration   6: 743553.023 ns/op
Iteration   7: 748558.567 ns/op
Iteration   8: 743563.596 ns/op
Iteration   9: 747441.729 ns/op
Iteration  10: 747470.858 ns/op


Result "serialization_events_4k":
  748610.732 ±(99.9%) 6826.619 ns/op [Average]
  (min, avg, max) = (743553.023, 748610.732, 757642.563), stdev = 4515.386
  CI (99.9%): [741784.113, 755437.350] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_events_64k

# Run progress: 42.50% complete, ETA 00:40:56
# Fork: 1 of 1
# Warmup Iteration   1: 21761686.891 ns/op
Iteration   1: 16131345.500 ns/op
Iteration   2: 14707475.324 ns/op
Iteration   3: 14708652.191 ns/op
Iteration   4: 14708819.559 ns/op
Iteration   5: 14709395.206 ns/op
Iteration   6: 14709064.559 ns/op
Iteration   7: 14927485.000 ns/op
Iteration   8: 14711578.515 ns/op
Iteration   9: 14707761.426 ns/op
Iteration  10: 15155725.152 ns/op


Result "serialization_events_64k":
  14917730.243 ±(99.9%) 682607.891 ns/op [Average]
  (min, avg, max) = (14707475.324, 14917730.243, 16131345.500), stdev = 451502.855
  CI (99.9%): [14235122.352, 15600338.134] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_events_8k

# Run progress: 42.78% complete, ETA 00:40:45
# Fork: 1 of 1
# Warmup Iteration   1: 2278966.736 ns/op
Iteration   1: 1486154.122 ns/op
Iteration   2: 1472944.551 ns/op
Iteration   3: 1434886.339 ns/op
Iteration   4: 1430777.325 ns/op
Iteration   5: 1447315.175 ns/op
Iteration   6: 1434960.504 ns/op
Iteration   7: 1432841.775 ns/op
Iteration   8: 1436924.444 ns/op
Iteration   9: 1434880.405 ns/op
Iteration  10: 1434874.283 ns/op


Result "serialization_events_8k":
  1444655.892 ±(99.9%) 28958.947 ns/op [Average]
  (min, avg, max) = (1430777.325, 1444655.892, 1486154.122), stdev = 19154.550
  CI (99.9%): [1415696.945, 1473614.839] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_site_1k

# Run progress: 43.06% complete, ETA 00:40:34
# Fork: 1 of 1
# Warmup Iteration   1: 495059.824 ns/op
Iteration   1: 205895.537 ns/op
Iteration   2: 205186.921 ns/op
Iteration   3: 209402.039 ns/op
Iteration   4: 202611.337 ns/op
Iteration   5: 204806.984 ns/op
Iteration   6: 204101.533 ns/op
Iteration   7: 203851.823 ns/op
Iteration   8: 204350.440 ns/op
Iteration   9: 203190.172 ns/op
Iteration  10: 203312.503 ns/op


Result "serialization_site_1k":
  204670.929 ±(99.9%) 2918.819 ns/op [Average]
  (min, avg, max) = (202611.337, 204670.929, 209402.039), stdev = 1930.618
  CI (99.9%): [201752.110, 207589.748] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_site_2k

# Run progress: 43.33% complete, ETA 00:40:23
# Fork: 1 of 1
# Warmup Iteration   1: 1495365.812 ns/op
Iteration   1: 448058.700 ns/op
Iteration   2: 388834.769 ns/op
Iteration   3: 387950.839 ns/op
Iteration   4: 389750.522 ns/op
Iteration   5: 386438.154 ns/op
Iteration   6: 390200.687 ns/op
Iteration   7: 388373.010 ns/op
Iteration   8: 384497.291 ns/op
Iteration   9: 385975.233 ns/op
Iteration  10: 384350.806 ns/op


Result "serialization_site_2k":
  393443.001 ±(99.9%) 29175.561 ns/op [Average]
  (min, avg, max) = (384350.806, 393443.001, 448058.700), stdev = 19297.827
  CI (99.9%): [364267.440, 422618.562] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_site_4k

# Run progress: 43.61% complete, ETA 00:40:12
# Fork: 1 of 1
# Warmup Iteration   1: 2604328.919 ns/op
Iteration   1: 1428731.077 ns/op
Iteration   2: 727384.285 ns/op
Iteration   3: 727881.630 ns/op
Iteration   4: 723128.832 ns/op
Iteration   5: 715381.284 ns/op
Iteration   6: 720016.020 ns/op
Iteration   7: 719492.283 ns/op
Iteration   8: 722628.355 ns/op
Iteration   9: 717444.250 ns/op
Iteration  10: 721079.451 ns/op


Result "serialization_site_4k":
  792316.747 ±(99.9%) 338123.639 ns/op [Average]
  (min, avg, max) = (715381.284, 792316.747, 1428731.077), stdev = 223647.852
  CI (99.9%): [454193.108, 1130440.385] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_site_64k

# Run progress: 43.89% complete, ETA 00:40:01
# Fork: 1 of 1
# Warmup Iteration   1: 29426492.588 ns/op
Iteration   1: 13335714.440 ns/op
Iteration   2: 12659289.013 ns/op
Iteration   3: 12822238.962 ns/op
Iteration   4: 12660841.709 ns/op
Iteration   5: 12659607.519 ns/op
Iteration   6: 12659907.544 ns/op
Iteration   7: 12660031.089 ns/op
Iteration   8: 12659875.481 ns/op
Iteration   9: 12822036.974 ns/op
Iteration  10: 12661159.975 ns/op


Result "serialization_site_64k":
  12760070.271 ±(99.9%) 322304.912 ns/op [Average]
  (min, avg, max) = (12659289.013, 12760070.271, 13335714.440), stdev = 213184.744
  CI (99.9%): [12437765.358, 13082375.183] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_site_8k

# Run progress: 44.17% complete, ETA 00:39:50
# Fork: 1 of 1
# Warmup Iteration   1: 7877603.283 ns/op
Iteration   1: 2222446.593 ns/op
Iteration   2: 1418635.082 ns/op
Iteration   3: 1400714.476 ns/op
Iteration   4: 1414561.709 ns/op
Iteration   5: 1404659.893 ns/op
Iteration   6: 1396828.712 ns/op
Iteration   7: 1402655.004 ns/op
Iteration   8: 1392887.613 ns/op
Iteration   9: 1406766.176 ns/op
Iteration  10: 1398714.478 ns/op


Result "serialization_site_8k":
  1485886.974 ±(99.9%) 391447.901 ns/op [Average]
  (min, avg, max) = (1392887.613, 1485886.974, 2222446.593), stdev = 258918.549
  CI (99.9%): [1094439.073, 1877334.874] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_events_1k

# Run progress: 44.44% complete, ETA 00:39:38
# Fork: 1 of 1
# Warmup Iteration   1: 394219.358 ns/op
Iteration   1: 301722.774 ns/op
Iteration   2: 296858.427 ns/op
Iteration   3: 292773.731 ns/op
Iteration   4: 292774.832 ns/op
Iteration   5: 291995.233 ns/op
Iteration   6: 291748.266 ns/op
Iteration   7: 293189.402 ns/op
Iteration   8: 291996.304 ns/op
Iteration   9: 298539.491 ns/op
Iteration  10: 291505.306 ns/op


Result "deserialization_events_1k":
  294310.377 ±(99.9%) 5296.178 ns/op [Average]
  (min, avg, max) = (291505.306, 294310.377, 301722.774), stdev = 3503.094
  CI (99.9%): [289014.198, 299606.555] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_events_2k

# Run progress: 44.72% complete, ETA 00:39:27
# Fork: 1 of 1
# Warmup Iteration   1: 822114.760 ns/op
Iteration   1: 619252.492 ns/op
Iteration   2: 604665.635 ns/op
Iteration   3: 600308.133 ns/op
Iteration   4: 604661.454 ns/op
Iteration   5: 600381.750 ns/op
Iteration   6: 599564.755 ns/op
Iteration   7: 601390.003 ns/op
Iteration   8: 599227.278 ns/op
Iteration   9: 600665.725 ns/op
Iteration  10: 600293.615 ns/op


Result "deserialization_events_2k":
  603041.084 ±(99.9%) 9087.403 ns/op [Average]
  (min, avg, max) = (599227.278, 603041.084, 619252.492), stdev = 6010.755
  CI (99.9%): [593953.681, 612128.487] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_events_4k

# Run progress: 45.00% complete, ETA 00:39:16
# Fork: 1 of 1
# Warmup Iteration   1: 1667488.607 ns/op
Iteration   1: 1175297.235 ns/op
Iteration   2: 1173814.808 ns/op
Iteration   3: 1148243.832 ns/op
Iteration   4: 1158873.779 ns/op
Iteration   5: 1152198.107 ns/op
Iteration   6: 1156205.099 ns/op
Iteration   7: 1158884.832 ns/op
Iteration   8: 1150856.983 ns/op
Iteration   9: 1153844.374 ns/op
Iteration  10: 1155073.932 ns/op


Result "deserialization_events_4k":
  1158329.298 ±(99.9%) 13880.983 ns/op [Average]
  (min, avg, max) = (1148243.832, 1158329.298, 1175297.235), stdev = 9181.411
  CI (99.9%): [1144448.315, 1172210.281] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_events_64k

# Run progress: 45.28% complete, ETA 00:39:05
# Fork: 1 of 1
# Warmup Iteration   1: 31271907.813 ns/op
Iteration   1: 24398004.537 ns/op
Iteration   2: 23817546.071 ns/op
Iteration   3: 23815032.881 ns/op
Iteration   4: 23262946.744 ns/op
Iteration   5: 23258875.558 ns/op
Iteration   6: 23262736.907 ns/op
Iteration   7: 23817601.905 ns/op
Iteration   8: 23266766.442 ns/op
Iteration   9: 23258832.326 ns/op
Iteration  10: 24401316.317 ns/op


Result "deserialization_events_64k":
  23655965.969 ±(99.9%) 705474.079 ns/op [Average]
  (min, avg, max) = (23258832.326, 23655965.969, 24401316.317), stdev = 466627.423
  CI (99.9%): [22950491.890, 24361440.048] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_events_8k

# Run progress: 45.56% complete, ETA 00:38:54
# Fork: 1 of 1
# Warmup Iteration   1: 3624934.645 ns/op
Iteration   1: 2475496.240 ns/op
Iteration   2: 2475554.678 ns/op
Iteration   3: 2457345.423 ns/op
Iteration   4: 2439336.646 ns/op
Iteration   5: 2433710.735 ns/op
Iteration   6: 2427431.990 ns/op
Iteration   7: 2433370.119 ns/op
Iteration   8: 2409932.359 ns/op
Iteration   9: 2457312.076 ns/op
Iteration  10: 2421925.639 ns/op


Result "deserialization_events_8k":
  2443141.591 ±(99.9%) 33801.065 ns/op [Average]
  (min, avg, max) = (2409932.359, 2443141.591, 2475554.678), stdev = 22357.312
  CI (99.9%): [2409340.525, 2476942.656] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_site_1k

# Run progress: 45.83% complete, ETA 00:38:42
# Fork: 1 of 1
# Warmup Iteration   1: 482403.696 ns/op
Iteration   1: 274144.008 ns/op
Iteration   2: 271254.967 ns/op
Iteration   3: 267266.271 ns/op
Iteration   4: 268552.195 ns/op
Iteration   5: 270075.273 ns/op
Iteration   6: 273169.864 ns/op
Iteration   7: 269427.253 ns/op
Iteration   8: 269060.028 ns/op
Iteration   9: 268771.318 ns/op
Iteration  10: 268267.685 ns/op


Result "deserialization_site_1k":
  269998.886 ±(99.9%) 3346.374 ns/op [Average]
  (min, avg, max) = (267266.271, 269998.886, 274144.008), stdev = 2213.419
  CI (99.9%): [266652.512, 273345.260] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_site_2k

# Run progress: 46.11% complete, ETA 00:38:31
# Fork: 1 of 1
# Warmup Iteration   1: 729782.365 ns/op
Iteration   1: 492214.911 ns/op
Iteration   2: 485262.748 ns/op
Iteration   3: 480580.169 ns/op
Iteration   4: 483621.925 ns/op
Iteration   5: 481748.086 ns/op
Iteration   6: 481039.836 ns/op
Iteration   7: 483376.859 ns/op
Iteration   8: 481056.572 ns/op
Iteration   9: 483833.058 ns/op
Iteration  10: 481970.580 ns/op


Result "deserialization_site_2k":
  483470.474 ±(99.9%) 5167.557 ns/op [Average]
  (min, avg, max) = (480580.169, 483470.474, 492214.911), stdev = 3418.019
  CI (99.9%): [478302.917, 488638.031] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_site_4k

# Run progress: 46.39% complete, ETA 00:38:20
# Fork: 1 of 1
# Warmup Iteration   1: 1368629.527 ns/op
Iteration   1: 872048.568 ns/op
Iteration   2: 865895.493 ns/op
Iteration   3: 869664.546 ns/op
Iteration   4: 867401.329 ns/op
Iteration   5: 863652.589 ns/op
Iteration   6: 872040.364 ns/op
Iteration   7: 862154.203 ns/op
Iteration   8: 861408.299 ns/op
Iteration   9: 863639.868 ns/op
Iteration  10: 858449.524 ns/op


Result "deserialization_site_4k":
  865635.478 ±(99.9%) 6966.768 ns/op [Average]
  (min, avg, max) = (858449.524, 865635.478, 872048.568), stdev = 4608.085
  CI (99.9%): [858668.711, 872602.246] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_site_64k

# Run progress: 46.67% complete, ETA 00:38:09
# Fork: 1 of 1
# Warmup Iteration   1: 22738605.545 ns/op
Iteration   1: 16397847.475 ns/op
Iteration   2: 16131840.984 ns/op
Iteration   3: 15875456.349 ns/op
Iteration   4: 15874750.540 ns/op
Iteration   5: 15875782.730 ns/op
Iteration   6: 16130829.984 ns/op
Iteration   7: 16133130.694 ns/op
Iteration   8: 15876929.794 ns/op
Iteration   9: 15874987.143 ns/op
Iteration  10: 15875133.524 ns/op


Result "deserialization_site_64k":
  16004668.922 ±(99.9%) 277531.663 ns/op [Average]
  (min, avg, max) = (15874750.540, 16004668.922, 16397847.475), stdev = 183570.011
  CI (99.9%): [15727137.258, 16282200.585] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_site_8k

# Run progress: 46.94% complete, ETA 00:37:58
# Fork: 1 of 1
# Warmup Iteration   1: 2858562.289 ns/op
Iteration   1: 1845275.039 ns/op
Iteration   2: 1828361.069 ns/op
Iteration   3: 1825019.883 ns/op
Iteration   4: 1808507.045 ns/op
Iteration   5: 1821841.913 ns/op
Iteration   6: 1828329.890 ns/op
Iteration   7: 1838425.206 ns/op
Iteration   8: 1923230.837 ns/op
Iteration   9: 2020363.158 ns/op
Iteration  10: 1996215.339 ns/op


Result "deserialization_site_8k":
  1873556.938 ±(99.9%) 117593.476 ns/op [Average]
  (min, avg, max) = (1808507.045, 1873556.938, 2020363.158), stdev = 77780.804
  CI (99.9%): [1755963.462, 1991150.414] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_events_1k

# Run progress: 47.22% complete, ETA 00:37:46
# Fork: 1 of 1
# Warmup Iteration   1: 836501.580 ns/op
Iteration   1: 457300.444 ns/op
Iteration   2: 435776.541 ns/op
Iteration   3: 437682.622 ns/op
Iteration   4: 432769.635 ns/op
Iteration   5: 446874.676 ns/op
Iteration   6: 432201.103 ns/op
Iteration   7: 432252.611 ns/op
Iteration   8: 431660.843 ns/op
Iteration   9: 432763.051 ns/op
Iteration  10: 432577.241 ns/op


Result "serialization_events_1k":
  437185.877 ±(99.9%) 12756.238 ns/op [Average]
  (min, avg, max) = (431660.843, 437185.877, 457300.444), stdev = 8437.462
  CI (99.9%): [424429.639, 449942.115] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_events_2k

# Run progress: 47.50% complete, ETA 00:37:36
# Fork: 1 of 1
# Warmup Iteration   1: 1295936.477 ns/op
Iteration   1: 884334.900 ns/op
Iteration   2: 868152.111 ns/op
Iteration   3: 870373.998 ns/op
Iteration   4: 868149.049 ns/op
Iteration   5: 864404.031 ns/op
Iteration   6: 883472.811 ns/op
Iteration   7: 863804.909 ns/op
Iteration   8: 863653.648 ns/op
Iteration   9: 863660.265 ns/op
Iteration  10: 866639.003 ns/op


Result "serialization_events_2k":
  869664.473 ±(99.9%) 11865.052 ns/op [Average]
  (min, avg, max) = (863653.648, 869664.473, 884334.900), stdev = 7847.997
  CI (99.9%): [857799.421, 881529.524] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_events_4k

# Run progress: 47.78% complete, ETA 00:37:24
# Fork: 1 of 1
# Warmup Iteration   1: 2584214.204 ns/op
Iteration   1: 1770138.474 ns/op
Iteration   2: 1736303.604 ns/op
Iteration   3: 1721391.697 ns/op
Iteration   4: 1730267.644 ns/op
Iteration   5: 1712552.818 ns/op
Iteration   6: 1715413.523 ns/op
Iteration   7: 1712437.854 ns/op
Iteration   8: 1718424.041 ns/op
Iteration   9: 1721313.000 ns/op
Iteration  10: 1718389.337 ns/op


Result "serialization_events_4k":
  1725663.199 ±(99.9%) 26219.098 ns/op [Average]
  (min, avg, max) = (1712437.854, 1725663.199, 1770138.474), stdev = 17342.310
  CI (99.9%): [1699444.102, 1751882.297] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_events_64k

# Run progress: 48.06% complete, ETA 00:37:13
# Fork: 1 of 1
# Warmup Iteration   1: 52671500.158 ns/op
Iteration   1: 41674075.958 ns/op
Iteration   2: 40019721.000 ns/op
Iteration   3: 40019317.640 ns/op
Iteration   4: 40004455.040 ns/op
Iteration   5: 38475877.808 ns/op
Iteration   6: 38476781.731 ns/op
Iteration   7: 40046252.120 ns/op
Iteration   8: 40024275.000 ns/op
Iteration   9: 38479886.308 ns/op
Iteration  10: 38470404.769 ns/op


Result "serialization_events_64k":
  39569104.737 ±(99.9%) 1612874.798 ns/op [Average]
  (min, avg, max) = (38470404.769, 39569104.737, 41674075.958), stdev = 1066816.816
  CI (99.9%): [37956229.939, 41181979.536] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_events_8k

# Run progress: 48.33% complete, ETA 00:37:02
# Fork: 1 of 1
# Warmup Iteration   1: 5350120.257 ns/op
Iteration   1: 3891644.895 ns/op
Iteration   2: 3802696.354 ns/op
Iteration   3: 3773940.023 ns/op
Iteration   4: 3788401.614 ns/op
Iteration   5: 3817224.760 ns/op
Iteration   6: 3817080.702 ns/op
Iteration   7: 3802815.323 ns/op
Iteration   8: 3817299.897 ns/op
Iteration   9: 3876448.950 ns/op
Iteration  10: 3803430.749 ns/op


Result "serialization_events_8k":
  3819098.327 ±(99.9%) 55945.776 ns/op [Average]
  (min, avg, max) = (3773940.023, 3819098.327, 3891644.895), stdev = 37004.667
  CI (99.9%): [3763152.550, 3875044.103] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_site_1k

# Run progress: 48.61% complete, ETA 00:36:50
# Fork: 1 of 1
# Warmup Iteration   1: 501753.268 ns/op
Iteration   1: 335039.391 ns/op
Iteration   2: 332476.215 ns/op
Iteration   3: 330175.333 ns/op
Iteration   4: 329087.652 ns/op
Iteration   5: 337288.835 ns/op
Iteration   6: 330825.801 ns/op
Iteration   7: 327360.076 ns/op
Iteration   8: 329300.568 ns/op
Iteration   9: 327802.592 ns/op
Iteration  10: 327463.676 ns/op


Result "serialization_site_1k":
  330682.014 ±(99.9%) 5046.268 ns/op [Average]
  (min, avg, max) = (327360.076, 330682.014, 337288.835), stdev = 3337.794
  CI (99.9%): [325635.746, 335728.282] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_site_2k

# Run progress: 48.89% complete, ETA 00:36:39
# Fork: 1 of 1
# Warmup Iteration   1: 1312909.720 ns/op
Iteration   1: 615078.234 ns/op
Iteration   2: 613185.709 ns/op
Iteration   3: 603909.351 ns/op
Iteration   4: 607217.024 ns/op
Iteration   5: 605477.888 ns/op
Iteration   6: 602471.568 ns/op
Iteration   7: 605023.678 ns/op
Iteration   8: 627813.399 ns/op
Iteration   9: 620399.384 ns/op
Iteration  10: 606862.883 ns/op


Result "serialization_site_2k":
  610743.912 ±(99.9%) 12471.581 ns/op [Average]
  (min, avg, max) = (602471.568, 610743.912, 627813.399), stdev = 8249.179
  CI (99.9%): [598272.331, 623215.493] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_site_4k

# Run progress: 49.17% complete, ETA 00:36:28
# Fork: 1 of 1
# Warmup Iteration   1: 2218352.022 ns/op
Iteration   1: 1179409.842 ns/op
Iteration   2: 1168327.939 ns/op
Iteration   3: 1171083.110 ns/op
Iteration   4: 1164281.943 ns/op
Iteration   5: 1152207.539 ns/op
Iteration   6: 1160215.235 ns/op
Iteration   7: 1164268.671 ns/op
Iteration   8: 1165609.544 ns/op
Iteration   9: 1160192.818 ns/op
Iteration  10: 1157507.139 ns/op


Result "serialization_site_4k":
  1164310.378 ±(99.9%) 11471.779 ns/op [Average]
  (min, avg, max) = (1152207.539, 1164310.378, 1179409.842), stdev = 7587.872
  CI (99.9%): [1152838.599, 1175782.157] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_site_64k

# Run progress: 49.44% complete, ETA 00:36:16
# Fork: 1 of 1
# Warmup Iteration   1: 29418506.294 ns/op
Iteration   1: 23259894.047 ns/op
Iteration   2: 22228597.511 ns/op
Iteration   3: 21745315.543 ns/op
Iteration   4: 21745245.174 ns/op
Iteration   5: 21744625.739 ns/op
Iteration   6: 21745639.522 ns/op
Iteration   7: 21745642.022 ns/op
Iteration   8: 21280251.426 ns/op
Iteration   9: 21742922.870 ns/op
Iteration  10: 21744087.413 ns/op


Result "serialization_site_64k":
  21898222.127 ±(99.9%) 798410.466 ns/op [Average]
  (min, avg, max) = (21280251.426, 21898222.127, 23259894.047), stdev = 528099.089
  CI (99.9%): [21099811.660, 22696632.593] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_site_8k

# Run progress: 49.72% complete, ETA 00:36:05
# Fork: 1 of 1
# Warmup Iteration   1: 3691707.461 ns/op
Iteration   1: 2375581.088 ns/op
Iteration   2: 2347681.096 ns/op
Iteration   3: 2320610.137 ns/op
Iteration   4: 2325858.379 ns/op
Iteration   5: 2331395.263 ns/op
Iteration   6: 2315046.118 ns/op
Iteration   7: 2309728.085 ns/op
Iteration   8: 2315018.961 ns/op
Iteration   9: 2315033.706 ns/op
Iteration  10: 2315024.222 ns/op


Result "serialization_site_8k":
  2327097.706 ±(99.9%) 30739.270 ns/op [Average]
  (min, avg, max) = (2309728.085, 2327097.706, 2375581.088), stdev = 20332.124
  CI (99.9%): [2296358.435, 2357836.976] (assumes normal distribution)


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_events_1k

# Run progress: 50.00% complete, ETA 00:35:53
# Fork: 1 of 1
# Warmup Iteration   1: n = 1477, mean = 675728 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 480768, 498688, 1064960, 1161626, 3298509, 19035324, 26804224, 26804224 ns/op
Iteration   1: n = 1946, mean = 515468 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 477696, 488448, 547840, 637235, 877629, 1682131, 1878016, 1878016 ns/op
Iteration   2: n = 2012, mean = 496775 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 483328, 486912, 500224, 512512, 784804, 1312315, 4001792, 4001792 ns/op
Iteration   3: n = 2004, mean = 499443 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 482816, 486912, 498688, 515072, 849869, 1454019, 3407872, 3407872 ns/op
Iteration   4: n = 2003, mean = 499115 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 482304, 487424, 505344, 517120, 852500, 1287946, 2945024, 2945024 ns/op
Iteration   5: n = 2017, mean = 495688 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 482816, 486912, 502272, 516659, 646738, 1325150, 1667072, 1667072 ns/op
Iteration   6: n = 2018, mean = 495539 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 482816, 487424, 504832, 513536, 604262, 1387454, 1728512, 1728512 ns/op
Iteration   7: n = 2004, mean = 498950 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 482816, 487424, 505344, 518144, 861184, 1300234, 1394688, 1394688 ns/op
Iteration   8: n = 2006, mean = 498561 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 482816, 487424, 507904, 517453, 838461, 1382027, 1458176, 1458176 ns/op
Iteration   9: n = 1989, mean = 502587 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 481792, 487424, 508416, 532480, 860262, 1317376, 1368064, 1368064 ns/op
Iteration  10: n = 2002, mean = 499347 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 483328, 486912, 503296, 515584, 852931, 1416933, 2576384, 2576384 ns/op


Result "deserialization_events_1k":
  N = 20001
  mean = 500093.600 ±(99.9%) 1768.800 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 17287 
    [ 500000.000, 1000000.000) = 2623 
    [1000000.000, 1500000.000) = 82 
    [1500000.000, 2000000.000) = 5 
    [2000000.000, 2500000.000) = 0 
    [2500000.000, 3000000.000) = 2 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 477696.000 ns/op
     p(50.0000) = 487424.000 ns/op
     p(90.0000) = 506880.000 ns/op
     p(95.0000) = 521216.000 ns/op
     p(99.0000) = 852992.000 ns/op
     p(99.9000) = 1327095.808 ns/op
     p(99.9900) = 3407779.430 ns/op
     p(99.9990) = 4001792.000 ns/op
     p(99.9999) = 4001792.000 ns/op
    p(100.0000) = 4001792.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_events_2k

# Run progress: 50.28% complete, ETA 00:35:41
# Fork: 1 of 1
# Warmup Iteration   1: n = 772, mean = 1293532 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 904192, 961536, 1982464, 2323866, 5560566, 32473088, 32473088, 32473088 ns/op
Iteration   1: n = 1041, mean = 966393 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 901120, 924672, 1052672, 1067008, 1616527, 8419406, 8699904, 8699904 ns/op
Iteration   2: n = 1070, mean = 934161 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 912384, 919552, 946176, 963021, 1290527, 2379876, 2420736, 2420736 ns/op
Iteration   3: n = 1065, mean = 938726 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 912384, 919552, 953344, 967680, 1349919, 4682248, 4882432, 4882432 ns/op
Iteration   4: n = 1063, mean = 940858 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 912384, 919552, 944128, 955392, 1266565, 11873026, 12566528, 12566528 ns/op
Iteration   5: n = 1067, mean = 936997 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 913408, 920576, 952320, 967270, 1451213, 1793352, 1794048, 1794048 ns/op
Iteration   6: n = 1071, mean = 933806 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 912384, 919552, 942080, 962355, 1603256, 1853784, 1865728, 1865728 ns/op
Iteration   7: n = 1067, mean = 937190 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 911360, 919552, 952320, 970342, 1453179, 1812439, 1814528, 1814528 ns/op
Iteration   8: n = 1071, mean = 933200 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 911360, 918528, 945152, 967680, 1289748, 1847345, 1859584, 1859584 ns/op
Iteration   9: n = 1063, mean = 940868 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 912384, 919552, 950272, 971776, 1587937, 2167013, 2195456, 2195456 ns/op
Iteration  10: n = 1064, mean = 940819 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 912384, 918528, 944128, 975872, 1593549, 4072182, 4218880, 4218880 ns/op


Result "deserialization_events_2k":
  N = 10642
  mean = 940230.988 ±(99.9%) 5318.624 ns/op

  Histogram, ns/op:
    [       0.000,  1250000.000) = 10489 
    [ 1250000.000,  2500000.000) = 149 
    [ 2500000.000,  3750000.000) = 0 
    [ 3750000.000,  5000000.000) = 2 
    [ 5000000.000,  6250000.000) = 0 
    [ 6250000.000,  7500000.000) = 0 
    [ 7500000.000,  8750000.000) = 1 
    [ 8750000.000, 10000000.000) = 0 
    [10000000.000, 11250000.000) = 0 
    [11250000.000, 12500000.000) = 0 
    [12500000.000, 13750000.000) = 1 
    [13750000.000, 15000000.000) = 0 
    [15000000.000, 16250000.000) = 0 
    [16250000.000, 17500000.000) = 0 
    [17500000.000, 18750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 901120.000 ns/op
     p(50.0000) = 919552.000 ns/op
     p(90.0000) = 951296.000 ns/op
     p(95.0000) = 982016.000 ns/op
     p(99.0000) = 1492398.080 ns/op
     p(99.9000) = 1861777.408 ns/op
     p(99.9900) = 12317904.077 ns/op
     p(99.9990) = 12566528.000 ns/op
     p(99.9999) = 12566528.000 ns/op
    p(100.0000) = 12566528.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_events_4k

# Run progress: 50.56% complete, ETA 00:35:29
# Fork: 1 of 1
# Warmup Iteration   1: n = 382, mean = 2614063 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1787904, 1844224, 4564582, 5128192, 10181509, 42270720, 42270720, 42270720 ns/op
Iteration   1: n = 533, mean = 1875449 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1763328, 1798144, 2060288, 2095718, 2839347, 11206656, 11206656, 11206656 ns/op
Iteration   2: n = 548, mean = 1825885 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1759232, 1773568, 1820877, 1925939, 3156009, 3903488, 3903488, 3903488 ns/op
Iteration   3: n = 557, mean = 1795022 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1757184, 1769472, 1802240, 1878016, 2582200, 3211264, 3211264, 3211264 ns/op
Iteration   4: n = 552, mean = 1810758 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1757184, 1771520, 1830912, 1864397, 2855854, 3166208, 3166208, 3166208 ns/op
Iteration   5: n = 554, mean = 1804935 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1757184, 1769472, 1804288, 1864192, 2832179, 5251072, 5251072, 5251072 ns/op
Iteration   6: n = 558, mean = 1794048 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1757184, 1769472, 1798144, 1860198, 2587402, 3112960, 3112960, 3112960 ns/op
Iteration   7: n = 554, mean = 1806007 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1757184, 1771520, 1828864, 1871872, 2506547, 5775360, 5775360, 5775360 ns/op
Iteration   8: n = 553, mean = 1810580 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1757184, 1769472, 1817805, 1911398, 2883994, 3129344, 3129344, 3129344 ns/op
Iteration   9: n = 550, mean = 1820248 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1757184, 1769472, 1838899, 2110771, 2643108, 4513792, 4513792, 4513792 ns/op
Iteration  10: n = 548, mean = 1826909 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1757184, 1771520, 1839309, 1976730, 3052012, 5193728, 5193728, 5193728 ns/op


Result "deserialization_events_4k":
  N = 5507
  mean = 1816713.228 ±(99.9%) 10073.334 ns/op

  Histogram, ns/op:
    [ 1000000.000,  2000000.000) = 5245 
    [ 2000000.000,  3000000.000) = 221 
    [ 3000000.000,  4000000.000) = 35 
    [ 4000000.000,  5000000.000) = 2 
    [ 5000000.000,  6000000.000) = 3 
    [ 6000000.000,  7000000.000) = 0 
    [ 7000000.000,  8000000.000) = 0 
    [ 8000000.000,  9000000.000) = 0 
    [ 9000000.000, 10000000.000) = 0 
    [10000000.000, 11000000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 1757184.000 ns/op
     p(50.0000) = 1771520.000 ns/op
     p(90.0000) = 1831321.600 ns/op
     p(95.0000) = 1973452.800 ns/op
     p(99.0000) = 2742681.600 ns/op
     p(99.9000) = 4743528.448 ns/op
     p(99.9900) = 11206656.000 ns/op
     p(99.9990) = 11206656.000 ns/op
     p(99.9999) = 11206656.000 ns/op
    p(100.0000) = 11206656.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_events_64k

# Run progress: 50.83% complete, ETA 00:35:16
# Fork: 1 of 1
# Warmup Iteration   1: n = 19, mean = 53449782 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 38600704, 42729472, 85458944, 162791424, 162791424, 162791424, 162791424, 162791424 ns/op
Iteration   1: n = 25, mean = 40357069 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 38535168, 38928384, 45848986, 48634266, 49676288, 49676288, 49676288, 49676288 ns/op
Iteration   2: n = 26, mean = 39137595 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 38273024, 38666240, 40271872, 44879053, 46989312, 46989312, 46989312, 46989312 ns/op
Iteration   3: n = 26, mean = 39407301 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 38207488, 38928384, 42139648, 44282675, 44695552, 44695552, 44695552, 44695552 ns/op
Iteration   4: n = 26, mean = 39493002 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 38207488, 38469632, 43660083, 46465024, 47382528, 47382528, 47382528, 47382528 ns/op
Iteration   5: n = 26, mean = 39160281 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 38207488, 38404096, 39387136, 49217536, 54263808, 54263808, 54263808, 54263808 ns/op
Iteration   6: n = 26, mean = 38734297 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 38207488, 38436864, 39813120, 40501248, 40501248, 40501248, 40501248, 40501248 ns/op
Iteration   7: n = 26, mean = 39004002 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 38141952, 38666240, 40035942, 42899866, 44367872, 44367872, 44367872, 44367872 ns/op
Iteration   8: n = 26, mean = 39263626 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 38141952, 38928384, 40324301, 45613056, 47448064, 47448064, 47448064, 47448064 ns/op
Iteration   9: n = 26, mean = 39051894 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 38207488, 38928384, 39800013, 41477734, 41615360, 41615360, 41615360, 41615360 ns/op
Iteration  10: n = 26, mean = 39475358 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 38207488, 39059456, 40343962, 45409894, 47841280, 47841280, 47841280, 47841280 ns/op


Result "deserialization_events_64k":
  N = 259
  mean = 39304393.637 ±(99.9%) 407460.520 ns/op

  Histogram, ns/op:
    [30000000.000, 32500000.000) = 0 
    [32500000.000, 35000000.000) = 0 
    [35000000.000, 37500000.000) = 0 
    [37500000.000, 40000000.000) = 228 
    [40000000.000, 42500000.000) = 16 
    [42500000.000, 45000000.000) = 7 
    [45000000.000, 47500000.000) = 5 
    [47500000.000, 50000000.000) = 2 
    [50000000.000, 52500000.000) = 0 
    [52500000.000, 55000000.000) = 1 
    [55000000.000, 57500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 38141952.000 ns/op
     p(50.0000) = 38862848.000 ns/op
     p(90.0000) = 40501248.000 ns/op
     p(95.0000) = 43646976.000 ns/op
     p(99.0000) = 48575283.200 ns/op
     p(99.9000) = 54263808.000 ns/op
     p(99.9900) = 54263808.000 ns/op
     p(99.9990) = 54263808.000 ns/op
     p(99.9999) = 54263808.000 ns/op
    p(100.0000) = 54263808.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_events_8k

# Run progress: 51.11% complete, ETA 00:35:04
# Fork: 1 of 1
# Warmup Iteration   1: n = 184, mean = 5429649 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3833856, 4067328, 7462912, 10002432, 26102989, 59637760, 59637760, 59637760 ns/op
Iteration   1: n = 248, mean = 4036013 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3837952, 3858432, 4399104, 4569907, 6993183, 8470528, 8470528, 8470528 ns/op
Iteration   2: n = 254, mean = 3934418 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3829760, 3854336, 3973120, 4151296, 6601114, 7897088, 7897088, 7897088 ns/op
Iteration   3: n = 257, mean = 3898165 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3825664, 3846144, 3948544, 4053402, 5251564, 5857280, 5857280, 5857280 ns/op
Iteration   4: n = 256, mean = 3911840 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3817472, 3850240, 3977216, 4093133, 6202327, 6725632, 6725632, 6725632 ns/op
Iteration   5: n = 258, mean = 3880468 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3813376, 3837952, 3908403, 4022477, 5097882, 5906432, 5906432, 5906432 ns/op
Iteration   6: n = 257, mean = 3903934 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3813376, 3846144, 3961651, 4192666, 5325292, 6332416, 6332416, 6332416 ns/op
Iteration   7: n = 257, mean = 3895503 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3817472, 3846144, 3928883, 4093952, 4903404, 6029312, 6029312, 6029312 ns/op
Iteration   8: n = 257, mean = 3905098 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3817472, 3842048, 3947725, 4500685, 5112136, 5898240, 5898240, 5898240 ns/op
Iteration   9: n = 256, mean = 3917872 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3817472, 3842048, 4018995, 4524442, 5184307, 6422528, 6422528, 6422528 ns/op
Iteration  10: n = 254, mean = 3935692 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3817472, 3842048, 4012032, 4593664, 6177178, 7086080, 7086080, 7086080 ns/op


Result "deserialization_events_8k":
  N = 2554
  mean = 3921456.514 ±(99.9%) 20219.108 ns/op

  Histogram, ns/op:
    [3000000.000, 3500000.000) = 0 
    [3500000.000, 4000000.000) = 2320 
    [4000000.000, 4500000.000) = 133 
    [4500000.000, 5000000.000) = 70 
    [5000000.000, 5500000.000) = 5 
    [5500000.000, 6000000.000) = 11 
    [6000000.000, 6500000.000) = 6 
    [6500000.000, 7000000.000) = 5 
    [7000000.000, 7500000.000) = 2 
    [7500000.000, 8000000.000) = 1 
    [8000000.000, 8500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 3813376.000 ns/op
     p(50.0000) = 3846144.000 ns/op
     p(90.0000) = 3981312.000 ns/op
     p(95.0000) = 4407296.000 ns/op
     p(99.0000) = 5607014.400 ns/op
     p(99.9000) = 7542456.320 ns/op
     p(99.9900) = 8470528.000 ns/op
     p(99.9990) = 8470528.000 ns/op
     p(99.9999) = 8470528.000 ns/op
    p(100.0000) = 8470528.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_site_1k

# Run progress: 51.39% complete, ETA 00:34:52
# Fork: 1 of 1
# Warmup Iteration   1: n = 3157, mean = 315824 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 214784, 226816, 405504, 609382, 1603666, 5865832, 25493504, 25493504 ns/op
Iteration   1: n = 4229, mean = 237859 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 216576, 226560, 241920, 347392, 405350, 1010422, 1554432, 1554432 ns/op
Iteration   2: n = 4313, mean = 231713 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 221184, 226048, 232448, 247808, 395776, 830362, 1081344, 1081344 ns/op
Iteration   3: n = 4369, mean = 228966 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 215040, 224768, 232704, 244736, 372378, 1047173, 3076096, 3076096 ns/op
Iteration   4: n = 4467, mean = 223724 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 215040, 219648, 225792, 234496, 326943, 990470, 1355776, 1355776 ns/op
Iteration   5: n = 4451, mean = 224719 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 215040, 219648, 225280, 232704, 279040, 1024324, 7200768, 7200768 ns/op
Iteration   6: n = 4418, mean = 226170 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 214016, 219648, 226048, 237837, 374492, 1007324, 3215360, 3215360 ns/op
Iteration   7: n = 4426, mean = 225766 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 213504, 219648, 226048, 238758, 344909, 1010561, 2265088, 2265088 ns/op
Iteration   8: n = 4380, mean = 228139 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 214272, 219648, 228096, 243187, 394752, 958707, 1886208, 1886208 ns/op
Iteration   9: n = 4363, mean = 229002 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 214016, 219904, 228608, 237773, 379290, 1085063, 9338880, 9338880 ns/op
Iteration  10: n = 4454, mean = 224375 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 215296, 219648, 225920, 235072, 303795, 956974, 2420736, 2420736 ns/op


Result "deserialization_site_1k":
  N = 43870
  mean = 227979.245 ±(99.9%) 1167.362 ns/op

  Histogram, ns/op:
    [       0.000,  1000000.000) = 43831 
    [ 1000000.000,  2000000.000) = 33 
    [ 2000000.000,  3000000.000) = 2 
    [ 3000000.000,  4000000.000) = 2 
    [ 4000000.000,  5000000.000) = 0 
    [ 5000000.000,  6000000.000) = 0 
    [ 6000000.000,  7000000.000) = 0 
    [ 7000000.000,  8000000.000) = 1 
    [ 8000000.000,  9000000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 213504.000 ns/op
     p(50.0000) = 220416.000 ns/op
     p(90.0000) = 229376.000 ns/op
     p(95.0000) = 240896.000 ns/op
     p(99.0000) = 384000.000 ns/op
     p(99.9000) = 987136.000 ns/op
     p(99.9900) = 2822406.144 ns/op
     p(99.9990) = 9338880.000 ns/op
     p(99.9999) = 9338880.000 ns/op
    p(100.0000) = 9338880.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_site_2k

# Run progress: 51.67% complete, ETA 00:34:40
# Fork: 1 of 1
# Warmup Iteration   1: n = 1688, mean = 590876 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 389632, 413184, 936038, 1162342, 3188941, 16821633, 32636928, 32636928 ns/op
Iteration   1: n = 2370, mean = 424997 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 389632, 408576, 431616, 534528, 727337, 1588056, 3375104, 3375104 ns/op
Iteration   2: n = 2398, mean = 417916 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 403456, 408064, 416256, 432640, 717824, 1337125, 4300800, 4300800 ns/op
Iteration   3: n = 2409, mean = 417659 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 395776, 407040, 422912, 435200, 736256, 1351741, 2842624, 2842624 ns/op
Iteration   4: n = 2454, mean = 407219 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 396288, 400384, 412160, 424960, 504730, 1208125, 1845248, 1845248 ns/op
Iteration   5: n = 2442, mean = 409283 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 394752, 400384, 413184, 426931, 712407, 1169875, 1470464, 1470464 ns/op
Iteration   6: n = 2439, mean = 409763 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 394752, 399872, 413696, 428544, 680141, 1239122, 1265664, 1265664 ns/op
Iteration   7: n = 2437, mean = 410116 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 394752, 399872, 413696, 425984, 646390, 1203667, 1257472, 1257472 ns/op
Iteration   8: n = 2419, mean = 413217 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 395264, 400896, 410624, 425984, 724787, 2921595, 3633152, 3633152 ns/op
Iteration   9: n = 2441, mean = 409397 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 395264, 399872, 413696, 428493, 643625, 1286369, 1581056, 1581056 ns/op
Iteration  10: n = 2442, mean = 409300 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 394752, 400896, 410624, 424448, 522516, 1174698, 3436544, 3436544 ns/op


Result "deserialization_site_2k":
  N = 24251
  mean = 412832.983 ±(99.9%) 1625.455 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 23721 
    [ 500000.000, 1000000.000) = 429 
    [1000000.000, 1500000.000) = 90 
    [1500000.000, 2000000.000) = 4 
    [2000000.000, 2500000.000) = 0 
    [2500000.000, 3000000.000) = 2 
    [3000000.000, 3500000.000) = 3 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 389632.000 ns/op
     p(50.0000) = 401408.000 ns/op
     p(90.0000) = 416768.000 ns/op
     p(95.0000) = 430592.000 ns/op
     p(99.0000) = 712704.000 ns/op
     p(99.9000) = 1221107.712 ns/op
     p(99.9900) = 3549554.278 ns/op
     p(99.9990) = 4300800.000 ns/op
     p(99.9999) = 4300800.000 ns/op
    p(100.0000) = 4300800.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_site_4k

# Run progress: 51.94% complete, ETA 00:34:28
# Fork: 1 of 1
# Warmup Iteration   1: n = 939, mean = 1063263 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 681984, 729088, 1654784, 2025472, 5346099, 35651584, 35651584, 35651584 ns/op
Iteration   1: n = 1381, mean = 726278 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 677888, 704512, 818995, 828416, 1003786, 1911206, 2041856, 2041856 ns/op
Iteration   2: n = 1403, mean = 712512 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 696320, 703488, 723968, 733184, 901038, 1482711, 1486848, 1486848 ns/op
Iteration   3: n = 1411, mean = 708398 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 678912, 699392, 712704, 729088, 1254523, 1807213, 1959936, 1959936 ns/op
Iteration   4: n = 1438, mean = 695312 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 677888, 684032, 705536, 716851, 967240, 1691900, 1730560, 1730560 ns/op
Iteration   5: n = 1431, mean = 698942 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 677888, 685056, 709632, 721306, 995820, 2830336, 3825664, 3825664 ns/op
Iteration   6: n = 1419, mean = 704343 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 676864, 685056, 710656, 726016, 1240678, 2825380, 3686400, 3686400 ns/op
Iteration   7: n = 1425, mean = 701574 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 677888, 685056, 705946, 724992, 1307607, 1796145, 1949696, 1949696 ns/op
Iteration   8: n = 1414, mean = 707417 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 677888, 685056, 705536, 726272, 1345434, 5012767, 5169152, 5169152 ns/op
Iteration   9: n = 1431, mean = 698752 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 677888, 685056, 710451, 718848, 1074053, 2375582, 3051520, 3051520 ns/op
Iteration  10: n = 1433, mean = 697693 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 677888, 684032, 704512, 716800, 1073234, 2849956, 3854336, 3854336 ns/op


Result "deserialization_site_4k":
  N = 14186
  mean = 705021.762 ±(99.9%) 2845.660 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 14006 
    [1000000.000, 1500000.000) = 153 
    [1500000.000, 2000000.000) = 20 
    [2000000.000, 2500000.000) = 1 
    [2500000.000, 3000000.000) = 0 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 3 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 1 
    [5000000.000, 5500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 676864.000 ns/op
     p(50.0000) = 687104.000 ns/op
     p(90.0000) = 712704.000 ns/op
     p(95.0000) = 733184.000 ns/op
     p(99.0000) = 1141268.480 ns/op
     p(99.9000) = 1625878.528 ns/op
     p(99.9900) = 5011372.442 ns/op
     p(99.9990) = 5169152.000 ns/op
     p(99.9999) = 5169152.000 ns/op
    p(100.0000) = 5169152.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_site_64k

# Run progress: 52.22% complete, ETA 00:34:15
# Fork: 1 of 1
# Warmup Iteration   1: n = 97, mean = 10309928 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7479296, 7938048, 11898061, 21436826, 98959360, 98959360, 98959360, 98959360 ns/op
Iteration   1: n = 129, mean = 7792053 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7462912, 7512064, 8421376, 9035776, 12317491, 13025280, 13025280, 13025280 ns/op
Iteration   2: n = 133, mean = 7628969 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7462912, 7495680, 7744717, 8207565, 12180849, 13189120, 13189120, 13189120 ns/op
Iteration   3: n = 134, mean = 7470065 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7118848, 7471104, 7593984, 8310784, 12626330, 14008320, 14008320, 14008320 ns/op
Iteration   4: n = 138, mean = 7257222 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7110656, 7159808, 7462912, 7831552, 9948529, 10977280, 10977280, 10977280 ns/op
Iteration   5: n = 137, mean = 7321495 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7102464, 7135232, 7726694, 8231322, 11546788, 12156928, 12156928, 12156928 ns/op
Iteration   6: n = 138, mean = 7273665 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7094272, 7131136, 7371981, 7771341, 13082788, 13664256, 13664256, 13664256 ns/op
Iteration   7: n = 137, mean = 7301524 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7094272, 7135232, 7518618, 8055194, 12151030, 13221888, 13221888, 13221888 ns/op
Iteration   8: n = 138, mean = 7263870 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7094272, 7143424, 7883162, 8011776, 8644116, 8896512, 8896512, 8896512 ns/op
Iteration   9: n = 137, mean = 7319881 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7094272, 7135232, 7905280, 8006042, 10931732, 12369920, 12369920, 12369920 ns/op
Iteration  10: n = 137, mean = 7308161 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7094272, 7143424, 7857766, 7990477, 10585211, 11976704, 11976704, 11976704 ns/op


Result "deserialization_site_64k":
  N = 1358
  mean = 7390197.443 ±(99.9%) 53544.258 ns/op

  Histogram, ns/op:
    [ 7000000.000,  7500000.000) = 1069 
    [ 7500000.000,  8000000.000) = 203 
    [ 8000000.000,  8500000.000) = 54 
    [ 8500000.000,  9000000.000) = 11 
    [ 9000000.000,  9500000.000) = 6 
    [ 9500000.000, 10000000.000) = 0 
    [10000000.000, 10500000.000) = 3 
    [10500000.000, 11000000.000) = 3 
    [11000000.000, 11500000.000) = 0 
    [11500000.000, 12000000.000) = 1 
    [12000000.000, 12500000.000) = 3 
    [12500000.000, 13000000.000) = 0 
    [13000000.000, 13500000.000) = 3 
    [13500000.000, 14000000.000) = 1 
    [14000000.000, 14500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 7094272.000 ns/op
     p(50.0000) = 7159808.000 ns/op
     p(90.0000) = 7798784.000 ns/op
     p(95.0000) = 8110899.200 ns/op
     p(99.0000) = 10297507.840 ns/op
     p(99.9000) = 13884801.024 ns/op
     p(99.9900) = 14008320.000 ns/op
     p(99.9990) = 14008320.000 ns/op
     p(99.9999) = 14008320.000 ns/op
    p(100.0000) = 14008320.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.deserialization_site_8k

# Run progress: 52.50% complete, ETA 00:34:03
# Fork: 1 of 1
# Warmup Iteration   1: n = 530, mean = 1885296 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1327104, 1445888, 2865971, 3733094, 9393603, 52428800, 52428800, 52428800 ns/op
Iteration   1: n = 727, mean = 1375743 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1310720, 1327104, 1482752, 1591706, 2416148, 2686976, 2686976, 2686976 ns/op
Iteration   2: n = 736, mean = 1358854 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1310720, 1320960, 1353728, 1419878, 2376745, 3424256, 3424256, 3424256 ns/op
Iteration   3: n = 762, mean = 1311978 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1257472, 1314816, 1339392, 1363661, 1806950, 2678784, 2678784, 2678784 ns/op
Iteration   4: n = 778, mean = 1285178 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1257472, 1265664, 1298432, 1314918, 1603543, 5005312, 5005312, 5005312 ns/op
Iteration   5: n = 777, mean = 1287082 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1257472, 1267712, 1294336, 1332224, 1932165, 2985984, 2985984, 2985984 ns/op
Iteration   6: n = 773, mean = 1292834 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1257472, 1267712, 1302528, 1320960, 2208727, 2646016, 2646016, 2646016 ns/op
Iteration   7: n = 773, mean = 1292672 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1257472, 1265664, 1301709, 1342464, 2042552, 3145728, 3145728, 3145728 ns/op
Iteration   8: n = 769, mean = 1300429 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1257472, 1267712, 1312768, 1354752, 2024653, 5832704, 5832704, 5832704 ns/op
Iteration   9: n = 771, mean = 1296514 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1257472, 1267712, 1296384, 1342259, 2210857, 2871296, 2871296, 2871296 ns/op
Iteration  10: n = 775, mean = 1290650 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1257472, 1267712, 1300480, 1325056, 2088305, 4227072, 4227072, 4227072 ns/op


Result "deserialization_site_8k":
  N = 7641
  mean = 1308524.049 ±(99.9%) 5827.904 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 7424 
    [1500000.000, 2000000.000) = 118 
    [2000000.000, 2500000.000) = 80 
    [2500000.000, 3000000.000) = 13 
    [3000000.000, 3500000.000) = 2 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 1 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 1257472.000 ns/op
     p(50.0000) = 1271808.000 ns/op
     p(90.0000) = 1333248.000 ns/op
     p(95.0000) = 1376051.200 ns/op
     p(99.0000) = 2092523.520 ns/op
     p(99.9000) = 2912354.304 ns/op
     p(99.9900) = 5832704.000 ns/op
     p(99.9990) = 5832704.000 ns/op
     p(99.9999) = 5832704.000 ns/op
    p(100.0000) = 5832704.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_events_1k

# Run progress: 52.78% complete, ETA 00:33:51
# Fork: 1 of 1
# Warmup Iteration   1: n = 527, mean = 1899743 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1386496, 1443840, 2667315, 3733914, 9224847, 15990784, 15990784, 15990784 ns/op
Iteration   1: n = 686, mean = 1456486 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1382400, 1419264, 1466982, 1589760, 2464891, 3436544, 3436544, 3436544 ns/op
Iteration   2: n = 690, mean = 1449233 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1384448, 1419264, 1458176, 1510810, 2392064, 3129344, 3129344, 3129344 ns/op
Iteration   3: n = 690, mean = 1449699 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1374208, 1402880, 1478656, 1581363, 2466161, 2834432, 2834432, 2834432 ns/op
Iteration   4: n = 692, mean = 1445468 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1378304, 1406976, 1465754, 1664717, 2335580, 2527232, 2527232, 2527232 ns/op
Iteration   5: n = 693, mean = 1442430 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1378304, 1404928, 1452032, 1725030, 2118124, 2519040, 2519040, 2519040 ns/op
Iteration   6: n = 694, mean = 1440157 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1374208, 1404928, 1437696, 1539584, 2434458, 3473408, 3473408, 3473408 ns/op
Iteration   7: n = 694, mean = 1439856 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1376256, 1404928, 1442816, 1511424, 2494669, 3997696, 3997696, 3997696 ns/op
Iteration   8: n = 696, mean = 1437308 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1372160, 1400832, 1438310, 1517363, 2371707, 4190208, 4190208, 4190208 ns/op
Iteration   9: n = 693, mean = 1443261 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1374208, 1406976, 1439744, 1520845, 2470134, 4202496, 4202496, 4202496 ns/op
Iteration  10: n = 692, mean = 1445669 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1378304, 1406976, 1459610, 1514189, 2387026, 6004736, 6004736, 6004736 ns/op


Result "serialization_events_1k":
  N = 6920
  mean = 1444936.213 ±(99.9%) 7290.143 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 6502 
    [1500000.000, 2000000.000) = 223 
    [2000000.000, 2500000.000) = 163 
    [2500000.000, 3000000.000) = 20 
    [3000000.000, 3500000.000) = 6 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 3 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 1 
    [6000000.000, 6500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 1372160.000 ns/op
     p(50.0000) = 1409024.000 ns/op
     p(90.0000) = 1456128.000 ns/op
     p(95.0000) = 1546240.000 ns/op
     p(99.0000) = 2371584.000 ns/op
     p(99.9000) = 3514826.752 ns/op
     p(99.9900) = 6004736.000 ns/op
     p(99.9990) = 6004736.000 ns/op
     p(99.9999) = 6004736.000 ns/op
    p(100.0000) = 6004736.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_events_2k

# Run progress: 53.06% complete, ETA 00:33:39
# Fork: 1 of 1
# Warmup Iteration   1: n = 199, mean = 5028612 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2711552, 3481600, 9355264, 11190272, 18743296, 22282240, 22282240, 22282240 ns/op
Iteration   1: n = 353, mean = 2834037 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2703360, 2744320, 3080192, 3284992, 4523622, 7307264, 7307264, 7307264 ns/op
Iteration   2: n = 361, mean = 2783635 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2686976, 2711552, 2812314, 3315712, 4645519, 4997120, 4997120, 4997120 ns/op
Iteration   3: n = 363, mean = 2761584 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2691072, 2715648, 2791834, 3039232, 3705897, 4091904, 4091904, 4091904 ns/op
Iteration   4: n = 358, mean = 2798220 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2682880, 2715648, 2782003, 3396198, 3760210, 11976704, 11976704, 11976704 ns/op
Iteration   5: n = 358, mean = 2794513 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2682880, 2715648, 2870886, 3362816, 3894764, 7176192, 7176192, 7176192 ns/op
Iteration   6: n = 360, mean = 2779090 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2678784, 2711552, 2821325, 3358515, 3635446, 7430144, 7430144, 7430144 ns/op
Iteration   7: n = 359, mean = 2792000 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2682880, 2715648, 2916352, 3387392, 4089446, 4751360, 4751360, 4751360 ns/op
Iteration   8: n = 360, mean = 2782674 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2686976, 2715648, 2801664, 3382886, 3716956, 5054464, 5054464, 5054464 ns/op
Iteration   9: n = 361, mean = 2771869 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2678784, 2719744, 2817229, 3284582, 3534111, 4489216, 4489216, 4489216 ns/op
Iteration  10: n = 357, mean = 2800815 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2678784, 2703360, 2813952, 3334144, 5069210, 9437184, 9437184, 9437184 ns/op


Result "serialization_events_2k":
  N = 3590
  mean = 2789710.297 ±(99.9%) 18108.864 ns/op

  Histogram, ns/op:
    [ 2000000.000,  3000000.000) = 3319 
    [ 3000000.000,  4000000.000) = 243 
    [ 4000000.000,  5000000.000) = 20 
    [ 5000000.000,  6000000.000) = 2 
    [ 6000000.000,  7000000.000) = 1 
    [ 7000000.000,  8000000.000) = 3 
    [ 8000000.000,  9000000.000) = 0 
    [ 9000000.000, 10000000.000) = 1 
    [10000000.000, 11000000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 2678784.000 ns/op
     p(50.0000) = 2715648.000 ns/op
     p(90.0000) = 2822144.000 ns/op
     p(95.0000) = 3330048.000 ns/op
     p(99.0000) = 3762339.840 ns/op
     p(99.9000) = 7357521.920 ns/op
     p(99.9900) = 11976704.000 ns/op
     p(99.9990) = 11976704.000 ns/op
     p(99.9999) = 11976704.000 ns/op
    p(100.0000) = 11976704.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_events_4k

# Run progress: 53.33% complete, ETA 00:33:26
# Fork: 1 of 1
# Warmup Iteration   1: n = 137, mean = 7308400 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5185536, 5562368, 11046093, 15446835, 34896609, 38731776, 38731776, 38731776 ns/op
Iteration   1: n = 186, mean = 5404033 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5185536, 5242880, 5999821, 6541722, 8486093, 8699904, 8699904, 8699904 ns/op
Iteration   2: n = 187, mean = 5347536 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5177344, 5234688, 5375590, 5989990, 9561047, 12271616, 12271616, 12271616 ns/op
Iteration   3: n = 188, mean = 5332687 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5185536, 5234688, 5466522, 5994496, 7385252, 8347648, 8347648, 8347648 ns/op
Iteration   4: n = 187, mean = 5355202 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5152768, 5218304, 5826150, 5996544, 8692695, 9240576, 9240576, 9240576 ns/op
Iteration   5: n = 186, mean = 5393815 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5169152, 5218304, 5938381, 6094029, 9149809, 9748480, 9748480, 9748480 ns/op
Iteration   6: n = 188, mean = 5337393 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5152768, 5218304, 5890048, 6034637, 6455869, 6725632, 6725632, 6725632 ns/op
Iteration   7: n = 187, mean = 5354370 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5144576, 5201920, 5857280, 6047334, 8072724, 11763712, 11763712, 11763712 ns/op
Iteration   8: n = 188, mean = 5337959 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5152768, 5218304, 5644288, 5977293, 7103365, 12943360, 12943360, 12943360 ns/op
Iteration   9: n = 189, mean = 5306466 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5160960, 5193728, 5799936, 5988352, 6970573, 8069120, 8069120, 8069120 ns/op
Iteration  10: n = 187, mean = 5348631 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5160960, 5218304, 5827789, 5986714, 10114171, 10272768, 10272768, 10272768 ns/op


Result "serialization_events_4k":
  N = 1873
  mean = 5351685.330 ±(99.9%) 37947.268 ns/op

  Histogram, ns/op:
    [ 5000000.000,  5500000.000) = 1646 
    [ 5500000.000,  6000000.000) = 124 
    [ 6000000.000,  6500000.000) = 66 
    [ 6500000.000,  7000000.000) = 15 
    [ 7000000.000,  7500000.000) = 7 
    [ 7500000.000,  8000000.000) = 1 
    [ 8000000.000,  8500000.000) = 3 
    [ 8500000.000,  9000000.000) = 2 
    [ 9000000.000,  9500000.000) = 3 
    [ 9500000.000, 10000000.000) = 1 
    [10000000.000, 10500000.000) = 2 
    [10500000.000, 11000000.000) = 0 
    [11000000.000, 11500000.000) = 0 
    [11500000.000, 12000000.000) = 1 
    [12000000.000, 12500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 5144576.000 ns/op
     p(50.0000) = 5218304.000 ns/op
     p(90.0000) = 5824512.000 ns/op
     p(95.0000) = 6023577.600 ns/op
     p(99.0000) = 7254179.840 ns/op
     p(99.9000) = 12356255.744 ns/op
     p(99.9900) = 12943360.000 ns/op
     p(99.9990) = 12943360.000 ns/op
     p(99.9999) = 12943360.000 ns/op
    p(100.0000) = 12943360.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_events_64k

# Run progress: 53.61% complete, ETA 00:33:14
# Fork: 1 of 1
# Warmup Iteration   1: n = 7, mean = 153859803 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 116129792, 127795200, 322961408, 322961408, 322961408, 322961408, 322961408, 322961408 ns/op
Iteration   1: n = 9, mean = 118168690 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 114688000, 117047296, 126615552, 126615552, 126615552, 126615552, 126615552, 126615552 ns/op
Iteration   2: n = 9, mean = 117571584 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 115081216, 116523008, 121765888, 121765888, 121765888, 121765888, 121765888, 121765888 ns/op
Iteration   3: n = 9, mean = 117746347 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 115867648, 117047296, 122290176, 122290176, 122290176, 122290176, 122290176, 122290176 ns/op
Iteration   4: n = 9, mean = 118707541 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 115867648, 117178368, 127008768, 127008768, 127008768, 127008768, 127008768, 127008768 ns/op
Iteration   5: n = 9, mean = 119086194 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 116391936, 117833728, 126222336, 126222336, 126222336, 126222336, 126222336, 126222336 ns/op
Iteration   6: n = 9, mean = 118518215 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 116129792, 118751232, 121372672, 121372672, 121372672, 121372672, 121372672, 121372672 ns/op
Iteration   7: n = 9, mean = 119945444 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 115998720, 116785152, 141819904, 141819904, 141819904, 141819904, 141819904, 141819904 ns/op
Iteration   8: n = 9, mean = 120629931 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 115343360, 117047296, 143654912, 143654912, 143654912, 143654912, 143654912, 143654912 ns/op
Iteration   9: n = 9, mean = 117775474 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 115343360, 117440512, 122028032, 122028032, 122028032, 122028032, 122028032, 122028032 ns/op
Iteration  10: n = 9, mean = 118314325 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 116260864, 117047296, 126353408, 126353408, 126353408, 126353408, 126353408, 126353408 ns/op


Result "serialization_events_64k":
  N = 90
  mean = 118646374.400 ±(99.9%) 1607720.095 ns/op

  Histogram, ns/op:
    [110000000.000, 112500000.000) = 0 
    [112500000.000, 115000000.000) = 2 
    [115000000.000, 117500000.000) = 46 
    [117500000.000, 120000000.000) = 24 
    [120000000.000, 122500000.000) = 11 
    [122500000.000, 125000000.000) = 1 
    [125000000.000, 127500000.000) = 4 
    [127500000.000, 130000000.000) = 0 
    [130000000.000, 132500000.000) = 0 
    [132500000.000, 135000000.000) = 0 
    [135000000.000, 137500000.000) = 0 
    [137500000.000, 140000000.000) = 0 
    [140000000.000, 142500000.000) = 1 
    [142500000.000, 145000000.000) = 1 
    [145000000.000, 147500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 114688000.000 ns/op
     p(50.0000) = 117374976.000 ns/op
     p(90.0000) = 122001817.600 ns/op
     p(95.0000) = 126471372.800 ns/op
     p(99.0000) = 143654912.000 ns/op
     p(99.9000) = 143654912.000 ns/op
     p(99.9900) = 143654912.000 ns/op
     p(99.9990) = 143654912.000 ns/op
     p(99.9999) = 143654912.000 ns/op
    p(100.0000) = 143654912.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_events_8k

# Run progress: 53.89% complete, ETA 00:33:03
# Fork: 1 of 1
# Warmup Iteration   1: n = 47, mean = 21253534 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12566528, 14450688, 41287680, 60057190, 94765056, 94765056, 94765056, 94765056 ns/op
Iteration   1: n = 78, mean = 12850727 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12222464, 12591104, 13452902, 14910259, 17137664, 17137664, 17137664, 17137664 ns/op
Iteration   2: n = 80, mean = 12548506 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12255232, 12353536, 13197312, 13398835, 15286272, 15286272, 15286272, 15286272 ns/op
Iteration   3: n = 80, mean = 12559565 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12222464, 12369920, 13072794, 13252198, 16875520, 16875520, 16875520, 16875520 ns/op
Iteration   4: n = 80, mean = 12628173 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12222464, 12369920, 13280870, 13836288, 17301504, 17301504, 17301504, 17301504 ns/op
Iteration   5: n = 79, mean = 12750485 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12238848, 12386304, 13336576, 13991936, 19988480, 19988480, 19988480, 19988480 ns/op
Iteration   6: n = 80, mean = 12627968 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12271616, 12353536, 13153075, 13349683, 18087936, 18087936, 18087936, 18087936 ns/op
Iteration   7: n = 80, mean = 12598067 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12238848, 12353536, 13205504, 13571686, 16138240, 16138240, 16138240, 16138240 ns/op
Iteration   8: n = 79, mean = 12720206 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12304384, 12419072, 13205504, 13418496, 19202048, 19202048, 19202048, 19202048 ns/op
Iteration   9: n = 80, mean = 12647834 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12271616, 12386304, 13202227, 13633126, 14843904, 14843904, 14843904, 14843904 ns/op
Iteration  10: n = 79, mean = 12682046 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12271616, 12402688, 13221888, 13320192, 19759104, 19759104, 19759104, 19759104 ns/op


Result "serialization_events_8k":
  N = 795
  mean = 12660669.021 ±(99.9%) 87026.995 ns/op

  Histogram, ns/op:
    [12000000.000, 12500000.000) = 540 
    [12500000.000, 13000000.000) = 86 
    [13000000.000, 13500000.000) = 131 
    [13500000.000, 14000000.000) = 11 
    [14000000.000, 14500000.000) = 9 
    [14500000.000, 15000000.000) = 6 
    [15000000.000, 15500000.000) = 2 
    [15500000.000, 16000000.000) = 0 
    [16000000.000, 16500000.000) = 3 
    [16500000.000, 17000000.000) = 1 
    [17000000.000, 17500000.000) = 2 
    [17500000.000, 18000000.000) = 0 
    [18000000.000, 18500000.000) = 1 
    [18500000.000, 19000000.000) = 0 
    [19000000.000, 19500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 12222464.000 ns/op
     p(50.0000) = 12386304.000 ns/op
     p(90.0000) = 13212057.600 ns/op
     p(95.0000) = 13421772.800 ns/op
     p(99.0000) = 16214917.120 ns/op
     p(99.9000) = 19988480.000 ns/op
     p(99.9900) = 19988480.000 ns/op
     p(99.9990) = 19988480.000 ns/op
     p(99.9999) = 19988480.000 ns/op
    p(100.0000) = 19988480.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_site_1k

# Run progress: 54.17% complete, ETA 00:32:50
# Fork: 1 of 1
# Warmup Iteration   1: n = 2148, mean = 464781 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 306176, 329216, 574464, 783360, 3224535, 9680503, 11173888, 11173888 ns/op
Iteration   1: n = 3011, mean = 332283 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 307200, 321536, 339456, 354304, 461251, 1199022, 3575808, 3575808 ns/op
Iteration   2: n = 3034, mean = 329320 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 317952, 321536, 331776, 344576, 603034, 1027564, 1527808, 1527808 ns/op
Iteration   3: n = 3043, mean = 328412 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 311808, 320512, 332288, 345088, 602112, 1039573, 1083392, 1083392 ns/op
Iteration   4: n = 3026, mean = 330230 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 311296, 316416, 335360, 365210, 592896, 1058401, 1173504, 1173504 ns/op
Iteration   5: n = 3091, mean = 323260 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 311296, 315904, 326656, 340480, 458568, 1110745, 1265664, 1265664 ns/op
Iteration   6: n = 3068, mean = 325666 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 311808, 316416, 328704, 345600, 556349, 1137840, 1333248, 1333248 ns/op
Iteration   7: n = 3087, mean = 323711 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 311296, 315904, 324096, 339251, 506921, 1233699, 3551232, 3551232 ns/op
Iteration   8: n = 3082, mean = 324205 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 311296, 315904, 323584, 335360, 600238, 1055586, 4399104, 4399104 ns/op
Iteration   9: n = 3066, mean = 325880 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 311808, 316416, 328192, 339456, 573092, 1078884, 1103872, 1103872 ns/op
Iteration  10: n = 3033, mean = 329395 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 312320, 316928, 333824, 353946, 606863, 1279930, 1734656, 1734656 ns/op


Result "serialization_site_1k":
  N = 30541
  mean = 327210.481 ±(99.9%) 1205.147 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 30071 
    [ 500000.000, 1000000.000) = 404 
    [1000000.000, 1500000.000) = 59 
    [1500000.000, 2000000.000) = 4 
    [2000000.000, 2500000.000) = 0 
    [2500000.000, 3000000.000) = 0 
    [3000000.000, 3500000.000) = 0 
    [3500000.000, 4000000.000) = 2 
    [4000000.000, 4500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 307200.000 ns/op
     p(50.0000) = 317440.000 ns/op
     p(90.0000) = 331776.000 ns/op
     p(95.0000) = 344576.000 ns/op
     p(99.0000) = 583680.000 ns/op
     p(99.9000) = 1084329.984 ns/op
     p(99.9900) = 3452773.581 ns/op
     p(99.9990) = 4399104.000 ns/op
     p(99.9999) = 4399104.000 ns/op
    p(100.0000) = 4399104.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_site_2k

# Run progress: 54.44% complete, ETA 00:32:38
# Fork: 1 of 1
# Warmup Iteration   1: n = 968, mean = 1031437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 572416, 610304, 1891328, 3229901, 5516165, 16809984, 16809984, 16809984 ns/op
Iteration   1: n = 1614, mean = 619210 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 567296, 596992, 668672, 725504, 888422, 1914020, 2301952, 2301952 ns/op
Iteration   2: n = 1637, mean = 611228 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 589824, 596992, 620544, 640102, 1081467, 1463042, 1525760, 1525760 ns/op
Iteration   3: n = 1649, mean = 606220 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 583680, 593920, 615424, 636416, 1061376, 1497395, 1562624, 1562624 ns/op
Iteration   4: n = 1660, mean = 601886 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 583680, 591872, 611328, 621568, 764170, 2090574, 2756608, 2756608 ns/op
Iteration   5: n = 1645, mean = 607719 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 582656, 589824, 610304, 625664, 1154294, 3474997, 5914624, 5914624 ns/op
Iteration   6: n = 1654, mean = 604450 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 582656, 588800, 606208, 619520, 1171456, 1965496, 2162688, 2162688 ns/op
Iteration   7: n = 1650, mean = 605738 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 583680, 589824, 611328, 631808, 1240924, 1402124, 1427456, 1427456 ns/op
Iteration   8: n = 1649, mean = 606122 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 582656, 589824, 613376, 632320, 1199104, 1571328, 1724416, 1724416 ns/op
Iteration   9: n = 1644, mean = 607921 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 582656, 590848, 611328, 624384, 1193267, 1822894, 2519040, 2519040 ns/op
Iteration  10: n = 1648, mean = 606376 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 582656, 590848, 611328, 626227, 1232220, 1502487, 1550336, 1550336 ns/op


Result "serialization_site_2k":
  N = 16450
  mean = 607654.797 ±(99.9%) 2388.038 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 16241 
    [1000000.000, 1500000.000) = 196 
    [1500000.000, 2000000.000) = 7 
    [2000000.000, 2500000.000) = 3 
    [2500000.000, 3000000.000) = 2 
    [3000000.000, 3500000.000) = 0 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 567296.000 ns/op
     p(50.0000) = 591872.000 ns/op
     p(90.0000) = 615424.000 ns/op
     p(95.0000) = 635904.000 ns/op
     p(99.0000) = 1122304.000 ns/op
     p(99.9000) = 1477732.352 ns/op
     p(99.9900) = 3877387.878 ns/op
     p(99.9990) = 5914624.000 ns/op
     p(99.9999) = 5914624.000 ns/op
    p(100.0000) = 5914624.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_site_4k

# Run progress: 54.72% complete, ETA 00:32:26
# Fork: 1 of 1
# Warmup Iteration   1: n = 388, mean = 2573402 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1087488, 1228800, 5886771, 8078131, 16492626, 27754496, 27754496, 27754496 ns/op
Iteration   1: n = 869, mean = 1159156 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1083392, 1116160, 1226752, 1276928, 1694515, 4915200, 4915200, 4915200 ns/op
Iteration   2: n = 878, mean = 1138340 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1089536, 1103872, 1140941, 1165414, 2188984, 5267456, 5267456, 5267456 ns/op
Iteration   3: n = 899, mean = 1112103 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1067008, 1093632, 1118208, 1175552, 2023424, 2170880, 2170880, 2170880 ns/op
Iteration   4: n = 913, mean = 1095404 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1067008, 1077248, 1103872, 1137254, 1592279, 2998272, 2998272, 2998272 ns/op
Iteration   5: n = 906, mean = 1103680 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1064960, 1079296, 1105920, 1136640, 2000896, 3756032, 3756032, 3756032 ns/op
Iteration   6: n = 906, mean = 1102798 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1069056, 1081344, 1105920, 1135923, 1908675, 2895872, 2895872, 2895872 ns/op
Iteration   7: n = 906, mean = 1103325 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1067008, 1079296, 1112064, 1183744, 1819955, 3031040, 3031040, 3031040 ns/op
Iteration   8: n = 899, mean = 1112490 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1064960, 1079296, 1114112, 1187840, 2019328, 2150400, 2150400, 2150400 ns/op
Iteration   9: n = 902, mean = 1108079 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1067008, 1079296, 1110016, 1190707, 1863434, 3649536, 3649536, 3649536 ns/op
Iteration  10: n = 902, mean = 1108057 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1069056, 1083392, 1114112, 1132544, 1781760, 3989504, 3989504, 3989504 ns/op


Result "serialization_site_4k":
  N = 8980
  mean = 1114077.791 ±(99.9%) 5365.415 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 8824 
    [1500000.000, 2000000.000) = 79 
    [2000000.000, 2500000.000) = 63 
    [2500000.000, 3000000.000) = 3 
    [3000000.000, 3500000.000) = 5 
    [3500000.000, 4000000.000) = 4 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 1 
    [5000000.000, 5500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 1064960.000 ns/op
     p(50.0000) = 1083392.000 ns/op
     p(90.0000) = 1130496.000 ns/op
     p(95.0000) = 1210368.000 ns/op
     p(99.0000) = 1912832.000 ns/op
     p(99.9000) = 3174350.848 ns/op
     p(99.9900) = 5267456.000 ns/op
     p(99.9990) = 5267456.000 ns/op
     p(99.9999) = 5267456.000 ns/op
    p(100.0000) = 5267456.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_site_64k

# Run progress: 55.00% complete, ETA 00:32:14
# Fork: 1 of 1
# Warmup Iteration   1: n = 30, mean = 33625429 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19365888, 20725760, 69815501, 133509939, 187432960, 187432960, 187432960, 187432960 ns/op
Iteration   1: n = 50, mean = 20193608 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 18382848, 19415040, 21895578, 26212762, 36831232, 36831232, 36831232, 36831232 ns/op
Iteration   2: n = 51, mean = 19665940 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 18186240, 18284544, 21161574, 33069466, 38797312, 38797312, 38797312, 38797312 ns/op
Iteration   3: n = 55, mean = 18301822 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 17989632, 18219008, 18756403, 18913690, 21626880, 21626880, 21626880, 21626880 ns/op
Iteration   4: n = 55, mean = 18298247 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 17956864, 18022400, 18586010, 19103744, 27099136, 27099136, 27099136, 27099136 ns/op
Iteration   5: n = 55, mean = 18195177 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 17956864, 18055168, 18612224, 18861261, 20938752, 20938752, 20938752, 20938752 ns/op
Iteration   6: n = 55, mean = 18183261 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 17956864, 18055168, 18546688, 18808832, 20709376, 20709376, 20709376, 20709376 ns/op
Iteration   7: n = 55, mean = 18288119 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 17956864, 18022400, 18736742, 19057869, 26279936, 26279936, 26279936, 26279936 ns/op
Iteration   8: n = 55, mean = 18246414 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 17989632, 18055168, 18795725, 19175834, 22020096, 22020096, 22020096, 22020096 ns/op
Iteration   9: n = 55, mean = 18423361 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 17989632, 18055168, 19247923, 20224410, 23134208, 23134208, 23134208, 23134208 ns/op
Iteration  10: n = 52, mean = 19438986 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 18022400, 18087936, 20801126, 32376422, 34078720, 34078720, 34078720, 34078720 ns/op


Result "serialization_site_64k":
  N = 538
  mean = 18698833.844 ±(99.9%) 307695.760 ns/op

  Histogram, ns/op:
    [10000000.000, 12500000.000) = 0 
    [12500000.000, 15000000.000) = 0 
    [15000000.000, 17500000.000) = 0 
    [17500000.000, 20000000.000) = 499 
    [20000000.000, 22500000.000) = 25 
    [22500000.000, 25000000.000) = 2 
    [25000000.000, 27500000.000) = 4 
    [27500000.000, 30000000.000) = 1 
    [30000000.000, 32500000.000) = 3 
    [32500000.000, 35000000.000) = 2 
    [35000000.000, 37500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 17956864.000 ns/op
     p(50.0000) = 18087936.000 ns/op
     p(90.0000) = 19529728.000 ns/op
     p(95.0000) = 20842086.400 ns/op
     p(99.0000) = 32401981.440 ns/op
     p(99.9000) = 38797312.000 ns/op
     p(99.9900) = 38797312.000 ns/op
     p(99.9990) = 38797312.000 ns/op
     p(99.9999) = 38797312.000 ns/op
    p(100.0000) = 38797312.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.BooPickleBenchmark.serialization_site_8k

# Run progress: 55.28% complete, ETA 00:32:02
# Fork: 1 of 1
# Warmup Iteration   1: n = 186, mean = 5375295 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2211840, 2611200, 12243763, 14503936, 25961103, 48168960, 48168960, 48168960 ns/op
Iteration   1: n = 450, mean = 2221579 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2117632, 2146304, 2351104, 2401690, 3990405, 4194304, 4194304, 4194304 ns/op
Iteration   2: n = 452, mean = 2213317 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2134016, 2158592, 2359296, 2389402, 3090760, 4554752, 4554752, 4554752 ns/op
Iteration   3: n = 464, mean = 2157038 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2062336, 2121728, 2179072, 2265088, 3754803, 4046848, 4046848, 4046848 ns/op
Iteration   4: n = 473, mean = 2116411 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2062336, 2078720, 2113536, 2182758, 3149496, 4030464, 4030464, 4030464 ns/op
Iteration   5: n = 474, mean = 2112551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2062336, 2080768, 2134016, 2265088, 2792448, 3645440, 3645440, 3645440 ns/op
Iteration   6: n = 466, mean = 2146322 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2060288, 2080768, 2138112, 2423808, 3806167, 4341760, 4341760, 4341760 ns/op
Iteration   7: n = 470, mean = 2129680 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2062336, 2082816, 2125824, 2314854, 3042263, 5660672, 5660672, 5660672 ns/op
Iteration   8: n = 469, mean = 2131387 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2058240, 2076672, 2150400, 2373632, 3069133, 7307264, 7307264, 7307264 ns/op
Iteration   9: n = 470, mean = 2128129 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2062336, 2080768, 2146304, 2333901, 2888868, 5873664, 5873664, 5873664 ns/op
Iteration  10: n = 467, mean = 2143116 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2058240, 2082816, 2146304, 2464973, 3200614, 5488640, 5488640, 5488640 ns/op


Result "serialization_site_8k":
  N = 4655
  mean = 2149348.943 ±(99.9%) 11377.303 ns/op

  Histogram, ns/op:
    [2000000.000, 2500000.000) = 4504 
    [2500000.000, 3000000.000) = 87 
    [3000000.000, 3500000.000) = 27 
    [3500000.000, 4000000.000) = 17 
    [4000000.000, 4500000.000) = 15 
    [4500000.000, 5000000.000) = 1 
    [5000000.000, 5500000.000) = 1 
    [5500000.000, 6000000.000) = 2 
    [6000000.000, 6500000.000) = 0 
    [6500000.000, 7000000.000) = 0 
    [7000000.000, 7500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 2058240.000 ns/op
     p(50.0000) = 2091008.000 ns/op
     p(90.0000) = 2199552.000 ns/op
     p(95.0000) = 2364211.200 ns/op
     p(99.0000) = 3188490.240 ns/op
     p(99.9000) = 4876009.472 ns/op
     p(99.9900) = 7307264.000 ns/op
     p(99.9990) = 7307264.000 ns/op
     p(99.9999) = 7307264.000 ns/op
    p(100.0000) = 7307264.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_events_1k

# Run progress: 55.56% complete, ETA 00:31:49
# Fork: 1 of 1
# Warmup Iteration   1: n = 228, mean = 4387427 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3559424, 3780608, 6762496, 7041434, 10178396, 37224448, 37224448, 37224448 ns/op
Iteration   1: n = 262, mean = 3822428 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3579904, 3813376, 3898163, 3911680, 4297523, 6348800, 6348800, 6348800 ns/op
Iteration   2: n = 269, mean = 3732476 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3514368, 3649536, 3911680, 3936256, 6375834, 7651328, 7651328, 7651328 ns/op
Iteration   3: n = 256, mean = 3904496 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3543040, 3821568, 3941581, 4072653, 6699991, 7208960, 7208960, 7208960 ns/op
Iteration   4: n = 263, mean = 3810183 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3514368, 3715072, 3899392, 3978854, 6646661, 6774784, 6774784, 6774784 ns/op
Iteration   5: n = 267, mean = 3745600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3530752, 3723264, 3858432, 3895296, 4592435, 5054464, 5054464, 5054464 ns/op
Iteration   6: n = 260, mean = 3856778 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3604480, 3825664, 3882598, 3947520, 6395658, 7430144, 7430144, 7430144 ns/op
Iteration   7: n = 262, mean = 3817081 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3620864, 3792896, 3850240, 3921510, 5741445, 7151616, 7151616, 7151616 ns/op
Iteration   8: n = 270, mean = 3706577 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3543040, 3649536, 3792896, 3834880, 5177836, 7200768, 7200768, 7200768 ns/op
Iteration   9: n = 269, mean = 3716945 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3489792, 3678208, 3784704, 3815424, 5971149, 7200768, 7200768, 7200768 ns/op
Iteration  10: n = 274, mean = 3651479 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3325952, 3645440, 3784704, 3842048, 5593088, 7315456, 7315456, 7315456 ns/op


Result "deserialization_events_1k":
  N = 2652
  mean = 3774959.783 ±(99.9%) 22081.814 ns/op

  Histogram, ns/op:
    [3000000.000, 3500000.000) = 75 
    [3500000.000, 4000000.000) = 2491 
    [4000000.000, 4500000.000) = 42 
    [4500000.000, 5000000.000) = 9 
    [5000000.000, 5500000.000) = 5 
    [5500000.000, 6000000.000) = 4 
    [6000000.000, 6500000.000) = 4 
    [6500000.000, 7000000.000) = 14 
    [7000000.000, 7500000.000) = 7 

  Percentiles, ns/op:
      p(0.0000) = 3325952.000 ns/op
     p(50.0000) = 3735552.000 ns/op
     p(90.0000) = 3881779.200 ns/op
     p(95.0000) = 3923968.000 ns/op
     p(99.0000) = 6069616.640 ns/op
     p(99.9000) = 7355252.736 ns/op
     p(99.9900) = 7651328.000 ns/op
     p(99.9990) = 7651328.000 ns/op
     p(99.9999) = 7651328.000 ns/op
    p(100.0000) = 7651328.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_events_2k

# Run progress: 55.83% complete, ETA 00:31:37
# Fork: 1 of 1
# Warmup Iteration   1: n = 139, mean = 7217093 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6037504, 6307840, 9666560, 12730368, 35933389, 50528256, 50528256, 50528256 ns/op
Iteration   1: n = 155, mean = 6467452 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6152192, 6365184, 6466765, 6555238, 12127437, 12402688, 12402688, 12402688 ns/op
Iteration   2: n = 156, mean = 6424366 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6160384, 6348800, 6662554, 7026688, 9295299, 9650176, 9650176, 9650176 ns/op
Iteration   3: n = 156, mean = 6411028 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6160384, 6303744, 6523290, 6669517, 9466184, 9830400, 9830400, 9830400 ns/op
Iteration   4: n = 158, mean = 6339830 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6193152, 6266880, 6340608, 6498714, 10522788, 11354112, 11354112, 11354112 ns/op
Iteration   5: n = 155, mean = 6463171 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6119424, 6381568, 6565069, 6627328, 10285875, 10698752, 10698752, 10698752 ns/op
Iteration   6: n = 159, mean = 6312168 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6086656, 6201344, 6356992, 6512640, 10482483, 12025856, 12025856, 12025856 ns/op
Iteration   7: n = 160, mean = 6274304 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5971968, 6111232, 6452838, 6707610, 10566369, 11845632, 11845632, 11845632 ns/op
Iteration   8: n = 158, mean = 6341334 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6152192, 6258688, 6415974, 6825165, 9961472, 10928128, 10928128, 10928128 ns/op
Iteration   9: n = 159, mean = 6311756 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6135808, 6258688, 6389760, 6520832, 7856128, 8667136, 8667136, 8667136 ns/op
Iteration  10: n = 155, mean = 6457833 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6135808, 6504448, 6569984, 6606029, 7531725, 7921664, 7921664, 7921664 ns/op


Result "deserialization_events_2k":
  N = 1571
  mean = 6379534.340 ±(99.9%) 42317.153 ns/op

  Histogram, ns/op:
    [ 5000000.000,  5500000.000) = 0 
    [ 5500000.000,  6000000.000) = 10 
    [ 6000000.000,  6500000.000) = 1343 
    [ 6500000.000,  7000000.000) = 177 
    [ 7000000.000,  7500000.000) = 15 
    [ 7500000.000,  8000000.000) = 1 
    [ 8000000.000,  8500000.000) = 1 
    [ 8500000.000,  9000000.000) = 3 
    [ 9000000.000,  9500000.000) = 7 
    [ 9500000.000, 10000000.000) = 6 
    [10000000.000, 10500000.000) = 1 
    [10500000.000, 11000000.000) = 2 
    [11000000.000, 11500000.000) = 1 
    [11500000.000, 12000000.000) = 2 
    [12000000.000, 12500000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 5971968.000 ns/op
     p(50.0000) = 6291456.000 ns/op
     p(90.0000) = 6529024.000 ns/op
     p(95.0000) = 6643712.000 ns/op
     p(99.0000) = 9335603.200 ns/op
     p(99.9000) = 12187140.096 ns/op
     p(99.9900) = 12402688.000 ns/op
     p(99.9990) = 12402688.000 ns/op
     p(99.9999) = 12402688.000 ns/op
    p(100.0000) = 12402688.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_events_4k

# Run progress: 56.11% complete, ETA 00:31:25
# Fork: 1 of 1
# Warmup Iteration   1: n = 64, mean = 15643904 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12763136, 13524992, 22380544, 26083328, 66781184, 66781184, 66781184, 66781184 ns/op
Iteration   1: n = 76, mean = 13282466 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12795904, 13082624, 13439795, 13945242, 18841600, 18841600, 18841600, 18841600 ns/op
Iteration   2: n = 75, mean = 13389879 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12910592, 13402112, 13588890, 13814989, 17530880, 17530880, 17530880, 17530880 ns/op
Iteration   3: n = 76, mean = 13264788 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12517376, 13090816, 13575782, 13975552, 16973824, 16973824, 16973824, 16973824 ns/op
Iteration   4: n = 75, mean = 13345314 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 13090816, 13238272, 13474202, 13873971, 16187392, 16187392, 16187392, 16187392 ns/op
Iteration   5: n = 75, mean = 13457381 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 13090816, 13303808, 13562675, 14385152, 17825792, 17825792, 17825792, 17825792 ns/op
Iteration   6: n = 74, mean = 13582779 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12959744, 13606912, 13950976, 14626816, 16482304, 16482304, 16482304, 16482304 ns/op
Iteration   7: n = 76, mean = 13320192 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12926976, 13156352, 13407027, 13759283, 20283392, 20283392, 20283392, 20283392 ns/op
Iteration   8: n = 75, mean = 13496047 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12910592, 13369344, 13893632, 14476902, 17989632, 17989632, 17989632, 17989632 ns/op
Iteration   9: n = 72, mean = 13933909 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 13205504, 13811712, 14162330, 16080896, 19759104, 19759104, 19759104, 19759104 ns/op
Iteration  10: n = 74, mean = 13530084 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 13205504, 13336576, 13680640, 14274560, 22446080, 22446080, 22446080, 22446080 ns/op


Result "deserialization_events_4k":
  N = 748
  mean = 13457440.856 ±(99.9%) 98951.198 ns/op

  Histogram, ns/op:
    [12000000.000, 13000000.000) = 65 
    [13000000.000, 14000000.000) = 640 
    [14000000.000, 15000000.000) = 20 
    [15000000.000, 16000000.000) = 5 
    [16000000.000, 17000000.000) = 9 
    [17000000.000, 18000000.000) = 3 
    [18000000.000, 19000000.000) = 2 
    [19000000.000, 20000000.000) = 2 
    [20000000.000, 21000000.000) = 1 
    [21000000.000, 22000000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 12517376.000 ns/op
     p(50.0000) = 13303808.000 ns/op
     p(90.0000) = 13844480.000 ns/op
     p(95.0000) = 14115635.200 ns/op
     p(99.0000) = 17909350.400 ns/op
     p(99.9000) = 22446080.000 ns/op
     p(99.9900) = 22446080.000 ns/op
     p(99.9990) = 22446080.000 ns/op
     p(99.9999) = 22446080.000 ns/op
    p(100.0000) = 22446080.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_events_64k

# Run progress: 56.39% complete, ETA 00:31:13
# Fork: 1 of 1
# Warmup Iteration   1: n = 3, mean = 335544320 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 287834112, 295174144, 423624704, 423624704, 423624704, 423624704, 423624704, 423624704 ns/op
Iteration   1: n = 4, mean = 282460160 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 275251200, 283901952, 286785536, 286785536, 286785536, 286785536, 286785536, 286785536 ns/op
Iteration   2: n = 4, mean = 278921216 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 275775488, 279445504, 281018368, 281018368, 281018368, 281018368, 281018368, 281018368 ns/op
Iteration   3: n = 4, mean = 270729216 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 258473984, 268828672, 286785536, 286785536, 286785536, 286785536, 286785536, 286785536 ns/op
Iteration   4: n = 4, mean = 266665984 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 264241152, 266469376, 269484032, 269484032, 269484032, 269484032, 269484032, 269484032 ns/op
Iteration   5: n = 4, mean = 264503296 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 256638976, 263061504, 275251200, 275251200, 275251200, 275251200, 275251200, 275251200 ns/op
Iteration   6: n = 4, mean = 256442368 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 255328256, 255983616, 258473984, 258473984, 258473984, 258473984, 258473984, 258473984 ns/op
Iteration   7: n = 4, mean = 266469376 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 256114688, 268828672, 272105472, 272105472, 272105472, 272105472, 272105472, 272105472 ns/op
Iteration   8: n = 4, mean = 266534912 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 255590400, 267124736, 276299776, 276299776, 276299776, 276299776, 276299776, 276299776 ns/op
Iteration   9: n = 4, mean = 267976704 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 256114688, 268959744, 277872640, 277872640, 277872640, 277872640, 277872640, 277872640 ns/op
Iteration  10: n = 4, mean = 256114688 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 253493248, 254803968, 261357568, 261357568, 261357568, 261357568, 261357568, 261357568 ns/op


Result "deserialization_events_64k":
  N = 40
  mean = 267681792.000 ±(99.9%) 5696608.035 ns/op

  Histogram, ns/op:
    [250000000.000, 252500000.000) = 0 
    [252500000.000, 255000000.000) = 2 
    [255000000.000, 257500000.000) = 9 
    [257500000.000, 260000000.000) = 2 
    [260000000.000, 262500000.000) = 1 
    [262500000.000, 265000000.000) = 2 
    [265000000.000, 267500000.000) = 4 
    [267500000.000, 270000000.000) = 4 
    [270000000.000, 272500000.000) = 4 
    [272500000.000, 275000000.000) = 0 
    [275000000.000, 277500000.000) = 4 
    [277500000.000, 280000000.000) = 3 
    [280000000.000, 282500000.000) = 1 
    [282500000.000, 285000000.000) = 1 
    [285000000.000, 287500000.000) = 3 

  Percentiles, ns/op:
      p(0.0000) = 253493248.000 ns/op
     p(50.0000) = 267517952.000 ns/op
     p(90.0000) = 282433945.600 ns/op
     p(95.0000) = 286706892.800 ns/op
     p(99.0000) = 286785536.000 ns/op
     p(99.9000) = 286785536.000 ns/op
     p(99.9900) = 286785536.000 ns/op
     p(99.9990) = 286785536.000 ns/op
     p(99.9999) = 286785536.000 ns/op
    p(100.0000) = 286785536.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_events_8k

# Run progress: 56.67% complete, ETA 00:31:01
# Fork: 1 of 1
# Warmup Iteration   1: n = 35, mean = 28672000 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24281088, 24543232, 36044800, 59847475, 107085824, 107085824, 107085824, 107085824 ns/op
Iteration   1: n = 41, mean = 24853329 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24150016, 24412160, 25939149, 28082176, 31227904, 31227904, 31227904, 31227904 ns/op
Iteration   2: n = 41, mean = 24549626 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24150016, 24215552, 24536678, 27108966, 32636928, 32636928, 32636928, 32636928 ns/op
Iteration   3: n = 41, mean = 24480094 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24248320, 24313856, 24811930, 25375539, 26902528, 26902528, 26902528, 26902528 ns/op
Iteration   4: n = 41, mean = 24675902 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24215552, 24281088, 25041306, 27669299, 32604160, 32604160, 32604160, 32604160 ns/op
Iteration   5: n = 41, mean = 24959625 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24182784, 24608768, 25349325, 27184333, 33816576, 33816576, 33816576, 33816576 ns/op
Iteration   6: n = 41, mean = 24588788 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24281088, 24346624, 25198592, 26394624, 27525120, 27525120, 27525120, 27525120 ns/op
Iteration   7: n = 41, mean = 24732647 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24248320, 24313856, 25224806, 28789965, 30801920, 30801920, 30801920, 30801920 ns/op
Iteration   8: n = 41, mean = 24728651 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24248320, 24313856, 25290342, 25480397, 35454976, 35454976, 35454976, 35454976 ns/op
Iteration   9: n = 41, mean = 24633544 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24248320, 24444928, 25211699, 25926042, 27820032, 27820032, 27820032, 27820032 ns/op
Iteration  10: n = 41, mean = 24589587 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24215552, 24313856, 25015091, 25332941, 32768000, 32768000, 32768000, 32768000 ns/op


Result "deserialization_events_8k":
  N = 410
  mean = 24679179.239 ±(99.9%) 203008.227 ns/op

  Histogram, ns/op:
    [20000000.000, 21250000.000) = 0 
    [21250000.000, 22500000.000) = 0 
    [22500000.000, 23750000.000) = 0 
    [23750000.000, 25000000.000) = 357 
    [25000000.000, 26250000.000) = 35 
    [26250000.000, 27500000.000) = 4 
    [27500000.000, 28750000.000) = 6 
    [28750000.000, 30000000.000) = 1 
    [30000000.000, 31250000.000) = 2 
    [31250000.000, 32500000.000) = 0 
    [32500000.000, 33750000.000) = 3 
    [33750000.000, 35000000.000) = 1 
    [35000000.000, 36250000.000) = 1 
    [36250000.000, 37500000.000) = 0 
    [37500000.000, 38750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 24150016.000 ns/op
     p(50.0000) = 24346624.000 ns/op
     p(90.0000) = 25067520.000 ns/op
     p(95.0000) = 25930956.800 ns/op
     p(99.0000) = 32633323.520 ns/op
     p(99.9000) = 35454976.000 ns/op
     p(99.9900) = 35454976.000 ns/op
     p(99.9990) = 35454976.000 ns/op
     p(99.9999) = 35454976.000 ns/op
    p(100.0000) = 35454976.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_site_1k

# Run progress: 56.94% complete, ETA 00:30:49
# Fork: 1 of 1
# Warmup Iteration   1: n = 1263, mean = 790731 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 563200, 635904, 1304986, 1735066, 3142451, 23577100, 28278784, 28278784 ns/op
Iteration   1: n = 1684, mean = 593423 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 561152, 566272, 590848, 704512, 1104794, 5003510, 6193152, 6193152 ns/op
Iteration   2: n = 1733, mean = 576735 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 561152, 564224, 578150, 586752, 1050460, 1844773, 1916928, 1916928 ns/op
Iteration   3: n = 1745, mean = 572560 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 549888, 564224, 575898, 585728, 940462, 1731310, 1775616, 1775616 ns/op
Iteration   4: n = 1738, mean = 574908 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 562176, 564224, 581734, 591872, 998881, 1585447, 1742848, 1742848 ns/op
Iteration   5: n = 1732, mean = 576949 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 562176, 564224, 584704, 593920, 905994, 2117519, 3371008, 3371008 ns/op
Iteration   6: n = 1704, mean = 586580 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 562176, 565248, 585728, 601856, 1093632, 2201027, 3379200, 3379200 ns/op
Iteration   7: n = 1740, mean = 574345 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 562176, 564224, 581632, 588800, 778168, 2273552, 4530176, 4530176 ns/op
Iteration   8: n = 1720, mean = 580995 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 562176, 564224, 590848, 603136, 1023416, 2353805, 3477504, 3477504 ns/op
Iteration   9: n = 1744, mean = 572969 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 562176, 564224, 584704, 590848, 641587, 1701427, 1861632, 1861632 ns/op
Iteration  10: n = 1744, mean = 573072 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 562176, 564224, 582656, 589824, 722534, 1722573, 2363392, 2363392 ns/op


Result "deserialization_site_1k":
  N = 17284
  mean = 578181.362 ±(99.9%) 2672.549 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 17102 
    [1000000.000, 1500000.000) = 156 
    [1500000.000, 2000000.000) = 17 
    [2000000.000, 2500000.000) = 1 
    [2500000.000, 3000000.000) = 0 
    [3000000.000, 3500000.000) = 3 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 3 
    [4500000.000, 5000000.000) = 1 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 549888.000 ns/op
     p(50.0000) = 564224.000 ns/op
     p(90.0000) = 583680.000 ns/op
     p(95.0000) = 593920.000 ns/op
     p(99.0000) = 1011456.000 ns/op
     p(99.9000) = 1701027.840 ns/op
     p(99.9900) = 4981673.984 ns/op
     p(99.9990) = 6193152.000 ns/op
     p(99.9999) = 6193152.000 ns/op
    p(100.0000) = 6193152.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_site_2k

# Run progress: 57.22% complete, ETA 00:30:37
# Fork: 1 of 1
# Warmup Iteration   1: n = 848, mean = 1178042 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 852992, 930816, 1089536, 2375270, 5095916, 41549824, 41549824, 41549824 ns/op
Iteration   1: n = 1133, mean = 886416 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 845824, 851968, 896614, 994304, 1143276, 6608863, 6807552, 6807552 ns/op
Iteration   2: n = 1132, mean = 883303 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 844800, 850944, 988160, 995328, 1264312, 4442808, 4448256, 4448256 ns/op
Iteration   3: n = 1160, mean = 862173 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 848896, 852992, 873472, 880640, 1013125, 2059344, 2158592, 2158592 ns/op
Iteration   4: n = 1149, mean = 870009 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 847872, 854016, 878592, 892416, 1539072, 2159616, 2236416, 2236416 ns/op
Iteration   5: n = 1154, mean = 866697 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 848896, 852992, 868352, 889856, 1301914, 1882327, 1916928, 1916928 ns/op
Iteration   6: n = 1151, mean = 868466 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 848896, 852992, 870195, 888832, 1592525, 1788494, 1798144, 1798144 ns/op
Iteration   7: n = 1145, mean = 872863 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 847872, 851968, 878592, 899482, 1584415, 2307777, 2363392, 2363392 ns/op
Iteration   8: n = 1163, mean = 859766 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 847872, 850944, 864870, 878592, 981402, 1956528, 1998848, 1998848 ns/op
Iteration   9: n = 1158, mean = 863151 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 848896, 851968, 877670, 893952, 1047777, 1929343, 1988608, 1988608 ns/op
Iteration  10: n = 1153, mean = 867059 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 848896, 851968, 871424, 881664, 1543373, 2591080, 2703360, 2703360 ns/op


Result "deserialization_site_2k":
  N = 11498
  mean = 869918.636 ±(99.9%) 3939.784 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 11271 
    [1000000.000, 1500000.000) = 137 
    [1500000.000, 2000000.000) = 80 
    [2000000.000, 2500000.000) = 3 
    [2500000.000, 3000000.000) = 1 
    [3000000.000, 3500000.000) = 0 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 2 
    [4500000.000, 5000000.000) = 1 
    [5000000.000, 5500000.000) = 2 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 844800.000 ns/op
     p(50.0000) = 852992.000 ns/op
     p(90.0000) = 877568.000 ns/op
     p(95.0000) = 901120.000 ns/op
     p(99.0000) = 1253396.480 ns/op
     p(99.9000) = 1993738.240 ns/op
     p(99.9900) = 6585287.475 ns/op
     p(99.9990) = 6807552.000 ns/op
     p(99.9999) = 6807552.000 ns/op
    p(100.0000) = 6807552.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_site_4k

# Run progress: 57.50% complete, ETA 00:30:25
# Fork: 1 of 1
# Warmup Iteration   1: n = 503, mean = 1986996 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1433600, 1458176, 3332506, 4618650, 8129085, 40763392, 40763392, 40763392 ns/op
Iteration   1: n = 673, mean = 1486781 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1392640, 1439744, 1570816, 1587200, 2627502, 5521408, 5521408, 5521408 ns/op
Iteration   2: n = 669, mean = 1495392 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1419264, 1437696, 1570816, 1619968, 2884813, 4014080, 4014080, 4014080 ns/op
Iteration   3: n = 683, mean = 1463861 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1421312, 1437696, 1504461, 1576960, 1788887, 5169152, 5169152, 5169152 ns/op
Iteration   4: n = 692, mean = 1445699 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1419264, 1427456, 1470464, 1478656, 1670390, 2887680, 2887680, 2887680 ns/op
Iteration   5: n = 691, mean = 1448143 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1417216, 1425408, 1474560, 1487667, 2113864, 2842624, 2842624, 2842624 ns/op
Iteration   6: n = 689, mean = 1451851 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1421312, 1435648, 1458176, 1480704, 2088346, 2805760, 2805760, 2805760 ns/op
Iteration   7: n = 691, mean = 1446416 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1421312, 1435648, 1460224, 1486848, 1668055, 2580480, 2580480, 2580480 ns/op
Iteration   8: n = 688, mean = 1452580 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1417216, 1429504, 1454080, 1466368, 1812419, 5906432, 5906432, 5906432 ns/op
Iteration   9: n = 688, mean = 1452773 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1421312, 1431552, 1456333, 1479782, 2244977, 3055616, 3055616, 3055616 ns/op
Iteration  10: n = 685, mean = 1460335 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1419264, 1433600, 1468416, 1486848, 2429174, 2834432, 2834432, 2834432 ns/op


Result "deserialization_site_4k":
  N = 6849
  mean = 1460204.265 ±(99.9%) 6522.771 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 6413 
    [1500000.000, 2000000.000) = 355 
    [2000000.000, 2500000.000) = 30 
    [2500000.000, 3000000.000) = 41 
    [3000000.000, 3500000.000) = 4 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 1 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 1392640.000 ns/op
     p(50.0000) = 1433600.000 ns/op
     p(90.0000) = 1474560.000 ns/op
     p(95.0000) = 1551360.000 ns/op
     p(99.0000) = 2191360.000 ns/op
     p(99.9000) = 3472998.400 ns/op
     p(99.9900) = 5906432.000 ns/op
     p(99.9990) = 5906432.000 ns/op
     p(99.9999) = 5906432.000 ns/op
    p(100.0000) = 5906432.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_site_64k

# Run progress: 57.78% complete, ETA 00:30:13
# Fork: 1 of 1
# Warmup Iteration   1: n = 45, mean = 22269133 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 17072128, 17498112, 32938394, 54198272, 106430464, 106430464, 106430464, 106430464 ns/op
Iteration   1: n = 56, mean = 18115438 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16908288, 17432576, 20001587, 21680947, 35782656, 35782656, 35782656, 35782656 ns/op
Iteration   2: n = 58, mean = 17434271 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16908288, 16990208, 18779341, 20712653, 24739840, 24739840, 24739840, 24739840 ns/op
Iteration   3: n = 59, mean = 17167100 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16908288, 16973824, 17268736, 18415616, 20971520, 20971520, 20971520, 20971520 ns/op
Iteration   4: n = 59, mean = 17104896 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16908288, 16973824, 17465344, 18087936, 19005440, 19005440, 19005440, 19005440 ns/op
Iteration   5: n = 59, mean = 17202645 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16908288, 16973824, 17563648, 18382848, 22904832, 22904832, 22904832, 22904832 ns/op
Iteration   6: n = 59, mean = 17124890 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16908288, 16973824, 17235968, 17956864, 21430272, 21430272, 21430272, 21430272 ns/op
Iteration   7: n = 59, mean = 17165433 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16875520, 16973824, 17629184, 19005440, 20512768, 20512768, 20512768, 20512768 ns/op
Iteration   8: n = 59, mean = 17215974 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16908288, 16973824, 17432576, 18055168, 26738688, 26738688, 26738688, 26738688 ns/op
Iteration   9: n = 59, mean = 17218751 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16908288, 16973824, 17727488, 18186240, 22380544, 22380544, 22380544, 22380544 ns/op
Iteration  10: n = 58, mean = 17289640 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16908288, 17006592, 17773363, 18895667, 21200896, 21200896, 21200896, 21200896 ns/op


Result "deserialization_site_64k":
  N = 585
  mean = 17299543.521 ±(99.9%) 163231.321 ns/op

  Histogram, ns/op:
    [10000000.000, 12500000.000) = 0 
    [12500000.000, 15000000.000) = 0 
    [15000000.000, 17500000.000) = 500 
    [17500000.000, 20000000.000) = 68 
    [20000000.000, 22500000.000) = 12 
    [22500000.000, 25000000.000) = 3 
    [25000000.000, 27500000.000) = 1 
    [27500000.000, 30000000.000) = 0 
    [30000000.000, 32500000.000) = 0 
    [32500000.000, 35000000.000) = 0 
    [35000000.000, 37500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 16875520.000 ns/op
     p(50.0000) = 16973824.000 ns/op
     p(90.0000) = 17806131.200 ns/op
     p(95.0000) = 18710528.000 ns/op
     p(99.0000) = 22403481.600 ns/op
     p(99.9000) = 35782656.000 ns/op
     p(99.9900) = 35782656.000 ns/op
     p(99.9990) = 35782656.000 ns/op
     p(99.9999) = 35782656.000 ns/op
    p(100.0000) = 35782656.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.deserialization_site_8k

# Run progress: 58.06% complete, ETA 00:30:01
# Fork: 1 of 1
# Warmup Iteration   1: n = 343, mean = 2915134 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2252800, 2310144, 3792077, 5208474, 13814333, 50921472, 50921472, 50921472 ns/op
Iteration   1: n = 430, mean = 2326557 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2252800, 2273280, 2408038, 2430771, 3468411, 6250496, 6250496, 6250496 ns/op
Iteration   2: n = 397, mean = 2523693 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2240512, 2273280, 3331686, 4525261, 4777083, 4882432, 4882432, 4882432 ns/op
Iteration   3: n = 434, mean = 2306746 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2244608, 2252800, 2336768, 2499584, 3840205, 4505600, 4505600, 4505600 ns/op
Iteration   4: n = 438, mean = 2281294 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2244608, 2252800, 2290074, 2339430, 2964849, 4816896, 4816896, 4816896 ns/op
Iteration   5: n = 437, mean = 2291070 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2240512, 2252800, 2289664, 2344141, 3949117, 4988928, 4988928, 4988928 ns/op
Iteration   6: n = 438, mean = 2281687 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2244608, 2252800, 2285568, 2323046, 3040788, 4521984, 4521984, 4521984 ns/op
Iteration   7: n = 439, mean = 2277133 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2244608, 2252800, 2285568, 2318336, 2909798, 4448256, 4448256, 4448256 ns/op
Iteration   8: n = 437, mean = 2286646 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2244608, 2252800, 2285568, 2330624, 3867443, 4882432, 4882432, 4882432 ns/op
Iteration   9: n = 439, mean = 2278281 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2248704, 2256896, 2301952, 2334720, 2813952, 3837952, 3837952, 3837952 ns/op
Iteration  10: n = 440, mean = 2273261 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2244608, 2252800, 2293350, 2334310, 2706637, 4210688, 4210688, 4210688 ns/op


Result "deserialization_site_8k":
  N = 4329
  mean = 2310594.380 ±(99.9%) 14226.538 ns/op

  Histogram, ns/op:
    [2000000.000, 2500000.000) = 4195 
    [2500000.000, 3000000.000) = 56 
    [3000000.000, 3500000.000) = 13 
    [3500000.000, 4000000.000) = 8 
    [4000000.000, 4500000.000) = 23 
    [4500000.000, 5000000.000) = 32 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 2240512.000 ns/op
     p(50.0000) = 2256896.000 ns/op
     p(90.0000) = 2330624.000 ns/op
     p(95.0000) = 2408448.000 ns/op
     p(99.0000) = 4380262.400 ns/op
     p(99.9000) = 4882432.000 ns/op
     p(99.9900) = 6250496.000 ns/op
     p(99.9990) = 6250496.000 ns/op
     p(99.9999) = 6250496.000 ns/op
    p(100.0000) = 6250496.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_events_1k

# Run progress: 58.33% complete, ETA 00:29:49
# Fork: 1 of 1
# Warmup Iteration   1: n = 301, mean = 3319515 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3018752, 3051520, 3207168, 5790106, 8194621, 11173888, 11173888, 11173888 ns/op
Iteration   1: n = 312, mean = 3223946 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3026944, 3141632, 3488563, 3597926, 5073224, 10633216, 10633216, 10633216 ns/op
Iteration   2: n = 317, mean = 3161440 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3035136, 3137536, 3228467, 3449242, 4425482, 4866048, 4866048, 4866048 ns/op
Iteration   3: n = 310, mean = 3229868 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3018752, 3117056, 3628646, 3729203, 5522063, 8077312, 8077312, 8077312 ns/op
Iteration   4: n = 295, mean = 3396695 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3010560, 3190784, 4094362, 4620288, 5787156, 6045696, 6045696, 6045696 ns/op
Iteration   5: n = 291, mean = 3435052 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3006464, 3231744, 3996877, 4974182, 5779620, 6406144, 6406144, 6406144 ns/op
Iteration   6: n = 313, mean = 3199277 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3031040, 3088384, 3475866, 3666330, 5027922, 8798208, 8798208, 8798208 ns/op
Iteration   7: n = 290, mean = 3451162 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3043328, 3198976, 4204134, 5353062, 5786501, 6381568, 6381568, 6381568 ns/op
Iteration   8: n = 302, mean = 3320785 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3031040, 3170304, 3551232, 4164198, 6264914, 8847360, 8847360, 8847360 ns/op
Iteration   9: n = 321, mean = 3121803 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3039232, 3063808, 3121152, 3158016, 5997855, 8151040, 8151040, 8151040 ns/op
Iteration  10: n = 324, mean = 3088030 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3006464, 3047424, 3104768, 3144704, 4810752, 6594560, 6594560, 6594560 ns/op


Result "serialization_events_1k":
  N = 3075
  mean = 3258094.267 ±(99.9%) 29093.887 ns/op

  Histogram, ns/op:
    [ 3000000.000,  3500000.000) = 2726 
    [ 3500000.000,  4000000.000) = 209 
    [ 4000000.000,  4500000.000) = 47 
    [ 4500000.000,  5000000.000) = 26 
    [ 5000000.000,  5500000.000) = 25 
    [ 5500000.000,  6000000.000) = 24 
    [ 6000000.000,  6500000.000) = 11 
    [ 6500000.000,  7000000.000) = 1 
    [ 7000000.000,  7500000.000) = 1 
    [ 7500000.000,  8000000.000) = 0 
    [ 8000000.000,  8500000.000) = 2 
    [ 8500000.000,  9000000.000) = 2 
    [ 9000000.000,  9500000.000) = 0 
    [ 9500000.000, 10000000.000) = 0 
    [10000000.000, 10500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 3006464.000 ns/op
     p(50.0000) = 3121152.000 ns/op
     p(90.0000) = 3547136.000 ns/op
     p(95.0000) = 3864166.400 ns/op
     p(99.0000) = 5679022.080 ns/op
     p(99.9000) = 8749023.232 ns/op
     p(99.9900) = 10633216.000 ns/op
     p(99.9990) = 10633216.000 ns/op
     p(99.9999) = 10633216.000 ns/op
    p(100.0000) = 10633216.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_events_2k

# Run progress: 58.61% complete, ETA 00:29:37
# Fork: 1 of 1
# Warmup Iteration   1: n = 169, mean = 5931832 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5341184, 5398528, 5603328, 12279808, 16264397, 18546688, 18546688, 18546688 ns/op
Iteration   1: n = 180, mean = 5564234 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5324800, 5357568, 5586944, 5938381, 11348050, 13697024, 13697024, 13697024 ns/op
Iteration   2: n = 184, mean = 5437173 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5341184, 5373952, 5521408, 5658624, 6939034, 9633792, 9633792, 9633792 ns/op
Iteration   3: n = 184, mean = 5483386 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5341184, 5365760, 5431296, 5548032, 9854976, 13893632, 13893632, 13893632 ns/op
Iteration   4: n = 185, mean = 5419384 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5349376, 5365760, 5521408, 5579571, 6849495, 8314880, 8314880, 8314880 ns/op
Iteration   5: n = 183, mean = 5505158 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5349376, 5406720, 5555814, 5680333, 9680323, 11042816, 11042816, 11042816 ns/op
Iteration   6: n = 183, mean = 5468138 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5357568, 5390336, 5447680, 5686886, 9407037, 9420800, 9420800, 9420800 ns/op
Iteration   7: n = 184, mean = 5437796 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5341184, 5373952, 5459968, 5629952, 8157184, 8749056, 8749056, 8749056 ns/op
Iteration   8: n = 180, mean = 5558044 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5341184, 5373952, 5513216, 6223872, 10165453, 10895360, 10895360, 10895360 ns/op
Iteration   9: n = 182, mean = 5499713 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5341184, 5390336, 5545984, 5577523, 9233859, 13680640, 13680640, 13680640 ns/op
Iteration  10: n = 185, mean = 5423945 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5349376, 5373952, 5431296, 5632000, 7329874, 8273920, 8273920, 8273920 ns/op


Result "serialization_events_2k":
  N = 1830
  mean = 5479248.297 ±(99.9%) 45340.058 ns/op

  Histogram, ns/op:
    [ 5000000.000,  5500000.000) = 1635 
    [ 5500000.000,  6000000.000) = 145 
    [ 6000000.000,  6500000.000) = 14 
    [ 6500000.000,  7000000.000) = 4 
    [ 7000000.000,  7500000.000) = 5 
    [ 7500000.000,  8000000.000) = 1 
    [ 8000000.000,  8500000.000) = 7 
    [ 8500000.000,  9000000.000) = 2 
    [ 9000000.000,  9500000.000) = 4 
    [ 9500000.000, 10000000.000) = 6 
    [10000000.000, 10500000.000) = 0 
    [10500000.000, 11000000.000) = 3 
    [11000000.000, 11500000.000) = 1 
    [11500000.000, 12000000.000) = 0 
    [12000000.000, 12500000.000) = 0 
    [12500000.000, 13000000.000) = 0 
    [13000000.000, 13500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 5324800.000 ns/op
     p(50.0000) = 5382144.000 ns/op
     p(90.0000) = 5521408.000 ns/op
     p(95.0000) = 5652480.000 ns/op
     p(99.0000) = 8816885.760 ns/op
     p(99.9000) = 13730250.752 ns/op
     p(99.9900) = 13893632.000 ns/op
     p(99.9990) = 13893632.000 ns/op
     p(99.9999) = 13893632.000 ns/op
    p(100.0000) = 13893632.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_events_4k

# Run progress: 58.89% complete, ETA 00:29:25
# Fork: 1 of 1
# Warmup Iteration   1: n = 75, mean = 13444273 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12058624, 12337152, 14535885, 24032051, 32702464, 32702464, 32702464, 32702464 ns/op
Iteration   1: n = 79, mean = 12853352 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12386304, 12632064, 13025280, 13500416, 19791872, 19791872, 19791872, 19791872 ns/op
Iteration   2: n = 78, mean = 12949031 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12304384, 12623872, 12979405, 15561523, 22282240, 22282240, 22282240, 22282240 ns/op
Iteration   3: n = 78, mean = 12830983 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12419072, 12615680, 12813926, 13117030, 24379392, 24379392, 24379392, 24379392 ns/op
Iteration   4: n = 80, mean = 12675482 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12435456, 12615680, 12777882, 12859802, 17137664, 17137664, 17137664, 17137664 ns/op
Iteration   5: n = 79, mean = 12690341 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12386304, 12632064, 12828672, 13041664, 15613952, 15613952, 15613952, 15613952 ns/op
Iteration   6: n = 78, mean = 12845686 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12517376, 12689408, 12905677, 13151437, 19759104, 19759104, 19759104, 19759104 ns/op
Iteration   7: n = 79, mean = 12830539 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12435456, 12730368, 12959744, 13271040, 19431424, 19431424, 19431424, 19431424 ns/op
Iteration   8: n = 79, mean = 12677898 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12386304, 12484608, 12812288, 13320192, 18055168, 18055168, 18055168, 18055168 ns/op
Iteration   9: n = 79, mean = 12671676 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12288000, 12566528, 12697600, 12779520, 21069824, 21069824, 21069824, 21069824 ns/op
Iteration  10: n = 80, mean = 12566938 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12337152, 12517376, 12632064, 12903219, 16285696, 16285696, 16285696, 16285696 ns/op


Result "serialization_events_4k":
  N = 789
  mean = 12758401.460 ±(99.9%) 111531.525 ns/op

  Histogram, ns/op:
    [10000000.000, 11250000.000) = 0 
    [11250000.000, 12500000.000) = 158 
    [12500000.000, 13750000.000) = 610 
    [13750000.000, 15000000.000) = 2 
    [15000000.000, 16250000.000) = 7 
    [16250000.000, 17500000.000) = 4 
    [17500000.000, 18750000.000) = 1 
    [18750000.000, 20000000.000) = 3 
    [20000000.000, 21250000.000) = 2 
    [21250000.000, 22500000.000) = 1 
    [22500000.000, 23750000.000) = 0 
    [23750000.000, 25000000.000) = 1 
    [25000000.000, 26250000.000) = 0 
    [26250000.000, 27500000.000) = 0 
    [27500000.000, 28750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 12288000.000 ns/op
     p(50.0000) = 12615680.000 ns/op
     p(90.0000) = 12828672.000 ns/op
     p(95.0000) = 13066240.000 ns/op
     p(99.0000) = 18192793.600 ns/op
     p(99.9000) = 24379392.000 ns/op
     p(99.9900) = 24379392.000 ns/op
     p(99.9990) = 24379392.000 ns/op
     p(99.9999) = 24379392.000 ns/op
    p(100.0000) = 24379392.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_events_64k

# Run progress: 59.17% complete, ETA 00:29:13
# Fork: 1 of 1
# Warmup Iteration   1: n = 4, mean = 251396096 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 227278848, 231866368, 314572800, 314572800, 314572800, 314572800, 314572800, 314572800 ns/op
Iteration   1: n = 5, mean = 231997440 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 226754560, 229113856, 247463936, 247463936, 247463936, 247463936, 247463936, 247463936 ns/op
Iteration   2: n = 5, mean = 228274995 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 227540992, 228327424, 228851712, 228851712, 228851712, 228851712, 228851712, 228851712 ns/op
Iteration   3: n = 5, mean = 229847859 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 225705984, 226754560, 235929600, 235929600, 235929600, 235929600, 235929600, 235929600 ns/op
Iteration   4: n = 5, mean = 227016704 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 225968128, 227016704, 228065280, 228065280, 228065280, 228065280, 228065280, 228065280 ns/op
Iteration   5: n = 5, mean = 229743002 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 225968128, 229638144, 235667456, 235667456, 235667456, 235667456, 235667456, 235667456 ns/op
Iteration   6: n = 5, mean = 228746854 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 225968128, 227016704, 235143168, 235143168, 235143168, 235143168, 235143168, 235143168 ns/op
Iteration   7: n = 5, mean = 228537139 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 227016704, 227278848, 232783872, 232783872, 232783872, 232783872, 232783872, 232783872 ns/op
Iteration   8: n = 5, mean = 231263437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 226754560, 227540992, 237764608, 237764608, 237764608, 237764608, 237764608, 237764608 ns/op
Iteration   9: n = 5, mean = 227960422 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 225968128, 227540992, 230686720, 230686720, 230686720, 230686720, 230686720, 230686720 ns/op
Iteration  10: n = 5, mean = 230162432 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 226230272, 230948864, 234881024, 234881024, 234881024, 234881024, 234881024, 234881024 ns/op


Result "serialization_events_64k":
  N = 50
  mean = 229355028.480 ±(99.9%) 2060692.557 ns/op

  Histogram, ns/op:
    [220000000.000, 222500000.000) = 0 
    [222500000.000, 225000000.000) = 0 
    [225000000.000, 227500000.000) = 21 
    [227500000.000, 230000000.000) = 16 
    [230000000.000, 232500000.000) = 4 
    [232500000.000, 235000000.000) = 3 
    [235000000.000, 237500000.000) = 4 
    [237500000.000, 240000000.000) = 1 
    [240000000.000, 242500000.000) = 0 
    [242500000.000, 245000000.000) = 0 
    [245000000.000, 247500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 225705984.000 ns/op
     p(50.0000) = 227540992.000 ns/op
     p(90.0000) = 235615027.200 ns/op
     p(95.0000) = 237476249.600 ns/op
     p(99.0000) = 247463936.000 ns/op
     p(99.9000) = 247463936.000 ns/op
     p(99.9900) = 247463936.000 ns/op
     p(99.9990) = 247463936.000 ns/op
     p(99.9999) = 247463936.000 ns/op
    p(100.0000) = 247463936.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_events_8k

# Run progress: 59.44% complete, ETA 00:29:01
# Fork: 1 of 1
# Warmup Iteration   1: n = 36, mean = 28500878 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25034752, 25362432, 40625766, 50547917, 67371008, 67371008, 67371008, 67371008 ns/op
Iteration   1: n = 39, mean = 25714478 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24936448, 25231360, 26116096, 30375936, 33128448, 33128448, 33128448, 33128448 ns/op
Iteration   2: n = 40, mean = 25492685 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24838144, 25051136, 25847398, 26111181, 38141952, 38141952, 38141952, 38141952 ns/op
Iteration   3: n = 38, mean = 26799912 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24936448, 25100288, 29727130, 48155853, 52887552, 52887552, 52887552, 52887552 ns/op
Iteration   4: n = 39, mean = 25864875 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24870912, 25034752, 28442624, 35258368, 38404096, 38404096, 38404096, 38404096 ns/op
Iteration   5: n = 40, mean = 25458278 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24838144, 25083904, 25811354, 26135757, 37224448, 37224448, 37224448, 37224448 ns/op
Iteration   6: n = 40, mean = 25307546 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24805376, 25034752, 25631130, 27620147, 31326208, 31326208, 31326208, 31326208 ns/op
Iteration   7: n = 40, mean = 25069978 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24739840, 24870912, 25634406, 26445414, 28082176, 28082176, 28082176, 28082176 ns/op
Iteration   8: n = 40, mean = 25196134 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24739840, 24838144, 25824461, 26330726, 33751040, 33751040, 33751040, 33751040 ns/op
Iteration   9: n = 40, mean = 25382093 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24772608, 25214976, 25526272, 28796518, 29818880, 29818880, 29818880, 29818880 ns/op
Iteration  10: n = 40, mean = 25470566 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25165824, 25362432, 25876890, 26430669, 27262976, 27262976, 27262976, 27262976 ns/op


Result "serialization_events_8k":
  N = 396
  mean = 25568390.465 ±(99.9%) 396330.891 ns/op

  Histogram, ns/op:
    [20000000.000, 22500000.000) = 0 
    [22500000.000, 25000000.000) = 126 
    [25000000.000, 27500000.000) = 251 
    [27500000.000, 30000000.000) = 8 
    [30000000.000, 32500000.000) = 2 
    [32500000.000, 35000000.000) = 3 
    [35000000.000, 37500000.000) = 2 
    [37500000.000, 40000000.000) = 2 
    [40000000.000, 42500000.000) = 0 
    [42500000.000, 45000000.000) = 0 
    [45000000.000, 47500000.000) = 0 
    [47500000.000, 50000000.000) = 1 
    [50000000.000, 52500000.000) = 0 
    [52500000.000, 55000000.000) = 1 
    [55000000.000, 57500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 24739840.000 ns/op
     p(50.0000) = 25100288.000 ns/op
     p(90.0000) = 25798246.400 ns/op
     p(95.0000) = 27331788.800 ns/op
     p(99.0000) = 38149816.320 ns/op
     p(99.9000) = 52887552.000 ns/op
     p(99.9900) = 52887552.000 ns/op
     p(99.9990) = 52887552.000 ns/op
     p(99.9999) = 52887552.000 ns/op
    p(100.0000) = 52887552.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_site_1k

# Run progress: 59.72% complete, ETA 00:28:49
# Fork: 1 of 1
# Warmup Iteration   1: n = 1719, mean = 580998 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 484864, 492032, 535552, 1206272, 2071347, 5926748, 6463488, 6463488 ns/op
Iteration   1: n = 1962, mean = 509934 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 485376, 489984, 511334, 516608, 1116160, 3241447, 3387392, 3387392 ns/op
Iteration   2: n = 1977, mean = 505670 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 487424, 489984, 506470, 514560, 1105920, 1828770, 7651328, 7651328 ns/op
Iteration   3: n = 1970, mean = 507491 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 486912, 489984, 502272, 516608, 1128448, 1653299, 3592192, 3592192 ns/op
Iteration   4: n = 2017, mean = 495665 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 486912, 489472, 499814, 512512, 559022, 1371718, 1601536, 1601536 ns/op
Iteration   5: n = 1992, mean = 501777 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 487424, 489984, 507392, 515072, 1020836, 1505696, 1564672, 1564672 ns/op
Iteration   6: n = 1934, mean = 516868 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 487424, 489984, 511488, 559104, 1061274, 1527941, 1529856, 1529856 ns/op
Iteration   7: n = 2006, mean = 498613 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 487424, 489472, 502784, 518477, 646738, 1443152, 1572864, 1572864 ns/op
Iteration   8: n = 1967, mean = 508111 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 487936, 489984, 513536, 525312, 1129103, 1598079, 4653056, 4653056 ns/op
Iteration   9: n = 2002, mean = 499363 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 486400, 489984, 506368, 517120, 697754, 1431552, 1507328, 1507328 ns/op
Iteration  10: n = 2007, mean = 498142 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 487936, 489984, 505856, 514048, 605880, 1390543, 1544192, 1544192 ns/op


Result "serialization_site_1k":
  N = 19834
  mean = 504086.149 ±(99.9%) 2489.345 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 17009 
    [ 500000.000, 1000000.000) = 2613 
    [1000000.000, 1500000.000) = 195 
    [1500000.000, 2000000.000) = 10 
    [2000000.000, 2500000.000) = 0 
    [2500000.000, 3000000.000) = 0 
    [3000000.000, 3500000.000) = 4 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 1 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 0 
    [6500000.000, 7000000.000) = 0 
    [7000000.000, 7500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 485376.000 ns/op
     p(50.0000) = 489984.000 ns/op
     p(90.0000) = 508928.000 ns/op
     p(95.0000) = 518144.000 ns/op
     p(99.0000) = 1031475.200 ns/op
     p(99.9000) = 1458790.400 ns/op
     p(99.9900) = 4702527.488 ns/op
     p(99.9990) = 7651328.000 ns/op
     p(99.9999) = 7651328.000 ns/op
    p(100.0000) = 7651328.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_site_2k

# Run progress: 60.00% complete, ETA 00:28:37
# Fork: 1 of 1
# Warmup Iteration   1: n = 1024, mean = 975679 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 747520, 807424, 1546240, 2033664, 3567616, 11970765, 12107776, 12107776 ns/op
Iteration   1: n = 1303, mean = 767270 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 743424, 748544, 768000, 783155, 1003479, 4199154, 4235264, 4235264 ns/op
Iteration   2: n = 1314, mean = 766523 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 743424, 747520, 774144, 783360, 1524838, 2398433, 2531328, 2531328 ns/op
Iteration   3: n = 1301, mean = 768210 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 743424, 748544, 775168, 792576, 1486807, 2191172, 2281472, 2281472 ns/op
Iteration   4: n = 1318, mean = 758264 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 743424, 747520, 769024, 779264, 938578, 1635750, 1652736, 1652736 ns/op
Iteration   5: n = 1314, mean = 761612 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 744448, 748544, 772096, 782336, 1014016, 3649577, 4612096, 4612096 ns/op
Iteration   6: n = 1313, mean = 761323 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 743424, 747520, 766976, 775475, 1466409, 2031391, 2105344, 2105344 ns/op
Iteration   7: n = 1314, mean = 760875 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 744448, 747520, 768000, 775168, 1348403, 1748470, 1798144, 1798144 ns/op
Iteration   8: n = 1306, mean = 765257 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 743424, 747520, 770048, 778906, 1473987, 2589002, 3014656, 3014656 ns/op
Iteration   9: n = 1310, mean = 763172 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 743424, 747520, 771072, 786893, 1256120, 2051607, 2082816, 2082816 ns/op
Iteration  10: n = 1305, mean = 766308 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 743424, 748544, 773120, 791245, 1304453, 1857192, 1937408, 1937408 ns/op


Result "serialization_site_2k":
  N = 13098
  mean = 763870.461 ±(99.9%) 3127.951 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 12914 
    [1000000.000, 1500000.000) = 110 
    [1500000.000, 2000000.000) = 63 
    [2000000.000, 2500000.000) = 4 
    [2500000.000, 3000000.000) = 1 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 2 
    [4000000.000, 4500000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 743424.000 ns/op
     p(50.0000) = 747520.000 ns/op
     p(90.0000) = 771072.000 ns/op
     p(95.0000) = 781312.000 ns/op
     p(99.0000) = 1296445.440 ns/op
     p(99.9000) = 1978003.456 ns/op
     p(99.9900) = 4495315.763 ns/op
     p(99.9990) = 4612096.000 ns/op
     p(99.9999) = 4612096.000 ns/op
    p(100.0000) = 4612096.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_site_4k

# Run progress: 60.28% complete, ETA 00:28:25
# Fork: 1 of 1
# Warmup Iteration   1: n = 594, mean = 1681287 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1216512, 1232896, 2871296, 3832832, 6508134, 14467072, 14467072, 14467072 ns/op
Iteration   1: n = 798, mean = 1254811 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1218560, 1226752, 1253376, 1275904, 2102641, 4513792, 4513792, 4513792 ns/op
Iteration   2: n = 789, mean = 1268171 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1208320, 1232896, 1267712, 1284096, 2613658, 4644864, 4644864, 4644864 ns/op
Iteration   3: n = 802, mean = 1246308 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1210368, 1220608, 1263002, 1282048, 1371976, 11485184, 11485184, 11485184 ns/op
Iteration   4: n = 809, mean = 1236071 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1212416, 1220608, 1243136, 1259520, 1462272, 3579904, 3579904, 3579904 ns/op
Iteration   5: n = 801, mean = 1248045 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1210368, 1218560, 1247232, 1294336, 2218967, 4530176, 4530176, 4530176 ns/op
Iteration   6: n = 804, mean = 1242767 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1212416, 1222656, 1255424, 1263616, 1786163, 5390336, 5390336, 5390336 ns/op
Iteration   7: n = 805, mean = 1241424 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1210368, 1222656, 1247232, 1280819, 1962885, 3387392, 3387392, 3387392 ns/op
Iteration   8: n = 796, mean = 1255262 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1214464, 1224704, 1271808, 1288192, 2170962, 4112384, 4112384, 4112384 ns/op
Iteration   9: n = 803, mean = 1244648 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1212416, 1222656, 1251328, 1273446, 2080932, 2932736, 2932736, 2932736 ns/op
Iteration  10: n = 805, mean = 1241574 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1212416, 1220608, 1247232, 1273856, 2099528, 2461696, 2461696, 2461696 ns/op


Result "serialization_site_4k":
  N = 8012
  mean = 1247849.314 ±(99.9%) 7181.505 ns/op

  Histogram, ns/op:
    [       0.000,  1250000.000) = 6939 
    [ 1250000.000,  2500000.000) = 1036 
    [ 2500000.000,  3750000.000) = 28 
    [ 3750000.000,  5000000.000) = 7 
    [ 5000000.000,  6250000.000) = 1 
    [ 6250000.000,  7500000.000) = 0 
    [ 7500000.000,  8750000.000) = 0 
    [ 8750000.000, 10000000.000) = 0 
    [10000000.000, 11250000.000) = 0 
    [11250000.000, 12500000.000) = 1 
    [12500000.000, 13750000.000) = 0 
    [13750000.000, 15000000.000) = 0 
    [15000000.000, 16250000.000) = 0 
    [16250000.000, 17500000.000) = 0 
    [17500000.000, 18750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 1208320.000 ns/op
     p(50.0000) = 1222656.000 ns/op
     p(90.0000) = 1257472.000 ns/op
     p(95.0000) = 1277952.000 ns/op
     p(99.0000) = 2023157.760 ns/op
     p(99.9000) = 4005675.008 ns/op
     p(99.9900) = 11485184.000 ns/op
     p(99.9990) = 11485184.000 ns/op
     p(99.9999) = 11485184.000 ns/op
    p(100.0000) = 11485184.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_site_64k

# Run progress: 60.56% complete, ETA 00:28:13
# Fork: 1 of 1
# Warmup Iteration   1: n = 34, mean = 29416990 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 22282240, 22560768, 43892736, 99811328, 135790592, 135790592, 135790592, 135790592 ns/op
Iteration   1: n = 44, mean = 22764823 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 22020096, 22216704, 24117248, 26746880, 27459584, 27459584, 27459584, 27459584 ns/op
Iteration   2: n = 45, mean = 22429332 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21954560, 22118400, 23055565, 25326387, 26345472, 26345472, 26345472, 26345472 ns/op
Iteration   3: n = 45, mean = 22517441 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 22151168, 22249472, 22970368, 25198592, 26116096, 26116096, 26116096, 26116096 ns/op
Iteration   4: n = 45, mean = 22630309 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 22118400, 22315008, 23049011, 25483674, 27328512, 27328512, 27328512, 27328512 ns/op
Iteration   5: n = 45, mean = 22495596 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 22151168, 22315008, 23049011, 23301325, 26869760, 26869760, 26869760, 26869760 ns/op
Iteration   6: n = 44, mean = 23119313 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 22118400, 22265856, 23674880, 31547392, 35454976, 35454976, 35454976, 35454976 ns/op
Iteration   7: n = 45, mean = 22549481 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 22118400, 22282240, 23075226, 23271834, 29392896, 29392896, 29392896, 29392896 ns/op
Iteration   8: n = 48, mean = 21217280 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19202048, 22167552, 22596813, 23275110, 27918336, 27918336, 27918336, 27918336 ns/op
Iteration   9: n = 51, mean = 19644095 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19202048, 19300352, 20086784, 20683162, 29360128, 29360128, 29360128, 29360128 ns/op
Iteration  10: n = 51, mean = 19668510 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19202048, 19300352, 19981926, 20552090, 30146560, 30146560, 30146560, 30146560 ns/op


Result "serialization_site_64k":
  N = 463
  mean = 21836439.499 ±(99.9%) 290946.259 ns/op

  Histogram, ns/op:
    [10000000.000, 12500000.000) = 0 
    [12500000.000, 15000000.000) = 0 
    [15000000.000, 17500000.000) = 0 
    [17500000.000, 20000000.000) = 111 
    [20000000.000, 22500000.000) = 269 
    [22500000.000, 25000000.000) = 66 
    [25000000.000, 27500000.000) = 10 
    [27500000.000, 30000000.000) = 3 
    [30000000.000, 32500000.000) = 3 
    [32500000.000, 35000000.000) = 0 
    [35000000.000, 37500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 19202048.000 ns/op
     p(50.0000) = 22216704.000 ns/op
     p(90.0000) = 22990028.800 ns/op
     p(95.0000) = 23684710.400 ns/op
     p(99.0000) = 29664215.040 ns/op
     p(99.9000) = 35454976.000 ns/op
     p(99.9900) = 35454976.000 ns/op
     p(99.9990) = 35454976.000 ns/op
     p(99.9999) = 35454976.000 ns/op
    p(100.0000) = 35454976.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ChillBenchmark.serialization_site_8k

# Run progress: 60.83% complete, ETA 00:28:01
# Fork: 1 of 1
# Warmup Iteration   1: n = 322, mean = 3106918 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2314240, 2355200, 5311693, 6482330, 8001700, 16678912, 16678912, 16678912 ns/op
Iteration   1: n = 422, mean = 2369225 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2252800, 2342912, 2371584, 2424218, 4446904, 7012352, 7012352, 7012352 ns/op
Iteration   2: n = 422, mean = 2368468 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2248704, 2338816, 2408448, 2468659, 4654285, 6119424, 6119424, 6119424 ns/op
Iteration   3: n = 419, mean = 2387939 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2330624, 2342912, 2375680, 2420736, 3488973, 8470528, 8470528, 8470528 ns/op
Iteration   4: n = 419, mean = 2389972 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2252800, 2342912, 2416640, 2453504, 3177677, 5513216, 5513216, 5513216 ns/op
Iteration   5: n = 421, mean = 2375291 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2330624, 2342912, 2383872, 2444902, 3192832, 4317184, 4317184, 4317184 ns/op
Iteration   6: n = 398, mean = 2511733 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2252800, 2342912, 2606694, 4546560, 4768154, 5111808, 5111808, 5111808 ns/op
Iteration   7: n = 420, mean = 2382234 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2334720, 2342912, 2416640, 2465587, 3287163, 4947968, 4947968, 4947968 ns/op
Iteration   8: n = 427, mean = 2343305 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2256896, 2342912, 2367488, 2398618, 3119677, 4251648, 4251648, 4251648 ns/op
Iteration   9: n = 419, mean = 2388467 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2252800, 2342912, 2379776, 2469888, 3435725, 6914048, 6914048, 6914048 ns/op
Iteration  10: n = 418, mean = 2393142 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2256896, 2342912, 2371584, 2425037, 4200366, 5701632, 5701632, 5701632 ns/op


Result "serialization_site_8k":
  N = 4185
  mean = 2390238.662 ±(99.9%) 16187.235 ns/op

  Histogram, ns/op:
    [2000000.000, 2500000.000) = 4008 
    [2500000.000, 3000000.000) = 78 
    [3000000.000, 3500000.000) = 38 
    [3500000.000, 4000000.000) = 6 
    [4000000.000, 4500000.000) = 10 
    [4500000.000, 5000000.000) = 34 
    [5000000.000, 5500000.000) = 4 
    [5500000.000, 6000000.000) = 3 
    [6000000.000, 6500000.000) = 1 
    [6500000.000, 7000000.000) = 1 
    [7000000.000, 7500000.000) = 1 
    [7500000.000, 8000000.000) = 0 
    [8000000.000, 8500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 2248704.000 ns/op
     p(50.0000) = 2342912.000 ns/op
     p(90.0000) = 2383872.000 ns/op
     p(95.0000) = 2461696.000 ns/op
     p(99.0000) = 4516085.760 ns/op
     p(99.9000) = 6041714.688 ns/op
     p(99.9900) = 8470528.000 ns/op
     p(99.9990) = 8470528.000 ns/op
     p(99.9999) = 8470528.000 ns/op
    p(100.0000) = 8470528.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_events_1k

# Run progress: 61.11% complete, ETA 00:27:49
# Fork: 1 of 1
# Warmup Iteration   1: n = 3061, mean = 326290 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 229376, 241408, 389018, 483328, 2024653, 7375815, 16744448, 16744448 ns/op
Iteration   1: n = 3994, mean = 252682 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 231680, 237824, 249856, 281856, 517146, 1079091, 2070528, 2070528 ns/op
Iteration   2: n = 4148, mean = 240946 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 230912, 236288, 243456, 249856, 372014, 922291, 1492992, 1492992 ns/op
Iteration   3: n = 4117, mean = 242728 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 231424, 236544, 246016, 258048, 432845, 945451, 1857536, 1857536 ns/op
Iteration   4: n = 4139, mean = 241427 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 231680, 236032, 244224, 256000, 446669, 917647, 1120256, 1120256 ns/op
Iteration   5: n = 4119, mean = 242608 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 231168, 236288, 245760, 258816, 429978, 989102, 1077248, 1077248 ns/op
Iteration   6: n = 4158, mean = 240369 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 231424, 235776, 243456, 252173, 299730, 1032985, 1392640, 1392640 ns/op
Iteration   7: n = 4136, mean = 241641 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 230912, 236032, 242432, 252672, 407875, 947382, 1280000, 1280000 ns/op
Iteration   8: n = 4118, mean = 242647 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 230400, 236288, 244480, 255744, 363305, 1018491, 1746944, 1746944 ns/op
Iteration   9: n = 4006, mean = 249435 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 231168, 236288, 250112, 282086, 474624, 965446, 4464640, 4464640 ns/op
Iteration  10: n = 4096, mean = 243955 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 230912, 236544, 246784, 254976, 462336, 966389, 2568192, 2568192 ns/op


Result "deserialization_events_1k":
  N = 41031
  mean = 243793.989 ±(99.9%) 870.735 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 40897 
    [ 500000.000, 1000000.000) = 93 
    [1000000.000, 1500000.000) = 34 
    [1500000.000, 2000000.000) = 4 
    [2000000.000, 2500000.000) = 1 
    [2500000.000, 3000000.000) = 1 
    [3000000.000, 3500000.000) = 0 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 230400.000 ns/op
     p(50.0000) = 236288.000 ns/op
     p(90.0000) = 245248.000 ns/op
     p(95.0000) = 257024.000 ns/op
     p(99.0000) = 463708.160 ns/op
     p(99.9000) = 1000382.464 ns/op
     p(99.9900) = 1851195.392 ns/op
     p(99.9990) = 4464640.000 ns/op
     p(99.9999) = 4464640.000 ns/op
    p(100.0000) = 4464640.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_events_2k

# Run progress: 61.39% complete, ETA 00:27:37
# Fork: 1 of 1
# Warmup Iteration   1: n = 1353, mean = 737913 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 475136, 513024, 1179648, 1667072, 4456120, 18372493, 22478848, 22478848 ns/op
Iteration   1: n = 1927, mean = 521164 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 473088, 496128, 617472, 632832, 1003684, 1674019, 2265088, 2265088 ns/op
Iteration   2: n = 1993, mean = 501537 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 483328, 491008, 505139, 520192, 631992, 1568190, 6561792, 6561792 ns/op
Iteration   3: n = 1992, mean = 502074 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 483840, 491520, 508928, 519680, 714373, 1382973, 3497984, 3497984 ns/op
Iteration   4: n = 1971, mean = 507079 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 482816, 489984, 512000, 526336, 901693, 1335689, 1562624, 1562624 ns/op
Iteration   5: n = 1981, mean = 504528 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 483840, 492032, 509440, 520653, 909107, 1693028, 1880064, 1880064 ns/op
Iteration   6: n = 1990, mean = 502275 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 483840, 492032, 507392, 519168, 842629, 1384780, 1421312, 1421312 ns/op
Iteration   7: n = 1987, mean = 502972 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 484352, 491520, 508928, 520294, 696689, 1481122, 1515520, 1515520 ns/op
Iteration   8: n = 1976, mean = 505995 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 483328, 492032, 509440, 525312, 947825, 1890243, 2670592, 2670592 ns/op
Iteration   9: n = 1988, mean = 502723 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 483840, 491008, 510976, 520704, 715090, 1495740, 3768320, 3768320 ns/op
Iteration  10: n = 1979, mean = 505227 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 483840, 492032, 513024, 523776, 930202, 1352172, 1376256, 1376256 ns/op


Result "deserialization_events_2k":
  N = 19784
  mean = 505506.290 ±(99.9%) 2077.030 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 15172 
    [ 500000.000, 1000000.000) = 4522 
    [1000000.000, 1500000.000) = 75 
    [1500000.000, 2000000.000) = 10 
    [2000000.000, 2500000.000) = 1 
    [2500000.000, 3000000.000) = 1 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 473088.000 ns/op
     p(50.0000) = 492032.000 ns/op
     p(90.0000) = 511488.000 ns/op
     p(95.0000) = 527360.000 ns/op
     p(99.0000) = 889856.000 ns/op
     p(99.9000) = 1425848.320 ns/op
     p(99.9900) = 3828379.648 ns/op
     p(99.9990) = 6561792.000 ns/op
     p(99.9999) = 6561792.000 ns/op
    p(100.0000) = 6561792.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_events_4k

# Run progress: 61.67% complete, ETA 00:27:25
# Fork: 1 of 1
# Warmup Iteration   1: n = 717, mean = 1393154 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 957440, 1016832, 1672397, 1950925, 6779863, 42205184, 42205184, 42205184 ns/op
Iteration   1: n = 977, mean = 1026650 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 949248, 995328, 1107968, 1130701, 1770086, 3346432, 3346432, 3346432 ns/op
Iteration   2: n = 1012, mean = 992604 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 965632, 974848, 1001472, 1017856, 1206006, 6266982, 6324224, 6324224 ns/op
Iteration   3: n = 1010, mean = 989869 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 968704, 974848, 997376, 1010125, 1337815, 2832306, 2842624, 2842624 ns/op
Iteration   4: n = 1001, mean = 998974 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 967680, 975872, 1005363, 1019904, 1660805, 4263166, 4268032, 4268032 ns/op
Iteration   5: n = 1002, mean = 998124 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 967680, 976896, 1006592, 1021952, 1720934, 3793318, 3796992, 3796992 ns/op
Iteration   6: n = 1008, mean = 992116 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 967680, 974848, 1001472, 1012736, 1381560, 3524665, 3526656, 3526656 ns/op
Iteration   7: n = 1000, mean = 999827 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 968704, 976896, 1002496, 1026048, 1836237, 2101062, 2101248, 2101248 ns/op
Iteration   8: n = 1002, mean = 998256 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 966656, 975872, 1006592, 1017856, 1759171, 3350225, 3354624, 3354624 ns/op
Iteration   9: n = 1003, mean = 996492 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 968704, 976896, 1001472, 1017651, 1658470, 3293217, 3297280, 3297280 ns/op
Iteration  10: n = 993, mean = 1006930 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 967680, 976896, 1007616, 1039667, 1813217, 3522560, 3522560, 3522560 ns/op


Result "deserialization_events_4k":
  N = 10008
  mean = 999890.980 ±(99.9%) 4429.455 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 8497 
    [1000000.000, 1500000.000) = 1371 
    [1500000.000, 2000000.000) = 122 
    [2000000.000, 2500000.000) = 6 
    [2500000.000, 3000000.000) = 3 
    [3000000.000, 3500000.000) = 4 
    [3500000.000, 4000000.000) = 3 
    [4000000.000, 4500000.000) = 1 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 949248.000 ns/op
     p(50.0000) = 976896.000 ns/op
     p(90.0000) = 1007616.000 ns/op
     p(95.0000) = 1048576.000 ns/op
     p(99.0000) = 1679175.680 ns/op
     p(99.9000) = 2840190.976 ns/op
     p(99.9900) = 6322373.427 ns/op
     p(99.9990) = 6324224.000 ns/op
     p(99.9999) = 6324224.000 ns/op
    p(100.0000) = 6324224.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_events_64k

# Run progress: 61.94% complete, ETA 00:27:13
# Fork: 1 of 1
# Warmup Iteration   1: n = 36, mean = 27840057 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19988480, 22806528, 35189555, 74288333, 142082048, 142082048, 142082048, 142082048 ns/op
Iteration   1: n = 49, mean = 20660558 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19759104, 20054016, 22740992, 23773184, 28835840, 28835840, 28835840, 28835840 ns/op
Iteration   2: n = 49, mean = 20488694 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19595264, 19759104, 20742144, 27082752, 28868608, 28868608, 28868608, 28868608 ns/op
Iteration   3: n = 50, mean = 20061880 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19529728, 19742720, 20640563, 21051802, 26214400, 26214400, 26214400, 26214400 ns/op
Iteration   4: n = 50, mean = 20061225 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19595264, 19693568, 20447232, 20845363, 30539776, 30539776, 30539776, 30539776 ns/op
Iteration   5: n = 50, mean = 20132659 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19595264, 19759104, 20771635, 21438464, 27885568, 27885568, 27885568, 27885568 ns/op
Iteration   6: n = 51, mean = 19903669 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19529728, 19628032, 20624179, 21246771, 22347776, 22347776, 22347776, 22347776 ns/op
Iteration   7: n = 50, mean = 20101202 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19562496, 19628032, 20604518, 20783104, 28508160, 28508160, 28508160, 28508160 ns/op
Iteration   8: n = 50, mean = 20168049 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19562496, 19726336, 20702822, 21035418, 28737536, 28737536, 28737536, 28737536 ns/op
Iteration   9: n = 50, mean = 20154286 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19562496, 19824640, 20676608, 21118976, 26214400, 26214400, 26214400, 26214400 ns/op
Iteration  10: n = 50, mean = 20076298 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19562496, 19759104, 20575027, 21289370, 23592960, 23592960, 23592960, 23592960 ns/op


Result "deserialization_events_64k":
  N = 499
  mean = 20178718.269 ±(99.9%) 192789.289 ns/op

  Histogram, ns/op:
    [10000000.000, 12500000.000) = 0 
    [12500000.000, 15000000.000) = 0 
    [15000000.000, 17500000.000) = 0 
    [17500000.000, 20000000.000) = 318 
    [20000000.000, 22500000.000) = 164 
    [22500000.000, 25000000.000) = 6 
    [25000000.000, 27500000.000) = 5 
    [27500000.000, 30000000.000) = 5 
    [30000000.000, 32500000.000) = 1 
    [32500000.000, 35000000.000) = 0 
    [35000000.000, 37500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 19529728.000 ns/op
     p(50.0000) = 19759104.000 ns/op
     p(90.0000) = 20676608.000 ns/op
     p(95.0000) = 21299200.000 ns/op
     p(99.0000) = 28508160.000 ns/op
     p(99.9000) = 30539776.000 ns/op
     p(99.9900) = 30539776.000 ns/op
     p(99.9990) = 30539776.000 ns/op
     p(99.9999) = 30539776.000 ns/op
    p(100.0000) = 30539776.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_events_8k

# Run progress: 62.22% complete, ETA 00:27:01
# Fork: 1 of 1
# Warmup Iteration   1: n = 347, mean = 2880491 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2011136, 2269184, 2736128, 5837619, 15526789, 51773440, 51773440, 51773440 ns/op
Iteration   1: n = 478, mean = 2097923 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2009088, 2035712, 2269184, 2302771, 3131269, 4800512, 4800512, 4800512 ns/op
Iteration   2: n = 486, mean = 2059896 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1998848, 2019328, 2094285, 2170880, 3400090, 3899392, 3899392, 3899392 ns/op
Iteration   3: n = 486, mean = 2060705 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1996800, 2027520, 2070528, 2109440, 2964726, 4685824, 4685824, 4685824 ns/op
Iteration   4: n = 488, mean = 2050896 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2000896, 2023424, 2054144, 2102067, 2872648, 5136384, 5136384, 5136384 ns/op
Iteration   5: n = 484, mean = 2068539 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1998848, 2025472, 2069504, 2137088, 3265331, 4349952, 4349952, 4349952 ns/op
Iteration   6: n = 484, mean = 2065772 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2000896, 2027520, 2075648, 2169856, 3050701, 3940352, 3940352, 3940352 ns/op
Iteration   7: n = 486, mean = 2056892 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1996800, 2021376, 2059469, 2220032, 2900500, 3121152, 3121152, 3121152 ns/op
Iteration   8: n = 480, mean = 2083251 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1996800, 2029568, 2094899, 2189107, 3341066, 6758400, 6758400, 6758400 ns/op
Iteration   9: n = 458, mean = 2186535 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1998848, 2023424, 2675507, 3657728, 3801293, 4538368, 4538368, 4538368 ns/op
Iteration  10: n = 480, mean = 2085252 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2000896, 2031616, 2091008, 2524979, 3295273, 3739648, 3739648, 3739648 ns/op


Result "deserialization_events_8k":
  N = 4810
  mean = 2080920.429 ±(99.9%) 11695.265 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 0 
    [1500000.000, 2000000.000) = 26 
    [2000000.000, 2500000.000) = 4609 
    [2500000.000, 3000000.000) = 95 
    [3000000.000, 3500000.000) = 24 
    [3500000.000, 4000000.000) = 49 
    [4000000.000, 4500000.000) = 1 
    [4500000.000, 5000000.000) = 4 
    [5000000.000, 5500000.000) = 1 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 1996800.000 ns/op
     p(50.0000) = 2027520.000 ns/op
     p(90.0000) = 2091008.000 ns/op
     p(95.0000) = 2273280.000 ns/op
     p(99.0000) = 3630448.640 ns/op
     p(99.9000) = 4566237.184 ns/op
     p(99.9900) = 6758400.000 ns/op
     p(99.9990) = 6758400.000 ns/op
     p(99.9999) = 6758400.000 ns/op
    p(100.0000) = 6758400.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_site_1k

# Run progress: 62.50% complete, ETA 00:26:49
# Fork: 1 of 1
# Warmup Iteration   1: n = 1908, mean = 523224 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 310272, 394240, 777421, 1099981, 3100508, 11582849, 20086784, 20086784 ns/op
Iteration   1: n = 3443, mean = 291348 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 268288, 273408, 292352, 419328, 540795, 1154671, 4374528, 4374528 ns/op
Iteration   2: n = 3330, mean = 299980 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 259072, 263168, 471552, 481280, 504832, 1115010, 1894400, 1894400 ns/op
Iteration   3: n = 3711, mean = 269244 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 260608, 263168, 272384, 279245, 332124, 1086669, 2523136, 2523136 ns/op
Iteration   4: n = 3739, mean = 267208 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 260608, 263168, 268800, 279552, 336384, 973517, 1413120, 1413120 ns/op
Iteration   5: n = 3700, mean = 270018 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 260352, 263168, 272384, 287232, 465377, 1043003, 1179648, 1179648 ns/op
Iteration   6: n = 3712, mean = 269125 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 260864, 263168, 269312, 283136, 361651, 1090216, 3723264, 3723264 ns/op
Iteration   7: n = 3725, mean = 268206 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 260352, 263168, 270848, 282112, 324987, 1164472, 1867776, 1867776 ns/op
Iteration   8: n = 3693, mean = 270544 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 260608, 263168, 271360, 283648, 495165, 1136382, 2469888, 2469888 ns/op
Iteration   9: n = 3677, mean = 271950 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 260096, 263168, 270848, 286720, 485489, 1148510, 1714176, 1714176 ns/op
Iteration  10: n = 3676, mean = 271781 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 260608, 263680, 273562, 287232, 442092, 1151029, 2953216, 2953216 ns/op


Result "deserialization_site_1k":
  N = 36406
  mean = 274558.474 ±(99.9%) 1116.905 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 36170 
    [ 500000.000, 1000000.000) = 175 
    [1000000.000, 1500000.000) = 49 
    [1500000.000, 2000000.000) = 6 
    [2000000.000, 2500000.000) = 2 
    [2500000.000, 3000000.000) = 2 
    [3000000.000, 3500000.000) = 0 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 259072.000 ns/op
     p(50.0000) = 263168.000 ns/op
     p(90.0000) = 276480.000 ns/op
     p(95.0000) = 291840.000 ns/op
     p(99.0000) = 484864.000 ns/op
     p(99.9000) = 1081724.928 ns/op
     p(99.9900) = 2677663.744 ns/op
     p(99.9990) = 4374528.000 ns/op
     p(99.9999) = 4374528.000 ns/op
    p(100.0000) = 4374528.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_site_2k

# Run progress: 62.78% complete, ETA 00:26:36
# Fork: 1 of 1
# Warmup Iteration   1: n = 950, mean = 1049030 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 679936, 715776, 1482342, 1949286, 5639209, 39387136, 39387136, 39387136 ns/op
Iteration   1: n = 1888, mean = 530830 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 482816, 495104, 622694, 634880, 1143009, 1539613, 1765376, 1765376 ns/op
Iteration   2: n = 1959, mean = 510284 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 482816, 494592, 518656, 624640, 866099, 1388380, 2760704, 2760704 ns/op
Iteration   3: n = 1990, mean = 502315 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 489984, 494592, 512973, 518886, 617472, 1359077, 1497088, 1497088 ns/op
Iteration   4: n = 1988, mean = 503456 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 490496, 495104, 513536, 521216, 699382, 1260243, 1509376, 1509376 ns/op
Iteration   5: n = 1975, mean = 506246 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 489472, 494592, 513229, 524288, 927375, 1448706, 2646016, 2646016 ns/op
Iteration   6: n = 1978, mean = 505247 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 488960, 494592, 513536, 521216, 702679, 2849194, 3346432, 3346432 ns/op
Iteration   7: n = 1980, mean = 504731 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 489984, 495104, 513024, 524288, 677059, 1487309, 2039808, 2039808 ns/op
Iteration   8: n = 1976, mean = 505809 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 489472, 494080, 508928, 519168, 958464, 1450674, 2088960, 2088960 ns/op
Iteration   9: n = 1960, mean = 510024 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 489984, 495104, 513997, 524288, 842322, 1546516, 6397952, 6397952 ns/op
Iteration  10: n = 1970, mean = 507530 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 489472, 494592, 508928, 525773, 920310, 1597055, 3641344, 3641344 ns/op


Result "deserialization_site_2k":
  N = 19664
  mean = 508537.048 ±(99.9%) 2128.257 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 15425 
    [ 500000.000, 1000000.000) = 4120 
    [1000000.000, 1500000.000) = 107 
    [1500000.000, 2000000.000) = 4 
    [2000000.000, 2500000.000) = 2 
    [2500000.000, 3000000.000) = 3 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 482816.000 ns/op
     p(50.0000) = 494592.000 ns/op
     p(90.0000) = 514560.000 ns/op
     p(95.0000) = 529408.000 ns/op
     p(99.0000) = 931942.400 ns/op
     p(99.9000) = 1374218.240 ns/op
     p(99.9900) = 3733690.368 ns/op
     p(99.9990) = 6397952.000 ns/op
     p(99.9999) = 6397952.000 ns/op
    p(100.0000) = 6397952.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_site_4k

# Run progress: 63.06% complete, ETA 00:26:24
# Fork: 1 of 1
# Warmup Iteration   1: n = 431, mean = 2315775 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1478656, 1916928, 2658304, 3846144, 9918218, 33554432, 33554432, 33554432 ns/op
Iteration   1: n = 1079, mean = 929928 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 832512, 855040, 984064, 1554432, 1752678, 4578345, 4587520, 4587520 ns/op
Iteration   2: n = 1133, mean = 882532 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 833536, 855040, 918938, 996659, 1315185, 3406193, 3469312, 3469312 ns/op
Iteration   3: n = 1148, mean = 871047 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 845824, 852992, 877568, 893491, 1476383, 3531532, 3846144, 3846144 ns/op
Iteration   4: n = 1154, mean = 866513 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 845824, 850944, 873472, 890880, 1324646, 3051418, 3276800, 3276800 ns/op
Iteration   5: n = 1158, mean = 863428 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 846848, 851968, 875520, 886784, 1081651, 1773019, 1789952, 1789952 ns/op
Iteration   6: n = 1148, mean = 870778 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 846848, 851968, 877568, 888371, 1663427, 2250476, 2285568, 2285568 ns/op
Iteration   7: n = 1144, mean = 873641 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 846848, 851968, 875520, 896000, 1302221, 7942042, 8978432, 8978432 ns/op
Iteration   8: n = 1154, mean = 866675 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 845824, 851968, 874496, 893440, 1194189, 2726359, 2895872, 2895872 ns/op
Iteration   9: n = 1142, mean = 875720 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 846848, 851968, 875520, 894976, 1618739, 3837121, 4083712, 4083712 ns/op
Iteration  10: n = 1142, mean = 875152 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 845824, 851968, 877568, 889702, 1664143, 2543555, 2605056, 2605056 ns/op


Result "deserialization_site_4k":
  N = 11402
  mean = 877197.539 ±(99.9%) 4654.598 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 11078 
    [1000000.000, 1500000.000) = 159 
    [1500000.000, 2000000.000) = 149 
    [2000000.000, 2500000.000) = 6 
    [2500000.000, 3000000.000) = 3 
    [3000000.000, 3500000.000) = 2 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 2 
    [4500000.000, 5000000.000) = 1 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 0 
    [6500000.000, 7000000.000) = 0 
    [7000000.000, 7500000.000) = 0 
    [7500000.000, 8000000.000) = 0 
    [8000000.000, 8500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 832512.000 ns/op
     p(50.0000) = 851968.000 ns/op
     p(90.0000) = 880640.000 ns/op
     p(95.0000) = 935936.000 ns/op
     p(99.0000) = 1603584.000 ns/op
     p(99.9000) = 2332884.992 ns/op
     p(99.9900) = 8362387.046 ns/op
     p(99.9990) = 8978432.000 ns/op
     p(99.9999) = 8978432.000 ns/op
    p(100.0000) = 8978432.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_site_64k

# Run progress: 63.33% complete, ETA 00:26:12
# Fork: 1 of 1
# Warmup Iteration   1: n = 52, mean = 19472384 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14368768, 15319040, 26460160, 35491021, 118226944, 118226944, 118226944, 118226944 ns/op
Iteration   1: n = 67, mean = 14964705 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14286848, 14368768, 16888627, 17458790, 19496960, 19496960, 19496960, 19496960 ns/op
Iteration   2: n = 69, mean = 14500552 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14270464, 14319616, 14532608, 15433728, 17924096, 17924096, 17924096, 17924096 ns/op
Iteration   3: n = 69, mean = 14576774 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14270464, 14336000, 14909440, 15409152, 21102592, 21102592, 21102592, 21102592 ns/op
Iteration   4: n = 69, mean = 14588171 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14286848, 14336000, 14794752, 15261696, 23232512, 23232512, 23232512, 23232512 ns/op
Iteration   5: n = 69, mean = 14577011 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14286848, 14336000, 15237120, 15605760, 20021248, 20021248, 20021248, 20021248 ns/op
Iteration   6: n = 69, mean = 14584847 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14270464, 14352384, 15237120, 15515648, 18972672, 18972672, 18972672, 18972672 ns/op
Iteration   7: n = 69, mean = 14657506 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14286848, 14368768, 15319040, 15417344, 21430272, 21430272, 21430272, 21430272 ns/op
Iteration   8: n = 69, mean = 14648008 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14270464, 14352384, 15384576, 15581184, 19234816, 19234816, 19234816, 19234816 ns/op
Iteration   9: n = 67, mean = 14958103 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14221312, 14401536, 15512371, 16606822, 31686656, 31686656, 31686656, 31686656 ns/op
Iteration  10: n = 69, mean = 14534033 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14204928, 14286848, 15122432, 15269888, 23494656, 23494656, 23494656, 23494656 ns/op


Result "deserialization_site_64k":
  N = 686
  mean = 14657207.603 ±(99.9%) 137504.172 ns/op

  Histogram, ns/op:
    [10000000.000, 12500000.000) = 0 
    [12500000.000, 15000000.000) = 583 
    [15000000.000, 17500000.000) = 91 
    [17500000.000, 20000000.000) = 6 
    [20000000.000, 22500000.000) = 3 
    [22500000.000, 25000000.000) = 2 
    [25000000.000, 27500000.000) = 0 
    [27500000.000, 30000000.000) = 0 
    [30000000.000, 32500000.000) = 1 
    [32500000.000, 35000000.000) = 0 
    [35000000.000, 37500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 14204928.000 ns/op
     p(50.0000) = 14352384.000 ns/op
     p(90.0000) = 15253504.000 ns/op
     p(95.0000) = 15673753.600 ns/op
     p(99.0000) = 19565117.440 ns/op
     p(99.9000) = 31686656.000 ns/op
     p(99.9900) = 31686656.000 ns/op
     p(99.9990) = 31686656.000 ns/op
     p(99.9999) = 31686656.000 ns/op
    p(100.0000) = 31686656.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.deserialization_site_8k

# Run progress: 63.61% complete, ETA 00:26:00
# Fork: 1 of 1
# Warmup Iteration   1: n = 284, mean = 3513993 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1855488, 3395584, 4452352, 7315456, 13781402, 52690944, 52690944, 52690944 ns/op
Iteration   1: n = 577, mean = 1734138 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1632256, 1654784, 1906688, 1927168, 2874819, 5423104, 5423104, 5423104 ns/op
Iteration   2: n = 591, mean = 1693453 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1634304, 1648640, 1762918, 1908736, 2223800, 4808704, 4808704, 4808704 ns/op
Iteration   3: n = 589, mean = 1699061 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1636352, 1652736, 1716224, 1807360, 2331853, 8380416, 8380416, 8380416 ns/op
Iteration   4: n = 594, mean = 1690041 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1634304, 1648640, 1708032, 1749504, 3167642, 3338240, 3338240, 3338240 ns/op
Iteration   5: n = 595, mean = 1681979 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1636352, 1646592, 1691648, 1722368, 2592440, 3149824, 3149824, 3149824 ns/op
Iteration   6: n = 593, mean = 1686250 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1636352, 1650688, 1684685, 1753088, 2859500, 3305472, 3305472, 3305472 ns/op
Iteration   7: n = 595, mean = 1681394 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1636352, 1648640, 1689600, 1746944, 2716140, 3420160, 3420160, 3420160 ns/op
Iteration   8: n = 596, mean = 1677257 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1636352, 1648640, 1683456, 1770086, 2496307, 2854912, 2854912, 2854912 ns/op
Iteration   9: n = 592, mean = 1689514 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1636352, 1648640, 1693696, 1750630, 2480374, 4816896, 4816896, 4816896 ns/op
Iteration  10: n = 587, mean = 1702642 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1636352, 1652736, 1720730, 1863680, 2651095, 3436544, 3436544, 3436544 ns/op


Result "deserialization_site_8k":
  N = 5909
  mean = 1693433.978 ±(99.9%) 8553.561 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 0 
    [1500000.000, 2000000.000) = 5741 
    [2000000.000, 2500000.000) = 96 
    [2500000.000, 3000000.000) = 44 
    [3000000.000, 3500000.000) = 23 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 2 
    [5000000.000, 5500000.000) = 1 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 0 
    [6500000.000, 7000000.000) = 0 
    [7000000.000, 7500000.000) = 0 
    [7500000.000, 8000000.000) = 0 
    [8000000.000, 8500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 1632256.000 ns/op
     p(50.0000) = 1650688.000 ns/op
     p(90.0000) = 1714176.000 ns/op
     p(95.0000) = 1873920.000 ns/op
     p(99.0000) = 2568192.000 ns/op
     p(99.9000) = 3471933.440 ns/op
     p(99.9900) = 8380416.000 ns/op
     p(99.9990) = 8380416.000 ns/op
     p(99.9999) = 8380416.000 ns/op
    p(100.0000) = 8380416.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_events_1k

# Run progress: 63.89% complete, ETA 00:25:48
# Fork: 1 of 1
# Warmup Iteration   1: n = 2133, mean = 467879 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 280576, 297984, 777421, 1432781, 2498396, 7635124, 7847936, 7847936 ns/op
Iteration   1: n = 3280, mean = 304624 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 280064, 291840, 307149, 425446, 506465, 1100672, 1497088, 1497088 ns/op
Iteration   2: n = 3361, mean = 299103 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 287232, 291840, 299008, 310784, 492616, 1125556, 3244032, 3244032 ns/op
Iteration   3: n = 3372, mean = 297155 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 288768, 292352, 298496, 310784, 352159, 1074876, 4538368, 4538368 ns/op
Iteration   4: n = 3343, mean = 298901 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 286208, 291840, 300544, 313754, 507392, 1101562, 1595392, 1595392 ns/op
Iteration   5: n = 3346, mean = 298611 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 287744, 291840, 300032, 310272, 417853, 1148631, 4153344, 4153344 ns/op
Iteration   6: n = 3356, mean = 297708 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 288256, 291840, 297984, 309760, 382464, 1186531, 1566720, 1566720 ns/op
Iteration   7: n = 3325, mean = 300448 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 286208, 292352, 302592, 317952, 415345, 1123197, 1175552, 1175552 ns/op
Iteration   8: n = 3319, mean = 301057 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 287744, 292352, 301568, 311296, 493056, 1073889, 1593344, 1593344 ns/op
Iteration   9: n = 3336, mean = 299624 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 287232, 292352, 300544, 311808, 409984, 1118831, 1792000, 1792000 ns/op
Iteration  10: n = 3312, mean = 301704 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 286208, 292864, 302080, 315392, 508349, 1081469, 4571136, 4571136 ns/op


Result "serialization_events_1k":
  N = 33350
  mean = 299878.032 ±(99.9%) 1204.285 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 33091 
    [ 500000.000, 1000000.000) = 185 
    [1000000.000, 1500000.000) = 65 
    [1500000.000, 2000000.000) = 4 
    [2000000.000, 2500000.000) = 0 
    [2500000.000, 3000000.000) = 0 
    [3000000.000, 3500000.000) = 2 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 280064.000 ns/op
     p(50.0000) = 292352.000 ns/op
     p(90.0000) = 301056.000 ns/op
     p(95.0000) = 312320.000 ns/op
     p(99.0000) = 476410.880 ns/op
     p(99.9000) = 1100386.304 ns/op
     p(99.9900) = 3848633.549 ns/op
     p(99.9990) = 4571136.000 ns/op
     p(99.9999) = 4571136.000 ns/op
    p(100.0000) = 4571136.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_events_2k

# Run progress: 64.17% complete, ETA 00:25:36
# Fork: 1 of 1
# Warmup Iteration   1: n = 1066, mean = 936995 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 559104, 596992, 1608090, 1963930, 6613565, 11614061, 11616256, 11616256 ns/op
Iteration   1: n = 1633, mean = 612606 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 553984, 587776, 696934, 710963, 1065554, 2336784, 3489792, 3489792 ns/op
Iteration   2: n = 1668, mean = 599183 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 578560, 585728, 606208, 615424, 962877, 2543290, 4202496, 4202496 ns/op
Iteration   3: n = 1653, mean = 604452 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 576512, 586752, 613376, 638259, 999649, 1982456, 2686976, 2686976 ns/op
Iteration   4: n = 1677, mean = 595967 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 579584, 586752, 603136, 616448, 807281, 1414959, 1427456, 1427456 ns/op
Iteration   5: n = 1671, mean = 598405 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 579584, 586752, 603955, 613376, 968991, 2108162, 2785280, 2785280 ns/op
Iteration   6: n = 1660, mean = 602071 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 578560, 587776, 610304, 627712, 988355, 1949299, 2699264, 2699264 ns/op
Iteration   7: n = 1653, mean = 604483 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 577536, 586752, 605184, 624947, 1017979, 2570547, 3608576, 3608576 ns/op
Iteration   8: n = 1642, mean = 608578 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 578560, 587776, 609280, 635750, 1261548, 3786949, 4218880, 4218880 ns/op
Iteration   9: n = 1660, mean = 601944 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 580608, 586752, 609280, 628685, 1211965, 1407740, 1417216, 1417216 ns/op
Iteration  10: n = 1664, mean = 600780 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 578560, 585728, 607232, 620288, 1164288, 1460470, 1558528, 1558528 ns/op


Result "serialization_events_2k":
  N = 16581
  mean = 602811.156 ±(99.9%) 2509.467 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 16422 
    [1000000.000, 1500000.000) = 136 
    [1500000.000, 2000000.000) = 14 
    [2000000.000, 2500000.000) = 1 
    [2500000.000, 3000000.000) = 3 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 2 
    [4000000.000, 4500000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 553984.000 ns/op
     p(50.0000) = 586752.000 ns/op
     p(90.0000) = 609280.000 ns/op
     p(95.0000) = 629760.000 ns/op
     p(99.0000) = 994672.640 ns/op
     p(99.9000) = 1582096.384 ns/op
     p(99.9900) = 4208096.051 ns/op
     p(99.9990) = 4218880.000 ns/op
     p(99.9999) = 4218880.000 ns/op
    p(100.0000) = 4218880.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_events_4k

# Run progress: 64.44% complete, ETA 00:25:24
# Fork: 1 of 1
# Warmup Iteration   1: n = 559, mean = 1788560 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1099776, 1159168, 2465792, 4866048, 13139968, 26705920, 26705920, 26705920 ns/op
Iteration   1: n = 869, mean = 1153403 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1079296, 1107968, 1232896, 1350656, 2130330, 2342912, 2342912, 2342912 ns/op
Iteration   2: n = 875, mean = 1142381 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1091584, 1105920, 1138688, 1212416, 2033091, 4767744, 4767744, 4767744 ns/op
Iteration   3: n = 890, mean = 1122697 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1089536, 1103872, 1128448, 1187430, 1845617, 2117632, 2117632, 2117632 ns/op
Iteration   4: n = 883, mean = 1131512 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1089536, 1103872, 1134592, 1179648, 1891860, 3248128, 3248128, 3248128 ns/op
Iteration   5: n = 888, mean = 1125408 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1087488, 1105920, 1136640, 1167360, 1832919, 2105344, 2105344, 2105344 ns/op
Iteration   6: n = 885, mean = 1129205 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1091584, 1105920, 1136640, 1155072, 1861304, 3416064, 3416064, 3416064 ns/op
Iteration   7: n = 879, mean = 1137889 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1089536, 1107968, 1136640, 1196032, 1929626, 2514944, 2514944, 2514944 ns/op
Iteration   8: n = 876, mean = 1141173 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1093632, 1110016, 1140736, 1236787, 1910784, 2355200, 2355200, 2355200 ns/op
Iteration   9: n = 879, mean = 1136892 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1093632, 1107968, 1140736, 1239040, 1857126, 2066432, 2066432, 2066432 ns/op
Iteration  10: n = 876, mean = 1140647 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1095680, 1107968, 1136640, 1188762, 1884119, 8060928, 8060928, 8060928 ns/op


Result "serialization_events_4k":
  N = 8800
  mean = 1136060.509 ±(99.9%) 5418.725 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 8587 
    [1500000.000, 2000000.000) = 166 
    [2000000.000, 2500000.000) = 41 
    [2500000.000, 3000000.000) = 1 
    [3000000.000, 3500000.000) = 3 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 1 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 0 
    [6500000.000, 7000000.000) = 0 
    [7000000.000, 7500000.000) = 0 
    [7500000.000, 8000000.000) = 0 
    [8000000.000, 8500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 1079296.000 ns/op
     p(50.0000) = 1105920.000 ns/op
     p(90.0000) = 1140736.000 ns/op
     p(95.0000) = 1226752.000 ns/op
     p(99.0000) = 1906688.000 ns/op
     p(99.9000) = 2287136.768 ns/op
     p(99.9900) = 8060928.000 ns/op
     p(99.9990) = 8060928.000 ns/op
     p(99.9999) = 8060928.000 ns/op
    p(100.0000) = 8060928.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_events_64k

# Run progress: 64.72% complete, ETA 00:25:12
# Fork: 1 of 1
# Warmup Iteration   1: n = 28, mean = 36062354 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26869760, 29097984, 42047898, 117289779, 157810688, 157810688, 157810688, 157810688 ns/op
Iteration   1: n = 37, mean = 27568515 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26476544, 26968064, 29995827, 32305971, 33751040, 33751040, 33751040, 33751040 ns/op
Iteration   2: n = 37, mean = 27280688 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26181632, 26542080, 29412557, 34019738, 35258368, 35258368, 35258368, 35258368 ns/op
Iteration   3: n = 38, mean = 26839579 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26050560, 26247168, 27964211, 33783808, 34406400, 34406400, 34406400, 34406400 ns/op
Iteration   4: n = 38, mean = 26484305 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26017792, 26116096, 27325235, 27860992, 29261824, 29261824, 29261824, 29261824 ns/op
Iteration   5: n = 38, mean = 26743000 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26017792, 26247168, 27374387, 28986573, 35586048, 35586048, 35586048, 35586048 ns/op
Iteration   6: n = 38, mean = 26723166 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 25985024, 26279936, 27751219, 28545843, 31129600, 31129600, 31129600, 31129600 ns/op
Iteration   7: n = 38, mean = 26716268 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26050560, 26705920, 27118797, 29156966, 31522816, 31522816, 31522816, 31522816 ns/op
Iteration   8: n = 38, mean = 26977549 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26083328, 26705920, 27770880, 29540352, 36700160, 36700160, 36700160, 36700160 ns/op
Iteration   9: n = 38, mean = 26914600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26050560, 26804224, 27462861, 30425088, 33226752, 33226752, 33226752, 33226752 ns/op
Iteration  10: n = 38, mean = 26899079 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26050560, 26738688, 27800371, 30244864, 30867456, 30867456, 30867456, 30867456 ns/op


Result "serialization_events_64k":
  N = 378
  mean = 26911976.974 ±(99.9%) 245198.148 ns/op

  Histogram, ns/op:
    [20000000.000, 21250000.000) = 0 
    [21250000.000, 22500000.000) = 0 
    [22500000.000, 23750000.000) = 0 
    [23750000.000, 25000000.000) = 0 
    [25000000.000, 26250000.000) = 137 
    [26250000.000, 27500000.000) = 194 
    [27500000.000, 28750000.000) = 26 
    [28750000.000, 30000000.000) = 5 
    [30000000.000, 31250000.000) = 6 
    [31250000.000, 32500000.000) = 2 
    [32500000.000, 33750000.000) = 1 
    [33750000.000, 35000000.000) = 4 
    [35000000.000, 36250000.000) = 2 
    [36250000.000, 37500000.000) = 1 
    [37500000.000, 38750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 25985024.000 ns/op
     p(50.0000) = 26607616.000 ns/op
     p(90.0000) = 27757772.800 ns/op
     p(95.0000) = 29199564.800 ns/op
     p(99.0000) = 34585313.280 ns/op
     p(99.9000) = 36700160.000 ns/op
     p(99.9900) = 36700160.000 ns/op
     p(99.9990) = 36700160.000 ns/op
     p(99.9999) = 36700160.000 ns/op
    p(100.0000) = 36700160.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_events_8k

# Run progress: 65.00% complete, ETA 00:25:00
# Fork: 1 of 1
# Warmup Iteration   1: n = 260, mean = 3846191 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2387968, 2828288, 5215027, 8158003, 24320082, 48431104, 48431104, 48431104 ns/op
Iteration   1: n = 402, mean = 2498224 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2375680, 2416640, 2760704, 2797568, 3641795, 6569984, 6569984, 6569984 ns/op
Iteration   2: n = 409, mean = 2449268 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2347008, 2387968, 2457600, 2584576, 4154982, 6856704, 6856704, 6856704 ns/op
Iteration   3: n = 413, mean = 2423820 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2355200, 2379776, 2420736, 2518221, 3969761, 6496256, 6496256, 6496256 ns/op
Iteration   4: n = 414, mean = 2414602 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2351104, 2387968, 2439168, 2506752, 3239526, 3682304, 3682304, 3682304 ns/op
Iteration   5: n = 414, mean = 2415750 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2351104, 2379776, 2439168, 2570240, 3266765, 4497408, 4497408, 4497408 ns/op
Iteration   6: n = 411, mean = 2434898 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2351104, 2383872, 2453504, 2614886, 3947069, 4190208, 4190208, 4190208 ns/op
Iteration   7: n = 409, mean = 2446954 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2351104, 2392064, 2486272, 2834432, 3453338, 5226496, 5226496, 5226496 ns/op
Iteration   8: n = 409, mean = 2446193 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2351104, 2375680, 2457600, 3018752, 3957965, 4931584, 4931584, 4931584 ns/op
Iteration   9: n = 412, mean = 2430608 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2351104, 2375680, 2472755, 2953011, 3280568, 3944448, 3944448, 3944448 ns/op
Iteration  10: n = 412, mean = 2428401 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2351104, 2379776, 2445312, 2679603, 3305841, 4907008, 4907008, 4907008 ns/op


Result "serialization_events_8k":
  N = 4105
  mean = 2438682.567 ±(99.9%) 12174.318 ns/op

  Histogram, ns/op:
    [2000000.000, 2500000.000) = 3744 
    [2500000.000, 3000000.000) = 226 
    [3000000.000, 3500000.000) = 99 
    [3500000.000, 4000000.000) = 15 
    [4000000.000, 4500000.000) = 14 
    [4500000.000, 5000000.000) = 3 
    [5000000.000, 5500000.000) = 1 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 2347008.000 ns/op
     p(50.0000) = 2383872.000 ns/op
     p(90.0000) = 2469888.000 ns/op
     p(95.0000) = 2714419.200 ns/op
     p(99.0000) = 3395338.240 ns/op
     p(99.9000) = 5195235.328 ns/op
     p(99.9900) = 6856704.000 ns/op
     p(99.9990) = 6856704.000 ns/op
     p(99.9999) = 6856704.000 ns/op
    p(100.0000) = 6856704.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_site_1k

# Run progress: 65.28% complete, ETA 00:24:48
# Fork: 1 of 1
# Warmup Iteration   1: n = 921, mean = 1084208 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 600064, 814080, 1496678, 2222490, 6373868, 9191424, 9191424, 9191424 ns/op
Iteration   1: n = 3100, mean = 323046 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 271872, 287232, 426752, 533402, 714742, 1702654, 5218304, 5218304 ns/op
Iteration   2: n = 3455, mean = 289164 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 270336, 278016, 290509, 336179, 519905, 980320, 1644544, 1644544 ns/op
Iteration   3: n = 3531, mean = 282897 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 273408, 278016, 285082, 295936, 416420, 1028018, 1900544, 1900544 ns/op
Iteration   4: n = 3534, mean = 282715 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 272896, 278016, 285184, 297472, 362138, 1059471, 1724416, 1724416 ns/op
Iteration   5: n = 3503, mean = 285192 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 273408, 278016, 287232, 300544, 501248, 1115898, 1181696, 1181696 ns/op
Iteration   6: n = 3509, mean = 284757 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 272896, 278016, 286720, 299520, 497510, 1036063, 1153024, 1153024 ns/op
Iteration   7: n = 3522, mean = 283683 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 273408, 278016, 285696, 294912, 361001, 1083521, 1964032, 1964032 ns/op
Iteration   8: n = 3482, mean = 286861 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 272896, 278528, 287744, 300467, 422999, 1059018, 5095424, 5095424 ns/op
Iteration   9: n = 3488, mean = 286388 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 272896, 278016, 287232, 299008, 517120, 1041431, 1155072, 1155072 ns/op
Iteration  10: n = 3490, mean = 286269 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 272896, 278016, 286720, 301286, 472750, 1079443, 1171456, 1171456 ns/op


Result "serialization_site_1k":
  N = 34614
  mean = 288691.054 ±(99.9%) 1221.310 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 34123 
    [ 500000.000, 1000000.000) = 429 
    [1000000.000, 1500000.000) = 53 
    [1500000.000, 2000000.000) = 6 
    [2000000.000, 2500000.000) = 0 
    [2500000.000, 3000000.000) = 1 
    [3000000.000, 3500000.000) = 0 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 270336.000 ns/op
     p(50.0000) = 278528.000 ns/op
     p(90.0000) = 289792.000 ns/op
     p(95.0000) = 305152.000 ns/op
     p(99.0000) = 520192.000 ns/op
     p(99.9000) = 1058816.000 ns/op
     p(99.9900) = 2386422.784 ns/op
     p(99.9990) = 5218304.000 ns/op
     p(99.9999) = 5218304.000 ns/op
    p(100.0000) = 5218304.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_site_2k

# Run progress: 65.56% complete, ETA 00:24:36
# Fork: 1 of 1
# Warmup Iteration   1: n = 574, mean = 1740930 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 804864, 1458176, 1859584, 3159040, 9428992, 15532032, 15532032, 15532032 ns/op
Iteration   1: n = 1468, mean = 680661 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 474112, 495104, 1151181, 1491149, 1735291, 5249950, 5914624, 5914624 ns/op
Iteration   2: n = 1972, mean = 509106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 476160, 488960, 517325, 619520, 874025, 1999122, 4075520, 4075520 ns/op
Iteration   3: n = 1989, mean = 503035 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 483328, 491008, 510976, 524288, 875622, 1329459, 1359872, 1359872 ns/op
Iteration   4: n = 2001, mean = 499656 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 483328, 490496, 508416, 515533, 643052, 1306595, 1349632, 1349632 ns/op
Iteration   5: n = 2001, mean = 499595 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 483840, 491008, 508928, 518093, 663552, 1316786, 1433600, 1433600 ns/op
Iteration   6: n = 1981, mean = 504541 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 484352, 492032, 509440, 520141, 896184, 1431716, 3563520, 3563520 ns/op
Iteration   7: n = 1973, mean = 506593 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 484352, 492032, 509440, 523264, 914637, 1432412, 1771520, 1771520 ns/op
Iteration   8: n = 1983, mean = 504137 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 485376, 492032, 509440, 519168, 865608, 1351401, 2215936, 2215936 ns/op
Iteration   9: n = 1977, mean = 505506 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 483328, 492032, 513024, 526336, 904028, 1392734, 1579008, 1579008 ns/op
Iteration  10: n = 1975, mean = 506107 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 483840, 492032, 509952, 524493, 892928, 1963033, 3338240, 3338240 ns/op


Result "serialization_site_2k":
  N = 19320
  mean = 517642.759 ±(99.9%) 3157.566 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 15476 
    [ 500000.000, 1000000.000) = 3568 
    [1000000.000, 1500000.000) = 202 
    [1500000.000, 2000000.000) = 66 
    [2000000.000, 2500000.000) = 3 
    [2500000.000, 3000000.000) = 0 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 2 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 474112.000 ns/op
     p(50.0000) = 491520.000 ns/op
     p(90.0000) = 515072.000 ns/op
     p(95.0000) = 609280.000 ns/op
     p(99.0000) = 1218560.000 ns/op
     p(99.9000) = 1746362.368 ns/op
     p(99.9900) = 4593636.966 ns/op
     p(99.9990) = 5914624.000 ns/op
     p(99.9999) = 5914624.000 ns/op
    p(100.0000) = 5914624.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_site_4k

# Run progress: 65.83% complete, ETA 00:24:24
# Fork: 1 of 1
# Warmup Iteration   1: n = 337, mean = 2963717 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1482752, 1980416, 4931584, 6415974, 18868470, 36700160, 36700160, 36700160 ns/op
Iteration   1: n = 927, mean = 1081690 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 871424, 916480, 1488896, 1595802, 2323251, 7553024, 7553024, 7553024 ns/op
Iteration   2: n = 1098, mean = 910872 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 855040, 883712, 945152, 1010842, 1601659, 3981488, 4120576, 4120576 ns/op
Iteration   3: n = 1114, mean = 897838 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 875520, 883712, 910336, 926464, 1283584, 1851269, 1861632, 1861632 ns/op
Iteration   4: n = 1110, mean = 900544 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 873472, 882688, 908288, 929792, 1576899, 2715982, 2822144, 2822144 ns/op
Iteration   5: n = 1114, mean = 897476 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 873472, 883712, 907264, 921856, 1240883, 1930383, 1949696, 1949696 ns/op
Iteration   6: n = 1104, mean = 905604 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 873472, 881664, 907264, 948992, 1658778, 2338673, 2367488, 2367488 ns/op
Iteration   7: n = 1097, mean = 911079 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 873472, 883712, 917504, 969830, 1667441, 2350793, 2375680, 2375680 ns/op
Iteration   8: n = 1108, mean = 902698 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 873472, 883712, 907264, 927744, 1548104, 2659144, 2772992, 2772992 ns/op
Iteration   9: n = 1097, mean = 911566 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 873472, 884736, 911360, 946278, 1638482, 1909342, 1918976, 1918976 ns/op
Iteration  10: n = 1102, mean = 907575 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 875520, 883712, 908288, 932864, 1607619, 2566382, 2572288, 2572288 ns/op


Result "serialization_site_4k":
  N = 10871
  mean = 920063.765 ±(99.9%) 5071.389 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 10166 
    [1000000.000, 1500000.000) = 488 
    [1500000.000, 2000000.000) = 193 
    [2000000.000, 2500000.000) = 14 
    [2500000.000, 3000000.000) = 8 
    [3000000.000, 3500000.000) = 0 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 1 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 0 
    [6500000.000, 7000000.000) = 0 
    [7000000.000, 7500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 855040.000 ns/op
     p(50.0000) = 883712.000 ns/op
     p(90.0000) = 921600.000 ns/op
     p(95.0000) = 1036697.600 ns/op
     p(99.0000) = 1638400.000 ns/op
     p(99.9000) = 2489942.016 ns/op
     p(99.9900) = 7253714.534 ns/op
     p(99.9990) = 7553024.000 ns/op
     p(99.9999) = 7553024.000 ns/op
    p(100.0000) = 7553024.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_site_64k

# Run progress: 66.11% complete, ETA 00:24:12
# Fork: 1 of 1
# Warmup Iteration   1: n = 20, mean = 50515149 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20840448, 38141952, 104267776, 193062502, 197656576, 197656576, 197656576, 197656576 ns/op
Iteration   1: n = 46, mean = 21975218 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20250624, 20611072, 25100288, 27702067, 32636928, 32636928, 32636928, 32636928 ns/op
Iteration   2: n = 49, mean = 20784274 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19922944, 20185088, 22478848, 24346624, 27328512, 27328512, 27328512, 27328512 ns/op
Iteration   3: n = 49, mean = 20437201 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19890176, 20021248, 21069824, 22773760, 28934144, 28934144, 28934144, 28934144 ns/op
Iteration   4: n = 50, mean = 20365967 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19922944, 19988480, 21001011, 21215642, 28409856, 28409856, 28409856, 28409856 ns/op
Iteration   5: n = 50, mean = 20245381 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19922944, 19988480, 20774912, 21207450, 24576000, 24576000, 24576000, 24576000 ns/op
Iteration   6: n = 50, mean = 20354826 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19922944, 20021248, 21263155, 21394227, 24018944, 24018944, 24018944, 24018944 ns/op
Iteration   7: n = 49, mean = 20467294 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19922944, 20021248, 21233664, 21692416, 27983872, 27983872, 27983872, 27983872 ns/op
Iteration   8: n = 49, mean = 20500062 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19922944, 20054016, 21692416, 22085632, 23887872, 23887872, 23887872, 23887872 ns/op
Iteration   9: n = 49, mean = 20568942 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19955712, 20054016, 21430272, 21807104, 28180480, 28180480, 28180480, 28180480 ns/op
Iteration  10: n = 49, mean = 20550217 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 19922944, 20054016, 21233664, 21528576, 28409856, 28409856, 28409856, 28409856 ns/op


Result "serialization_site_64k":
  N = 490
  mean = 20614816.914 ±(99.9%) 209704.292 ns/op

  Histogram, ns/op:
    [10000000.000, 12500000.000) = 0 
    [12500000.000, 15000000.000) = 0 
    [15000000.000, 17500000.000) = 0 
    [17500000.000, 20000000.000) = 183 
    [20000000.000, 22500000.000) = 279 
    [22500000.000, 25000000.000) = 17 
    [25000000.000, 27500000.000) = 4 
    [27500000.000, 30000000.000) = 6 
    [30000000.000, 32500000.000) = 0 
    [32500000.000, 35000000.000) = 1 
    [35000000.000, 37500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 19890176.000 ns/op
     p(50.0000) = 20054016.000 ns/op
     p(90.0000) = 21426995.200 ns/op
     p(95.0000) = 23086694.400 ns/op
     p(99.0000) = 28409856.000 ns/op
     p(99.9000) = 32636928.000 ns/op
     p(99.9900) = 32636928.000 ns/op
     p(99.9990) = 32636928.000 ns/op
     p(99.9999) = 32636928.000 ns/op
    p(100.0000) = 32636928.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaPbBenchmark.serialization_site_8k

# Run progress: 66.39% complete, ETA 00:24:00
# Fork: 1 of 1
# Warmup Iteration   1: n = 137, mean = 7301195 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2396160, 5324800, 11757158, 17570202, 45975470, 57344000, 57344000, 57344000 ns/op
Iteration   1: n = 373, mean = 2680607 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1968128, 2121728, 3908403, 4297523, 8254751, 9699328, 9699328, 9699328 ns/op
Iteration   2: n = 490, mean = 2042867 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1959936, 1978368, 2174566, 2291507, 3945923, 4472832, 4472832, 4472832 ns/op
Iteration   3: n = 497, mean = 2012290 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1955840, 1980416, 2021376, 2108211, 3013673, 3661824, 3661824, 3661824 ns/op
Iteration   4: n = 492, mean = 2034859 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1970176, 1988608, 2052096, 2119066, 3453829, 3719168, 3719168, 3719168 ns/op
Iteration   5: n = 493, mean = 2028729 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1970176, 1988608, 2031616, 2163917, 2744975, 5292032, 5292032, 5292032 ns/op
Iteration   6: n = 495, mean = 2020333 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1970176, 1986560, 2050048, 2087731, 2749235, 5677056, 5677056, 5677056 ns/op
Iteration   7: n = 494, mean = 2025617 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1970176, 1988608, 2027520, 2162688, 2956902, 3518464, 3518464, 3518464 ns/op
Iteration   8: n = 492, mean = 2033448 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1968128, 1986560, 2039808, 2218394, 2901688, 4800512, 4800512, 4800512 ns/op
Iteration   9: n = 491, mean = 2038586 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1970176, 1986560, 2045952, 2259354, 3067412, 3579904, 3579904, 3579904 ns/op
Iteration  10: n = 488, mean = 2048466 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1968128, 1986560, 2062336, 2655846, 3126600, 3637248, 3637248, 3637248 ns/op


Result "serialization_site_8k":
  N = 4805
  mean = 2082011.718 ±(99.9%) 18833.815 ns/op

  Histogram, ns/op:
    [ 1000000.000,  1500000.000) = 0 
    [ 1500000.000,  2000000.000) = 3288 
    [ 2000000.000,  2500000.000) = 1275 
    [ 2500000.000,  3000000.000) = 91 
    [ 3000000.000,  3500000.000) = 27 
    [ 3500000.000,  4000000.000) = 96 
    [ 4000000.000,  4500000.000) = 14 
    [ 4500000.000,  5000000.000) = 3 
    [ 5000000.000,  5500000.000) = 6 
    [ 5500000.000,  6000000.000) = 1 
    [ 6000000.000,  6500000.000) = 0 
    [ 6500000.000,  7000000.000) = 0 
    [ 7000000.000,  7500000.000) = 0 
    [ 7500000.000,  8000000.000) = 0 
    [ 8000000.000,  8500000.000) = 1 
    [ 8500000.000,  9000000.000) = 1 
    [ 9000000.000,  9500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 1955840.000 ns/op
     p(50.0000) = 1986560.000 ns/op
     p(90.0000) = 2109440.000 ns/op
     p(95.0000) = 2537472.000 ns/op
     p(99.0000) = 3895296.000 ns/op
     p(99.9000) = 6160187.392 ns/op
     p(99.9900) = 9699328.000 ns/op
     p(99.9990) = 9699328.000 ns/op
     p(99.9999) = 9699328.000 ns/op
    p(100.0000) = 9699328.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_events_1k

# Run progress: 66.67% complete, ETA 00:23:48
# Fork: 1 of 1
# Warmup Iteration   1: n = 60, mean = 16740489 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7593984, 16490496, 28334490, 31260672, 74711040, 74711040, 74711040, 74711040 ns/op
Iteration   1: n = 121, mean = 8298225 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7520256, 8134656, 8719565, 10138419, 12356485, 12468224, 12468224, 12468224 ns/op
Iteration   2: n = 121, mean = 8319484 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7618560, 8290304, 8503296, 8744141, 11140465, 11436032, 11436032, 11436032 ns/op
Iteration   3: n = 124, mean = 8080813 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7135232, 8085504, 8470528, 8671232, 10403840, 10633216, 10633216, 10633216 ns/op
Iteration   4: n = 122, mean = 8240145 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7102464, 7794688, 8663859, 13052314, 17818255, 17825792, 17825792, 17825792 ns/op
Iteration   5: n = 134, mean = 7504544 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7077888, 7233536, 7991296, 8304640, 12419072, 14368768, 14368768, 14368768 ns/op
Iteration   6: n = 139, mean = 7196466 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7077888, 7110656, 7348224, 7921664, 9063629, 9404416, 9404416, 9404416 ns/op
Iteration   7: n = 138, mean = 7268738 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7077888, 7118848, 7421133, 8300544, 11253678, 12320768, 12320768, 12320768 ns/op
Iteration   8: n = 138, mean = 7257993 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7077888, 7122944, 7438336, 8105165, 11225498, 11321344, 11321344, 11321344 ns/op
Iteration   9: n = 133, mean = 7542122 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7045120, 7487488, 7956070, 8042086, 9323479, 9551872, 9551872, 9551872 ns/op
Iteration  10: n = 132, mean = 7595473 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7053312, 7512064, 7962624, 8148992, 13495501, 15712256, 15712256, 15712256 ns/op


Result "deserialization_events_1k":
  N = 1302
  mean = 7706891.404 ±(99.9%) 80865.262 ns/op

  Histogram, ns/op:
    [       0.000,  1250000.000) = 0 
    [ 1250000.000,  2500000.000) = 0 
    [ 2500000.000,  3750000.000) = 0 
    [ 3750000.000,  5000000.000) = 0 
    [ 5000000.000,  6250000.000) = 0 
    [ 6250000.000,  7500000.000) = 623 
    [ 7500000.000,  8750000.000) = 635 
    [ 8750000.000, 10000000.000) = 20 
    [10000000.000, 11250000.000) = 6 
    [11250000.000, 12500000.000) = 7 
    [12500000.000, 13750000.000) = 7 
    [13750000.000, 15000000.000) = 1 
    [15000000.000, 16250000.000) = 1 
    [16250000.000, 17500000.000) = 0 
    [17500000.000, 18750000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 7045120.000 ns/op
     p(50.0000) = 7553024.000 ns/op
     p(90.0000) = 8380416.000 ns/op
     p(95.0000) = 8519680.000 ns/op
     p(99.0000) = 12309954.560 ns/op
     p(99.9000) = 17815863.296 ns/op
     p(99.9900) = 17825792.000 ns/op
     p(99.9990) = 17825792.000 ns/op
     p(99.9999) = 17825792.000 ns/op
    p(100.0000) = 17825792.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_events_2k

# Run progress: 66.94% complete, ETA 00:23:36
# Fork: 1 of 1
# Warmup Iteration   1: n = 32, mean = 31474688 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 18415616, 29966336, 39262618, 66830336, 105381888, 105381888, 105381888, 105381888 ns/op
Iteration   1: n = 69, mean = 14559440 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 13500416, 14057472, 15106048, 17956864, 29884416, 29884416, 29884416, 29884416 ns/op
Iteration   2: n = 73, mean = 13865577 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 13467648, 13533184, 14336000, 15471411, 22708224, 22708224, 22708224, 22708224 ns/op
Iteration   3: n = 75, mean = 13377645 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12681216, 13484032, 14054195, 14827520, 17268736, 17268736, 17268736, 17268736 ns/op
Iteration   4: n = 78, mean = 12907651 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12664832, 12746752, 13348045, 13616742, 18219008, 18219008, 18219008, 18219008 ns/op
Iteration   5: n = 72, mean = 13936412 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12648448, 12779520, 20273562, 23357030, 23789568, 23789568, 23789568, 23789568 ns/op
Iteration   6: n = 78, mean = 12930757 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12664832, 12730368, 13272678, 13807616, 17727488, 17727488, 17727488, 17727488 ns/op
Iteration   7: n = 78, mean = 12895888 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12648448, 12713984, 13543014, 13884621, 17072128, 17072128, 17072128, 17072128 ns/op
Iteration   8: n = 77, mean = 13210823 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12681216, 12910592, 13683917, 14180352, 23494656, 23494656, 23494656, 23494656 ns/op
Iteration   9: n = 77, mean = 12991448 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12681216, 12746752, 13536461, 13708493, 17924096, 17924096, 17924096, 17924096 ns/op
Iteration  10: n = 78, mean = 13004065 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12648448, 12746752, 13569229, 13837107, 18382848, 18382848, 18382848, 18382848 ns/op


Result "deserialization_events_2k":
  N = 755
  mean = 13346623.407 ±(99.9%) 183233.803 ns/op

  Histogram, ns/op:
    [10000000.000, 11250000.000) = 0 
    [11250000.000, 12500000.000) = 0 
    [12500000.000, 13750000.000) = 655 
    [13750000.000, 15000000.000) = 68 
    [15000000.000, 16250000.000) = 6 
    [16250000.000, 17500000.000) = 5 
    [17500000.000, 18750000.000) = 7 
    [18750000.000, 20000000.000) = 3 
    [20000000.000, 21250000.000) = 2 
    [21250000.000, 22500000.000) = 1 
    [22500000.000, 23750000.000) = 5 
    [23750000.000, 25000000.000) = 2 
    [25000000.000, 26250000.000) = 0 
    [26250000.000, 27500000.000) = 0 
    [27500000.000, 28750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 12648448.000 ns/op
     p(50.0000) = 12795904.000 ns/op
     p(90.0000) = 14024704.000 ns/op
     p(95.0000) = 14853734.400 ns/op
     p(99.0000) = 22881239.040 ns/op
     p(99.9000) = 29884416.000 ns/op
     p(99.9900) = 29884416.000 ns/op
     p(99.9990) = 29884416.000 ns/op
     p(99.9999) = 29884416.000 ns/op
    p(100.0000) = 29884416.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_events_4k

# Run progress: 67.22% complete, ETA 00:23:24
# Fork: 1 of 1
# Warmup Iteration   1: n = 15, mean = 67322948 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 32571392, 38207488, 148688077, 165675008, 165675008, 165675008, 165675008, 165675008 ns/op
Iteration   1: n = 29, mean = 35017693 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 32309248, 32702464, 37421056, 57868288, 77725696, 77725696, 77725696, 77725696 ns/op
Iteration   2: n = 30, mean = 33423360 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 32178176, 32538624, 34681651, 39606682, 42598400, 42598400, 42598400, 42598400 ns/op
Iteration   3: n = 32, mean = 31587328 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29917184, 31686656, 33213645, 35599155, 38666240, 38666240, 38666240, 38666240 ns/op
Iteration   4: n = 33, mean = 30303449 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29949952, 30015488, 31411405, 32174899, 33161216, 33161216, 33161216, 33161216 ns/op
Iteration   5: n = 32, mean = 31614976 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29949952, 30523392, 32836813, 43532288, 50135040, 50135040, 50135040, 50135040 ns/op
Iteration   6: n = 33, mean = 30547720 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29949952, 30048256, 31149261, 34124595, 38207488, 38207488, 38207488, 38207488 ns/op
Iteration   7: n = 33, mean = 30353098 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29917184, 30048256, 31201690, 32420659, 33062912, 33062912, 33062912, 33062912 ns/op
Iteration   8: n = 33, mean = 30409697 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29949952, 30048256, 31542477, 32505856, 33193984, 33193984, 33193984, 33193984 ns/op
Iteration   9: n = 33, mean = 30567579 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29917184, 30146560, 31791514, 32905626, 33685504, 33685504, 33685504, 33685504 ns/op
Iteration  10: n = 33, mean = 30493106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 29982720, 30146560, 31273779, 32446874, 35061760, 35061760, 35061760, 35061760 ns/op


Result "deserialization_events_4k":
  N = 321
  mean = 31367448.723 ±(99.9%) 613144.190 ns/op

  Histogram, ns/op:
    [20000000.000, 25000000.000) = 0 
    [25000000.000, 30000000.000) = 53 
    [30000000.000, 35000000.000) = 256 
    [35000000.000, 40000000.000) = 9 
    [40000000.000, 45000000.000) = 1 
    [45000000.000, 50000000.000) = 0 
    [50000000.000, 55000000.000) = 1 
    [55000000.000, 60000000.000) = 0 
    [60000000.000, 65000000.000) = 0 
    [65000000.000, 70000000.000) = 0 
    [70000000.000, 75000000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 29917184.000 ns/op
     p(50.0000) = 30244864.000 ns/op
     p(90.0000) = 33128448.000 ns/op
     p(95.0000) = 34209792.000 ns/op
     p(99.0000) = 42021683.200 ns/op
     p(99.9000) = 77725696.000 ns/op
     p(99.9900) = 77725696.000 ns/op
     p(99.9990) = 77725696.000 ns/op
     p(99.9999) = 77725696.000 ns/op
    p(100.0000) = 77725696.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_events_64k

# Run progress: 67.50% complete, ETA 00:23:12
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 1151336448 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1151336448, 1151336448, 1151336448, 1151336448, 1151336448, 1151336448, 1151336448, 1151336448 ns/op
Iteration   1: n = 2, mean = 724566016 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 719323136, 724566016, 729808896, 729808896, 729808896, 729808896, 729808896, 729808896 ns/op
Iteration   2: n = 2, mean = 703070208 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 686817280, 703070208, 719323136, 719323136, 719323136, 719323136, 719323136, 719323136 ns/op
Iteration   3: n = 2, mean = 663224320 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 662700032, 663224320, 663748608, 663748608, 663748608, 663748608, 663748608, 663748608 ns/op
Iteration   4: n = 2, mean = 666370048 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 658505728, 666370048, 674234368, 674234368, 674234368, 674234368, 674234368, 674234368 ns/op
Iteration   5: n = 2, mean = 671088640 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 667942912, 671088640, 674234368, 674234368, 674234368, 674234368, 674234368, 674234368 ns/op
Iteration   6: n = 2, mean = 666894336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 662700032, 666894336, 671088640, 671088640, 671088640, 671088640, 671088640, 671088640 ns/op
Iteration   7: n = 2, mean = 688914432 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 661651456, 688914432, 716177408, 716177408, 716177408, 716177408, 716177408, 716177408 ns/op
Iteration   8: n = 2, mean = 669515776 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 664797184, 669515776, 674234368, 674234368, 674234368, 674234368, 674234368, 674234368 ns/op
Iteration   9: n = 2, mean = 667942912 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 663748608, 667942912, 672137216, 672137216, 672137216, 672137216, 672137216, 672137216 ns/op
Iteration  10: n = 2, mean = 667942912 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 666894336, 667942912, 668991488, 668991488, 668991488, 668991488, 668991488, 668991488 ns/op


Result "deserialization_events_64k":
  N = 20
  mean = 678952960.000 ±(99.9%) 19663565.268 ns/op

  Histogram, ns/op:
    [650000000.000, 655000000.000) = 0 
    [655000000.000, 660000000.000) = 1 
    [660000000.000, 665000000.000) = 6 
    [665000000.000, 670000000.000) = 3 
    [670000000.000, 675000000.000) = 5 
    [675000000.000, 680000000.000) = 0 
    [680000000.000, 685000000.000) = 0 
    [685000000.000, 690000000.000) = 1 
    [690000000.000, 695000000.000) = 0 
    [695000000.000, 700000000.000) = 0 
    [700000000.000, 705000000.000) = 0 
    [705000000.000, 710000000.000) = 0 
    [710000000.000, 715000000.000) = 0 
    [715000000.000, 720000000.000) = 3 
    [720000000.000, 725000000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 658505728.000 ns/op
     p(50.0000) = 670040064.000 ns/op
     p(90.0000) = 719323136.000 ns/op
     p(95.0000) = 729284608.000 ns/op
     p(99.0000) = 729808896.000 ns/op
     p(99.9000) = 729808896.000 ns/op
     p(99.9900) = 729808896.000 ns/op
     p(99.9990) = 729808896.000 ns/op
     p(99.9999) = 729808896.000 ns/op
    p(100.0000) = 729808896.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_events_8k

# Run progress: 67.78% complete, ETA 00:23:01
# Fork: 1 of 1
# Warmup Iteration   1: n = 7, mean = 152212041 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 89260032, 117833728, 254017536, 254017536, 254017536, 254017536, 254017536, 254017536 ns/op
Iteration   1: n = 13, mean = 79631281 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 75366400, 79560704, 88106598, 90832896, 90832896, 90832896, 90832896, 90832896 ns/op
Iteration   2: n = 13, mean = 77221573 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 75235328, 75759616, 84908442, 87949312, 87949312, 87949312, 87949312, 87949312 ns/op
Iteration   3: n = 14, mean = 73568841 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 69730304, 71172096, 81133568, 83099648, 83099648, 83099648, 83099648, 83099648 ns/op
Iteration   4: n = 14, mean = 72108325 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 70647808, 71303168, 76808192, 78905344, 78905344, 78905344, 78905344, 78905344 ns/op
Iteration   5: n = 14, mean = 74373998 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 70647808, 71958528, 89915392, 98435072, 98435072, 98435072, 98435072, 98435072 ns/op
Iteration   6: n = 14, mean = 71864905 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 70778880, 71106560, 75497472, 76414976, 76414976, 76414976, 76414976, 76414976 ns/op
Iteration   7: n = 14, mean = 71930441 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 70647808, 71499776, 74514432, 74579968, 74579968, 74579968, 74579968, 74579968 ns/op
Iteration   8: n = 14, mean = 71818094 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 70647808, 71041024, 76349440, 80084992, 80084992, 80084992, 80084992, 80084992 ns/op
Iteration   9: n = 14, mean = 72052151 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 70647808, 71499776, 75890688, 77594624, 77594624, 77594624, 77594624, 77594624 ns/op
Iteration  10: n = 14, mean = 71602761 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 70647808, 71499776, 73924608, 75497472, 75497472, 75497472, 75497472, 75497472 ns/op


Result "deserialization_events_8k":
  N = 138
  mean = 73547538.551 ±(99.9%) 1218388.840 ns/op

  Histogram, ns/op:
    [ 60000000.000,  62500000.000) = 0 
    [ 62500000.000,  65000000.000) = 0 
    [ 65000000.000,  67500000.000) = 0 
    [ 67500000.000,  70000000.000) = 1 
    [ 70000000.000,  72500000.000) = 85 
    [ 72500000.000,  75000000.000) = 13 
    [ 75000000.000,  77500000.000) = 22 
    [ 77500000.000,  80000000.000) = 6 
    [ 80000000.000,  82500000.000) = 5 
    [ 82500000.000,  85000000.000) = 3 
    [ 85000000.000,  87500000.000) = 0 
    [ 87500000.000,  90000000.000) = 1 
    [ 90000000.000,  92500000.000) = 1 
    [ 92500000.000,  95000000.000) = 0 
    [ 95000000.000,  97500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 69730304.000 ns/op
     p(50.0000) = 71630848.000 ns/op
     p(90.0000) = 79206809.600 ns/op
     p(95.0000) = 81952768.000 ns/op
     p(99.0000) = 95470223.360 ns/op
     p(99.9000) = 98435072.000 ns/op
     p(99.9900) = 98435072.000 ns/op
     p(99.9990) = 98435072.000 ns/op
     p(99.9999) = 98435072.000 ns/op
    p(100.0000) = 98435072.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_site_1k

# Run progress: 68.06% complete, ETA 00:22:49
# Fork: 1 of 1
# Warmup Iteration   1: n = 78, mean = 12809452 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5718016, 10362880, 21571174, 25532826, 63700992, 63700992, 63700992, 63700992 ns/op
Iteration   1: n = 159, mean = 6307634 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5537792, 5627904, 8650752, 11976704, 14893056, 15187968, 15187968, 15187968 ns/op
Iteration   2: n = 168, mean = 5966409 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5545984, 5648384, 6087475, 7837696, 12033229, 14237696, 14237696, 14237696 ns/op
Iteration   3: n = 183, mean = 5474718 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5152768, 5562368, 5619712, 5922816, 6908805, 8257536, 8257536, 8257536 ns/op
Iteration   4: n = 190, mean = 5281727 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5177344, 5214208, 5332173, 5718016, 7052001, 7618560, 7618560, 7618560 ns/op
Iteration   5: n = 189, mean = 5288608 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5185536, 5218304, 5365760, 5517312, 6785434, 9977856, 9977856, 9977856 ns/op
Iteration   6: n = 188, mean = 5321488 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5160960, 5206016, 5351014, 5668864, 9528771, 10534912, 10534912, 10534912 ns/op
Iteration   7: n = 192, mean = 5230165 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5144576, 5177344, 5346918, 5459149, 6485606, 7323648, 7323648, 7323648 ns/op
Iteration   8: n = 191, mean = 5253774 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5120000, 5169152, 5377229, 5731123, 6671237, 9437184, 9437184, 9437184 ns/op
Iteration   9: n = 190, mean = 5263705 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5128192, 5177344, 5355930, 5542707, 7922729, 9093120, 9093120, 9093120 ns/op
Iteration  10: n = 191, mean = 5243009 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5144576, 5177344, 5283840, 5446042, 7095255, 9273344, 9273344, 9273344 ns/op


Result "deserialization_site_1k":
  N = 1841
  mean = 5442607.279 ±(99.9%) 62010.081 ns/op

  Histogram, ns/op:
    [       0.000,  1250000.000) = 0 
    [ 1250000.000,  2500000.000) = 0 
    [ 2500000.000,  3750000.000) = 0 
    [ 3750000.000,  5000000.000) = 0 
    [ 5000000.000,  6250000.000) = 1786 
    [ 6250000.000,  7500000.000) = 21 
    [ 7500000.000,  8750000.000) = 7 
    [ 8750000.000, 10000000.000) = 7 
    [10000000.000, 11250000.000) = 10 
    [11250000.000, 12500000.000) = 4 
    [12500000.000, 13750000.000) = 3 
    [13750000.000, 15000000.000) = 2 
    [15000000.000, 16250000.000) = 1 
    [16250000.000, 17500000.000) = 0 
    [17500000.000, 18750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 5120000.000 ns/op
     p(50.0000) = 5210112.000 ns/op
     p(90.0000) = 5718016.000 ns/op
     p(95.0000) = 5905612.800 ns/op
     p(99.0000) = 10212474.880 ns/op
     p(99.9000) = 14774108.160 ns/op
     p(99.9900) = 15187968.000 ns/op
     p(99.9990) = 15187968.000 ns/op
     p(99.9999) = 15187968.000 ns/op
    p(100.0000) = 15187968.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_site_2k

# Run progress: 68.33% complete, ETA 00:22:37
# Fork: 1 of 1
# Warmup Iteration   1: n = 56, mean = 18019474 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12730368, 16809984, 24464589, 29958144, 79822848, 79822848, 79822848, 79822848 ns/op
Iteration   1: n = 101, mean = 9965446 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 8216576, 8585216, 15368192, 20548813, 25513820, 25559040, 25559040, 25559040 ns/op
Iteration   2: n = 118, mean = 8478165 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 8208384, 8323072, 8732672, 8946483, 11153080, 11255808, 11255808, 11255808 ns/op
Iteration   3: n = 124, mean = 8101293 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7569408, 8200192, 8699904, 9252864, 11472896, 11501568, 11501568, 11501568 ns/op
Iteration   4: n = 130, mean = 7702370 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7577600, 7626752, 7847117, 7900774, 10878484, 11960320, 11960320, 11960320 ns/op
Iteration   5: n = 130, mean = 7717053 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7577600, 7618560, 7859405, 8297677, 10006692, 10534912, 10534912, 10534912 ns/op
Iteration   6: n = 130, mean = 7725371 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7561216, 7602176, 7780762, 8427110, 12895027, 14647296, 14647296, 14647296 ns/op
Iteration   7: n = 131, mean = 7686973 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7577600, 7618560, 7682458, 7844659, 11822039, 13352960, 13352960, 13352960 ns/op
Iteration   8: n = 130, mean = 7712390 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7561216, 7610368, 7732429, 8058880, 11305124, 11960320, 11960320, 11960320 ns/op
Iteration   9: n = 129, mean = 7751283 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7544832, 7618560, 7831552, 8478720, 12247040, 12419072, 12419072, 12419072 ns/op
Iteration  10: n = 130, mean = 7718565 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7536640, 7577600, 7911834, 8082227, 11869061, 12107776, 12107776, 12107776 ns/op


Result "deserialization_site_2k":
  N = 1253
  mean = 8007382.525 ±(99.9%) 122934.320 ns/op

  Histogram, ns/op:
    [       0.000,  2500000.000) = 0 
    [ 2500000.000,  5000000.000) = 0 
    [ 5000000.000,  7500000.000) = 0 
    [ 7500000.000, 10000000.000) = 1223 
    [10000000.000, 12500000.000) = 13 
    [12500000.000, 15000000.000) = 6 
    [15000000.000, 17500000.000) = 3 
    [17500000.000, 20000000.000) = 3 
    [20000000.000, 22500000.000) = 3 
    [22500000.000, 25000000.000) = 1 
    [25000000.000, 27500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 7536640.000 ns/op
     p(50.0000) = 7626752.000 ns/op
     p(90.0000) = 8585216.000 ns/op
     p(95.0000) = 8798208.000 ns/op
     p(99.0000) = 14505738.240 ns/op
     p(99.9000) = 24984748.032 ns/op
     p(99.9900) = 25559040.000 ns/op
     p(99.9990) = 25559040.000 ns/op
     p(99.9999) = 25559040.000 ns/op
    p(100.0000) = 25559040.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_site_4k

# Run progress: 68.61% complete, ETA 00:22:25
# Fork: 1 of 1
# Warmup Iteration   1: n = 32, mean = 31490048 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21856256, 29360128, 38227149, 63474893, 90439680, 90439680, 90439680, 90439680 ns/op
Iteration   1: n = 86, mean = 11754948 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 10010624, 10346496, 14761984, 24335155, 28016640, 28016640, 28016640, 28016640 ns/op
Iteration   2: n = 99, mean = 10124319 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9863168, 9928704, 10469376, 11370496, 13893632, 13893632, 13893632, 13893632 ns/op
Iteration   3: n = 103, mean = 9719689 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9043968, 9912320, 10217062, 10649600, 17475830, 17694720, 17694720, 17694720 ns/op
Iteration   4: n = 109, mean = 9235616 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9043968, 9109504, 9371648, 9928704, 14080410, 14434304, 14434304, 14434304 ns/op
Iteration   5: n = 109, mean = 9236818 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9043968, 9093120, 9404416, 10190848, 12032410, 12189696, 12189696, 12189696 ns/op
Iteration   6: n = 107, mean = 9348220 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9027584, 9093120, 9705882, 10092544, 17971282, 18382848, 18382848, 18382848 ns/op
Iteration   7: n = 108, mean = 9281081 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9043968, 9093120, 9815654, 10210509, 14341407, 14729216, 14729216, 14729216 ns/op
Iteration   8: n = 109, mean = 9212919 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9027584, 9093120, 9388032, 9994240, 13587251, 13910016, 13910016, 13910016 ns/op
Iteration   9: n = 108, mean = 9310056 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9043968, 9093120, 9617408, 10075341, 18454118, 19169280, 19169280, 19169280 ns/op
Iteration  10: n = 108, mean = 9263938 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9027584, 9076736, 9884467, 10117939, 14584218, 14974976, 14974976, 14974976 ns/op


Result "deserialization_site_4k":
  N = 1046
  mean = 9599113.055 ±(99.9%) 154866.460 ns/op

  Histogram, ns/op:
    [       0.000,  2500000.000) = 0 
    [ 2500000.000,  5000000.000) = 0 
    [ 5000000.000,  7500000.000) = 0 
    [ 7500000.000, 10000000.000) = 865 
    [10000000.000, 12500000.000) = 156 
    [12500000.000, 15000000.000) = 15 
    [15000000.000, 17500000.000) = 1 
    [17500000.000, 20000000.000) = 3 
    [20000000.000, 22500000.000) = 1 
    [22500000.000, 25000000.000) = 1 
    [25000000.000, 27500000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 9027584.000 ns/op
     p(50.0000) = 9109504.000 ns/op
     p(90.0000) = 10207232.000 ns/op
     p(95.0000) = 10627481.600 ns/op
     p(99.0000) = 16155934.720 ns/op
     p(99.9000) = 28012019.712 ns/op
     p(99.9900) = 28016640.000 ns/op
     p(99.9990) = 28016640.000 ns/op
     p(99.9999) = 28016640.000 ns/op
    p(100.0000) = 28016640.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_site_64k

# Run progress: 68.89% complete, ETA 00:22:13
# Fork: 1 of 1
# Warmup Iteration   1: n = 8, mean = 129228800 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 65339392, 92143616, 334495744, 334495744, 334495744, 334495744, 334495744, 334495744 ns/op
Iteration   1: n = 15, mean = 67598199 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 65142784, 65929216, 71879885, 71958528, 71958528, 71958528, 71958528, 71958528 ns/op
Iteration   2: n = 15, mean = 67148186 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 65142784, 67502080, 70962381, 72220672, 72220672, 72220672, 72220672, 72220672 ns/op
Iteration   3: n = 17, mean = 60859814 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51445760, 64815104, 68105011, 68943872, 68943872, 68943872, 68943872, 68943872 ns/op
Iteration   4: n = 20, mean = 52169933 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51183616, 51806208, 53916467, 57865011, 58064896, 58064896, 58064896, 58064896 ns/op
Iteration   5: n = 20, mean = 52137165 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51183616, 51347456, 53392179, 61692314, 62128128, 62128128, 62128128, 62128128 ns/op
Iteration   6: n = 20, mean = 52009370 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51249152, 51380224, 53051392, 60184986, 60555264, 60555264, 60555264, 60555264 ns/op
Iteration   7: n = 20, mean = 52094566 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51183616, 51445760, 53936128, 58549862, 58785792, 58785792, 58785792, 58785792 ns/op
Iteration   8: n = 20, mean = 52176486 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51052544, 51347456, 53824717, 62780211, 63242240, 63242240, 63242240, 63242240 ns/op
Iteration   9: n = 20, mean = 52104397 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51118080, 51445760, 52894106, 61046784, 61472768, 61472768, 61472768, 61472768 ns/op
Iteration  10: n = 20, mean = 51943834 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51118080, 51412992, 53057946, 58503987, 58785792, 58785792, 58785792, 58785792 ns/op


Result "deserialization_site_64k":
  N = 187
  mean = 55339719.872 ±(99.9%) 1584679.651 ns/op

  Histogram, ns/op:
    [50000000.000, 52500000.000) = 127 
    [52500000.000, 55000000.000) = 12 
    [55000000.000, 57500000.000) = 0 
    [57500000.000, 60000000.000) = 3 
    [60000000.000, 62500000.000) = 4 
    [62500000.000, 65000000.000) = 3 
    [65000000.000, 67500000.000) = 22 
    [67500000.000, 70000000.000) = 10 
    [70000000.000, 72500000.000) = 6 
    [72500000.000, 75000000.000) = 0 
    [75000000.000, 77500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 51052544.000 ns/op
     p(50.0000) = 51707904.000 ns/op
     p(90.0000) = 66060288.000 ns/op
     p(95.0000) = 68524441.600 ns/op
     p(99.0000) = 71989985.280 ns/op
     p(99.9000) = 72220672.000 ns/op
     p(99.9900) = 72220672.000 ns/op
     p(99.9990) = 72220672.000 ns/op
     p(99.9999) = 72220672.000 ns/op
    p(100.0000) = 72220672.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.deserialization_site_8k

# Run progress: 69.17% complete, ETA 00:22:01
# Fork: 1 of 1
# Warmup Iteration   1: n = 26, mean = 38653007 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 13352960, 36896768, 64919962, 93218406, 106430464, 106430464, 106430464, 106430464 ns/op
Iteration   1: n = 74, mean = 13668020 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12943360, 13180928, 14901248, 17833984, 19333120, 19333120, 19333120, 19333120 ns/op
Iteration   2: n = 76, mean = 13319330 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12877824, 13000704, 13538099, 14208205, 20086784, 20086784, 20086784, 20086784 ns/op
Iteration   3: n = 79, mean = 12680179 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11206656, 12976128, 13844480, 14123008, 18874368, 18874368, 18874368, 18874368 ns/op
Iteration   4: n = 87, mean = 11557123 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11239424, 11337728, 12137267, 12550144, 18153472, 18153472, 18153472, 18153472 ns/op
Iteration   5: n = 88, mean = 11474199 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11206656, 11304960, 11673600, 12079923, 18546688, 18546688, 18546688, 18546688 ns/op
Iteration   6: n = 88, mean = 11467124 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11223040, 11304960, 11783373, 12118426, 17825792, 17825792, 17825792, 17825792 ns/op
Iteration   7: n = 87, mean = 11508348 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11223040, 11321344, 11983258, 12428902, 17530880, 17530880, 17530880, 17530880 ns/op
Iteration   8: n = 87, mean = 11500250 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11272192, 11337728, 11685069, 12396134, 16809984, 16809984, 16809984, 16809984 ns/op
Iteration   9: n = 87, mean = 11507783 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11255808, 11337728, 11671962, 12196250, 17367040, 17367040, 17367040, 17367040 ns/op
Iteration  10: n = 88, mean = 11435101 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11239424, 11321344, 11524506, 12012749, 16203776, 16203776, 16203776, 16203776 ns/op


Result "deserialization_site_8k":
  N = 841
  mean = 11960709.631 ±(99.9%) 135393.955 ns/op

  Histogram, ns/op:
    [11000000.000, 12000000.000) = 604 
    [12000000.000, 13000000.000) = 83 
    [13000000.000, 14000000.000) = 128 
    [14000000.000, 15000000.000) = 7 
    [15000000.000, 16000000.000) = 3 
    [16000000.000, 17000000.000) = 4 
    [17000000.000, 18000000.000) = 5 
    [18000000.000, 19000000.000) = 5 
    [19000000.000, 20000000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 11206656.000 ns/op
     p(50.0000) = 11354112.000 ns/op
     p(90.0000) = 13336576.000 ns/op
     p(95.0000) = 13631488.000 ns/op
     p(99.0000) = 17756979.200 ns/op
     p(99.9000) = 20086784.000 ns/op
     p(99.9900) = 20086784.000 ns/op
     p(99.9990) = 20086784.000 ns/op
     p(99.9999) = 20086784.000 ns/op
    p(100.0000) = 20086784.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_events_1k

# Run progress: 69.44% complete, ETA 00:21:49
# Fork: 1 of 1
# Warmup Iteration   1: n = 272, mean = 3670249 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1886208, 2113536, 7337574, 7810253, 12154962, 19529728, 19529728, 19529728 ns/op
Iteration   1: n = 486, mean = 2059125 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1880064, 1898496, 2270413, 2850202, 5327995, 5816320, 5816320, 5816320 ns/op
Iteration   2: n = 517, mean = 1933451 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1875968, 1894400, 1938227, 1991680, 2848768, 6561792, 6561792, 6561792 ns/op
Iteration   3: n = 531, mean = 1883489 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1804288, 1882112, 1914880, 1964851, 2552300, 2965504, 2965504, 2965504 ns/op
Iteration   4: n = 538, mean = 1858267 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1804288, 1820672, 1871872, 1960141, 3119555, 3182592, 3182592, 3182592 ns/op
Iteration   5: n = 513, mean = 1949800 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1804288, 1822720, 2148762, 3019981, 3120579, 6184960, 6184960, 6184960 ns/op
Iteration   6: n = 539, mean = 1855347 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1808384, 1820672, 1855488, 1914880, 2691891, 5005312, 5005312, 5005312 ns/op
Iteration   7: n = 536, mean = 1867570 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1808384, 1822720, 1878016, 2023424, 2568806, 7012352, 7012352, 7012352 ns/op
Iteration   8: n = 534, mean = 1873118 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1808384, 1822720, 1888256, 2204672, 2596454, 4407296, 4407296, 4407296 ns/op
Iteration   9: n = 535, mean = 1869525 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1806336, 1824768, 1884160, 2244608, 2649784, 3158016, 3158016, 3158016 ns/op
Iteration  10: n = 528, mean = 1894291 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1806336, 1826816, 1909760, 2264064, 2756772, 10698752, 10698752, 10698752 ns/op


Result "serialization_events_1k":
  N = 5257
  mean = 1902631.347 ±(99.9%) 13577.751 ns/op

  Histogram, ns/op:
    [ 1000000.000,  2000000.000) = 4855 
    [ 2000000.000,  3000000.000) = 340 
    [ 3000000.000,  4000000.000) = 46 
    [ 4000000.000,  5000000.000) = 2 
    [ 5000000.000,  6000000.000) = 10 
    [ 6000000.000,  7000000.000) = 2 
    [ 7000000.000,  8000000.000) = 1 
    [ 8000000.000,  9000000.000) = 0 
    [ 9000000.000, 10000000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 1804288.000 ns/op
     p(50.0000) = 1830912.000 ns/op
     p(90.0000) = 1929216.000 ns/op
     p(95.0000) = 2204057.600 ns/op
     p(99.0000) = 3055616.000 ns/op
     p(99.9000) = 5776162.816 ns/op
     p(99.9900) = 10698752.000 ns/op
     p(99.9990) = 10698752.000 ns/op
     p(99.9999) = 10698752.000 ns/op
    p(100.0000) = 10698752.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_events_2k

# Run progress: 69.72% complete, ETA 00:21:37
# Fork: 1 of 1
# Warmup Iteration   1: n = 161, mean = 6205669 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3358720, 4055040, 12474778, 13128499, 20034355, 20643840, 20643840, 20643840 ns/op
Iteration   1: n = 294, mean = 3401310 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3137536, 3178496, 3670016, 4046848, 7444890, 10240000, 10240000, 10240000 ns/op
Iteration   2: n = 287, mean = 3490277 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3121152, 3223552, 4152525, 4412211, 5783224, 5898240, 5898240, 5898240 ns/op
Iteration   3: n = 277, mean = 3630224 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3006464, 3371008, 4494131, 5187174, 5852692, 9289728, 9289728, 9289728 ns/op
Iteration   4: n = 268, mean = 3742216 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2998272, 3422208, 5309235, 5493965, 5978849, 6455296, 6455296, 6455296 ns/op
Iteration   5: n = 299, mean = 3344172 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2994176, 3215360, 3796992, 4096000, 4988928, 6012928, 6012928, 6012928 ns/op
Iteration   6: n = 282, mean = 3554529 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2994176, 3233792, 4907827, 5373952, 5699011, 5832704, 5832704, 5832704 ns/op
Iteration   7: n = 302, mean = 3313311 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2994176, 3145728, 3885466, 4273766, 5308416, 5439488, 5439488, 5439488 ns/op
Iteration   8: n = 293, mean = 3420230 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2994176, 3198976, 4000154, 4582605, 6030459, 6234112, 6234112, 6234112 ns/op
Iteration   9: n = 295, mean = 3391557 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2990080, 3166208, 4064870, 4404019, 5330371, 5750784, 5750784, 5750784 ns/op
Iteration  10: n = 302, mean = 3312620 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2985984, 3125248, 3878093, 4079002, 5060772, 5406720, 5406720, 5406720 ns/op


Result "serialization_events_2k":
  N = 2899
  mean = 3455030.397 ±(99.9%) 37529.213 ns/op

  Histogram, ns/op:
    [ 2000000.000,  2500000.000) = 0 
    [ 2500000.000,  3000000.000) = 29 
    [ 3000000.000,  3500000.000) = 2017 
    [ 3500000.000,  4000000.000) = 509 
    [ 4000000.000,  4500000.000) = 154 
    [ 4500000.000,  5000000.000) = 59 
    [ 5000000.000,  5500000.000) = 78 
    [ 5500000.000,  6000000.000) = 39 
    [ 6000000.000,  6500000.000) = 6 
    [ 6500000.000,  7000000.000) = 2 
    [ 7000000.000,  7500000.000) = 3 
    [ 7500000.000,  8000000.000) = 0 
    [ 8000000.000,  8500000.000) = 1 
    [ 8500000.000,  9000000.000) = 0 
    [ 9000000.000,  9500000.000) = 1 
    [ 9500000.000, 10000000.000) = 0 
    [10000000.000, 10500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 2985984.000 ns/op
     p(50.0000) = 3203072.000 ns/op
     p(90.0000) = 4116480.000 ns/op
     p(95.0000) = 4898816.000 ns/op
     p(99.0000) = 5693440.000 ns/op
     p(99.9000) = 8161689.600 ns/op
     p(99.9900) = 10240000.000 ns/op
     p(99.9990) = 10240000.000 ns/op
     p(99.9999) = 10240000.000 ns/op
    p(100.0000) = 10240000.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_events_4k

# Run progress: 70.00% complete, ETA 00:21:25
# Fork: 1 of 1
# Warmup Iteration   1: n = 46, mean = 21812090 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7823360, 18776064, 41182822, 55548314, 63635456, 63635456, 63635456, 63635456 ns/op
Iteration   1: n = 131, mean = 7657832 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6807552, 6922240, 7969178, 10525082, 24703140, 25395200, 25395200, 25395200 ns/op
Iteration   2: n = 142, mean = 7058216 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6856704, 6922240, 7318733, 7630848, 11173069, 12124160, 12124160, 12124160 ns/op
Iteration   3: n = 146, mean = 6856255 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6529024, 6643712, 7047578, 7565722, 11947868, 12779520, 12779520, 12779520 ns/op
Iteration   4: n = 150, mean = 6694666 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6520832, 6569984, 7090176, 7557939, 9269576, 9879552, 9879552, 9879552 ns/op
Iteration   5: n = 149, mean = 6730965 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6512640, 6569984, 6971392, 7393280, 13123584, 14893056, 14893056, 14893056 ns/op
Iteration   6: n = 150, mean = 6698435 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6512640, 6561792, 7059046, 7494861, 10310779, 12550144, 12550144, 12550144 ns/op
Iteration   7: n = 149, mean = 6730800 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6520832, 6602752, 7274496, 7467008, 8527872, 9338880, 9338880, 9338880 ns/op
Iteration   8: n = 147, mean = 6802592 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6512640, 6594560, 7358054, 7472742, 12822118, 13254656, 13254656, 13254656 ns/op
Iteration   9: n = 148, mean = 6755632 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6520832, 6598656, 7234355, 7398195, 10132193, 12075008, 12075008, 12075008 ns/op
Iteration  10: n = 149, mean = 6724752 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6529024, 6586368, 7266304, 7413760, 8851456, 9814016, 9814016, 9814016 ns/op


Result "serialization_events_4k":
  N = 1461
  mean = 6860387.877 ±(99.9%) 82864.405 ns/op

  Histogram, ns/op:
    [       0.000,  2500000.000) = 0 
    [ 2500000.000,  5000000.000) = 0 
    [ 5000000.000,  7500000.000) = 1364 
    [ 7500000.000, 10000000.000) = 81 
    [10000000.000, 12500000.000) = 7 
    [12500000.000, 15000000.000) = 5 
    [15000000.000, 17500000.000) = 2 
    [17500000.000, 20000000.000) = 0 
    [20000000.000, 22500000.000) = 0 
    [22500000.000, 25000000.000) = 1 
    [25000000.000, 27500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 6512640.000 ns/op
     p(50.0000) = 6610944.000 ns/op
     p(90.0000) = 7323648.000 ns/op
     p(95.0000) = 7608729.600 ns/op
     p(99.0000) = 10959257.600 ns/op
     p(99.9000) = 24396038.144 ns/op
     p(99.9900) = 25395200.000 ns/op
     p(99.9990) = 25395200.000 ns/op
     p(99.9999) = 25395200.000 ns/op
    p(100.0000) = 25395200.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_events_64k

# Run progress: 70.28% complete, ETA 00:21:13
# Fork: 1 of 1
# Warmup Iteration   1: n = 4, mean = 261947392 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 165150720, 193069056, 496500736, 496500736, 496500736, 496500736, 496500736, 496500736 ns/op
Iteration   1: n = 6, mean = 170175147 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 159907840, 165019648, 197132288, 197132288, 197132288, 197132288, 197132288, 197132288 ns/op
Iteration   2: n = 7, mean = 165600110 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 159907840, 161742848, 183762944, 183762944, 183762944, 183762944, 183762944, 183762944 ns/op
Iteration   3: n = 7, mean = 157810688 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 153354240, 154664960, 168820736, 168820736, 168820736, 168820736, 168820736, 168820736 ns/op
Iteration   4: n = 7, mean = 156837010 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 154927104, 155975680, 160956416, 160956416, 160956416, 160956416, 160956416, 160956416 ns/op
Iteration   5: n = 7, mean = 157623442 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 154140672, 155451392, 165150720, 165150720, 165150720, 165150720, 165150720, 165150720 ns/op
Iteration   6: n = 7, mean = 157773239 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 154927104, 156762112, 164626432, 164626432, 164626432, 164626432, 164626432, 164626432 ns/op
Iteration   7: n = 7, mean = 157810688 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 154402816, 156499968, 167772160, 167772160, 167772160, 167772160, 167772160, 167772160 ns/op
Iteration   8: n = 7, mean = 158035383 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 156237824, 157024256, 162791424, 162791424, 162791424, 162791424, 162791424, 162791424 ns/op
Iteration   9: n = 7, mean = 158859264 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 156237824, 158072832, 165150720, 165150720, 165150720, 165150720, 165150720, 165150720 ns/op
Iteration  10: n = 7, mean = 158522222 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 156499968, 156499968, 165150720, 165150720, 165150720, 165150720, 165150720, 165150720 ns/op


Result "serialization_events_64k":
  N = 69
  mean = 159755872.464 ±(99.9%) 2873917.916 ns/op

  Histogram, ns/op:
    [150000000.000, 155000000.000) = 9 
    [155000000.000, 160000000.000) = 39 
    [160000000.000, 165000000.000) = 10 
    [165000000.000, 170000000.000) = 7 
    [170000000.000, 175000000.000) = 2 
    [175000000.000, 180000000.000) = 0 
    [180000000.000, 185000000.000) = 1 
    [185000000.000, 190000000.000) = 0 
    [190000000.000, 195000000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 153354240.000 ns/op
     p(50.0000) = 157286400.000 ns/op
     p(90.0000) = 167772160.000 ns/op
     p(95.0000) = 171442176.000 ns/op
     p(99.0000) = 197132288.000 ns/op
     p(99.9000) = 197132288.000 ns/op
     p(99.9900) = 197132288.000 ns/op
     p(99.9990) = 197132288.000 ns/op
     p(99.9999) = 197132288.000 ns/op
    p(100.0000) = 197132288.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_events_8k

# Run progress: 70.56% complete, ETA 00:21:02
# Fork: 1 of 1
# Warmup Iteration   1: n = 35, mean = 28818988 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 17498112, 22216704, 66872934, 70909952, 71958528, 71958528, 71958528, 71958528 ns/op
Iteration   1: n = 53, mean = 19001112 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 17498112, 17661952, 21764506, 23710925, 47054848, 47054848, 47054848, 47054848 ns/op
Iteration   2: n = 57, mean = 17797048 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 17498112, 17596416, 18481152, 18769510, 19955712, 19955712, 19955712, 19955712 ns/op
Iteration   3: n = 58, mean = 17482858 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16777216, 17530880, 17947034, 18482790, 23363584, 23363584, 23363584, 23363584 ns/op
Iteration   4: n = 58, mean = 17347266 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16777216, 16924672, 18042061, 19044762, 25460736, 25460736, 25460736, 25460736 ns/op
Iteration   5: n = 58, mean = 17241335 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16760832, 16875520, 18032230, 19613286, 23625728, 23625728, 23625728, 23625728 ns/op
Iteration   6: n = 58, mean = 17270996 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16760832, 16842752, 17793024, 19326566, 26279936, 26279936, 26279936, 26279936 ns/op
Iteration   7: n = 58, mean = 17374667 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16760832, 16875520, 18762957, 20411187, 23953408, 23953408, 23953408, 23953408 ns/op
Iteration   8: n = 59, mean = 17097676 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16728064, 16875520, 17661952, 17760256, 22642688, 22642688, 22642688, 22642688 ns/op
Iteration   9: n = 58, mean = 17474101 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16760832, 16891904, 17950310, 21259878, 26476544, 26476544, 26476544, 26476544 ns/op
Iteration  10: n = 59, mean = 17100453 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16760832, 16875520, 17727488, 17924096, 22577152, 22577152, 22577152, 22577152 ns/op


Result "serialization_events_8k":
  N = 576
  mean = 17503943.111 ±(99.9%) 241579.490 ns/op

  Histogram, ns/op:
    [10000000.000, 12500000.000) = 0 
    [12500000.000, 15000000.000) = 0 
    [15000000.000, 17500000.000) = 374 
    [17500000.000, 20000000.000) = 179 
    [20000000.000, 22500000.000) = 11 
    [22500000.000, 25000000.000) = 7 
    [25000000.000, 27500000.000) = 4 
    [27500000.000, 30000000.000) = 0 
    [30000000.000, 32500000.000) = 0 
    [32500000.000, 35000000.000) = 0 
    [35000000.000, 37500000.000) = 0 
    [37500000.000, 40000000.000) = 0 
    [40000000.000, 42500000.000) = 0 
    [42500000.000, 45000000.000) = 0 
    [45000000.000, 47500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 16728064.000 ns/op
     p(50.0000) = 16941056.000 ns/op
     p(90.0000) = 18248499.200 ns/op
     p(95.0000) = 19501875.200 ns/op
     p(99.0000) = 24678563.840 ns/op
     p(99.9000) = 47054848.000 ns/op
     p(99.9900) = 47054848.000 ns/op
     p(99.9990) = 47054848.000 ns/op
     p(99.9999) = 47054848.000 ns/op
    p(100.0000) = 47054848.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_site_1k

# Run progress: 70.83% complete, ETA 00:20:50
# Fork: 1 of 1
# Warmup Iteration   1: n = 526, mean = 1900521 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1380352, 1521664, 2922906, 3388006, 6648054, 12288000, 12288000, 12288000 ns/op
Iteration   1: n = 689, mean = 1461645 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1267712, 1323008, 1441792, 1971200, 4993843, 8069120, 8069120, 8069120 ns/op
Iteration   2: n = 731, mean = 1368005 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1263616, 1323008, 1415168, 1447526, 2488074, 3686400, 3686400, 3686400 ns/op
Iteration   3: n = 752, mean = 1329013 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1236992, 1310720, 1363354, 1461043, 2377114, 5300224, 5300224, 5300224 ns/op
Iteration   4: n = 789, mean = 1267920 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1241088, 1251328, 1280000, 1302528, 1427661, 5357568, 5357568, 5357568 ns/op
Iteration   5: n = 786, mean = 1271542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1239040, 1251328, 1284096, 1305907, 2168177, 2367488, 2367488, 2367488 ns/op
Iteration   6: n = 784, mean = 1275397 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1239040, 1253376, 1290240, 1307648, 2139341, 2359296, 2359296, 2359296 ns/op
Iteration   7: n = 785, mean = 1273582 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1239040, 1253376, 1286144, 1310106, 1971323, 2236416, 2236416, 2236416 ns/op
Iteration   8: n = 785, mean = 1272938 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1241088, 1249280, 1284096, 1314816, 2197668, 2424832, 2424832, 2424832 ns/op
Iteration   9: n = 788, mean = 1269409 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1239040, 1251328, 1286144, 1299558, 1966469, 2469888, 2469888, 2469888 ns/op
Iteration  10: n = 785, mean = 1274026 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1241088, 1253376, 1284915, 1321779, 1701396, 5849088, 5849088, 5849088 ns/op


Result "serialization_site_1k":
  N = 7674
  mean = 1303838.624 ±(99.9%) 8996.990 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 7482 
    [1500000.000, 2000000.000) = 76 
    [2000000.000, 2500000.000) = 78 
    [2500000.000, 3000000.000) = 19 
    [3000000.000, 3500000.000) = 2 
    [3500000.000, 4000000.000) = 3 
    [4000000.000, 4500000.000) = 4 
    [4500000.000, 5000000.000) = 1 
    [5000000.000, 5500000.000) = 3 
    [5500000.000, 6000000.000) = 3 
    [6000000.000, 6500000.000) = 0 
    [6500000.000, 7000000.000) = 1 
    [7000000.000, 7500000.000) = 1 
    [7500000.000, 8000000.000) = 0 
    [8000000.000, 8500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 1236992.000 ns/op
     p(50.0000) = 1255424.000 ns/op
     p(90.0000) = 1339392.000 ns/op
     p(95.0000) = 1415168.000 ns/op
     p(99.0000) = 2290688.000 ns/op
     p(99.9000) = 5318860.800 ns/op
     p(99.9900) = 8069120.000 ns/op
     p(99.9990) = 8069120.000 ns/op
     p(99.9999) = 8069120.000 ns/op
    p(100.0000) = 8069120.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_site_2k

# Run progress: 71.11% complete, ETA 00:20:38
# Fork: 1 of 1
# Warmup Iteration   1: n = 235, mean = 4249818 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2260992, 4415488, 6312755, 7328563, 13632143, 15925248, 15925248, 15925248 ns/op
Iteration   1: n = 412, mean = 2427884 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2256896, 2330624, 2482176, 2535424, 6638305, 8617984, 8617984, 8617984 ns/op
Iteration   2: n = 427, mean = 2343238 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2248704, 2269184, 2342912, 2550989, 4176445, 4358144, 4358144, 4358144 ns/op
Iteration   3: n = 444, mean = 2250706 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2134016, 2256896, 2306048, 2347008, 3171328, 3842048, 3842048, 3842048 ns/op
Iteration   4: n = 458, mean = 2184402 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2134016, 2154496, 2203648, 2277786, 2994053, 3796992, 3796992, 3796992 ns/op
Iteration   5: n = 454, mean = 2203125 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2138112, 2154496, 2236416, 2383872, 3531776, 3887104, 3887104, 3887104 ns/op
Iteration   6: n = 456, mean = 2190974 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2129920, 2154496, 2237645, 2269798, 3181855, 5160960, 5160960, 5160960 ns/op
Iteration   7: n = 452, mean = 2212212 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2134016, 2156544, 2285568, 2472755, 3459523, 4554752, 4554752, 4554752 ns/op
Iteration   8: n = 455, mean = 2196563 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2134016, 2154496, 2215936, 2290483, 3531407, 5062656, 5062656, 5062656 ns/op
Iteration   9: n = 456, mean = 2195124 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2134016, 2158592, 2211840, 2293760, 3063276, 4800512, 4800512, 4800512 ns/op
Iteration  10: n = 456, mean = 2191405 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2134016, 2158592, 2215936, 2316698, 3055043, 3788800, 3788800, 3788800 ns/op


Result "serialization_site_2k":
  N = 4470
  mean = 2237032.691 ±(99.9%) 13559.538 ns/op

  Histogram, ns/op:
    [2000000.000, 2500000.000) = 4318 
    [2500000.000, 3000000.000) = 75 
    [3000000.000, 3500000.000) = 36 
    [3500000.000, 4000000.000) = 19 
    [4000000.000, 4500000.000) = 9 
    [4500000.000, 5000000.000) = 3 
    [5000000.000, 5500000.000) = 4 
    [5500000.000, 6000000.000) = 1 
    [6000000.000, 6500000.000) = 1 
    [6500000.000, 7000000.000) = 3 
    [7000000.000, 7500000.000) = 0 
    [7500000.000, 8000000.000) = 0 
    [8000000.000, 8500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 2129920.000 ns/op
     p(50.0000) = 2166784.000 ns/op
     p(90.0000) = 2326528.000 ns/op
     p(95.0000) = 2424832.000 ns/op
     p(99.0000) = 3446579.200 ns/op
     p(99.9000) = 6409240.576 ns/op
     p(99.9900) = 8617984.000 ns/op
     p(99.9990) = 8617984.000 ns/op
     p(99.9999) = 8617984.000 ns/op
    p(100.0000) = 8617984.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_site_4k

# Run progress: 71.39% complete, ETA 00:20:26
# Fork: 1 of 1
# Warmup Iteration   1: n = 164, mean = 6109334 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3858432, 3956736, 12812288, 15450112, 28159181, 31162368, 31162368, 31162368 ns/op
Iteration   1: n = 242, mean = 4143104 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3854336, 3915776, 4127539, 4182016, 9528115, 23625728, 23625728, 23625728 ns/op
Iteration   2: n = 249, mean = 4025858 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3866624, 3915776, 4108288, 4190208, 7987200, 9666560, 9666560, 9666560 ns/op
Iteration   3: n = 258, mean = 3875340 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3670016, 3887104, 3969434, 4083712, 6227968, 6971392, 6971392, 6971392 ns/op
Iteration   4: n = 264, mean = 3789933 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3665920, 3710976, 3835904, 4130816, 6567936, 7135232, 7135232, 7135232 ns/op
Iteration   5: n = 265, mean = 3771767 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3657728, 3698688, 3825664, 4017357, 5417861, 9256960, 9256960, 9256960 ns/op
Iteration   6: n = 265, mean = 3805818 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3657728, 3694592, 3764224, 4087398, 6076826, 17825792, 17825792, 17825792 ns/op
Iteration   7: n = 268, mean = 3753877 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3657728, 3690496, 3772826, 3927450, 5424333, 6537216, 6537216, 6537216 ns/op
Iteration   8: n = 266, mean = 3770229 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3653632, 3694592, 3766682, 4013261, 5428838, 8290304, 8290304, 8290304 ns/op
Iteration   9: n = 267, mean = 3754667 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3661824, 3698688, 3761766, 3921510, 5203886, 6651904, 6651904, 6651904 ns/op
Iteration  10: n = 266, mean = 3765363 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3657728, 3696640, 3826893, 4069990, 5592023, 7659520, 7659520, 7659520 ns/op


Result "serialization_site_4k":
  N = 2610
  mean = 3841575.626 ±(99.9%) 41138.577 ns/op

  Histogram, ns/op:
    [       0.000,  2500000.000) = 0 
    [ 2500000.000,  5000000.000) = 2570 
    [ 5000000.000,  7500000.000) = 27 
    [ 7500000.000, 10000000.000) = 11 
    [10000000.000, 12500000.000) = 0 
    [12500000.000, 15000000.000) = 0 
    [15000000.000, 17500000.000) = 0 
    [17500000.000, 20000000.000) = 1 
    [20000000.000, 22500000.000) = 0 
    [22500000.000, 25000000.000) = 1 
    [25000000.000, 27500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 3653632.000 ns/op
     p(50.0000) = 3710976.000 ns/op
     p(90.0000) = 3969024.000 ns/op
     p(95.0000) = 4124672.000 ns/op
     p(99.0000) = 6185287.680 ns/op
     p(99.9000) = 12840501.248 ns/op
     p(99.9900) = 23625728.000 ns/op
     p(99.9990) = 23625728.000 ns/op
     p(99.9999) = 23625728.000 ns/op
    p(100.0000) = 23625728.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_site_64k

# Run progress: 71.67% complete, ETA 00:20:14
# Fork: 1 of 1
# Warmup Iteration   1: n = 6, mean = 173320875 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 74186752, 183369728, 230686720, 230686720, 230686720, 230686720, 230686720, 230686720 ns/op
Iteration   1: n = 14, mean = 72838583 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 66060288, 68419584, 101515264, 130285568, 130285568, 130285568, 130285568, 130285568 ns/op
Iteration   2: n = 15, mean = 67982677 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 66191360, 66453504, 73505178, 76021760, 76021760, 76021760, 76021760, 76021760 ns/op
Iteration   3: n = 16, mean = 65671168 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 62717952, 65241088, 72063386, 74448896, 74448896, 74448896, 74448896, 74448896 ns/op
Iteration   4: n = 16, mean = 63442944 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 62783488, 62914560, 65227981, 66191360, 66191360, 66191360, 66191360, 66191360 ns/op
Iteration   5: n = 16, mean = 64049152 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 62455808, 63504384, 68091904, 70385664, 70385664, 70385664, 70385664, 70385664 ns/op
Iteration   6: n = 16, mean = 63688704 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 62390272, 62619648, 67338240, 70778880, 70778880, 70778880, 70778880, 70778880 ns/op
Iteration   7: n = 16, mean = 63709184 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 62455808, 62750720, 68065690, 73662464, 73662464, 73662464, 73662464, 73662464 ns/op
Iteration   8: n = 16, mean = 64655360 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 62390272, 62816256, 73885286, 82051072, 82051072, 82051072, 82051072, 82051072 ns/op
Iteration   9: n = 16, mean = 63348736 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 62390272, 62914560, 65385267, 68550656, 68550656, 68550656, 68550656, 68550656 ns/op
Iteration  10: n = 16, mean = 63389696 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 62521344, 63438848, 64487424, 64946176, 64946176, 64946176, 64946176, 64946176 ns/op


Result "serialization_site_64k":
  N = 157
  mean = 65164072.764 ±(99.9%) 1626413.779 ns/op

  Histogram, ns/op:
    [ 60000000.000,  65000000.000) = 109 
    [ 65000000.000,  70000000.000) = 33 
    [ 70000000.000,  75000000.000) = 12 
    [ 75000000.000,  80000000.000) = 1 
    [ 80000000.000,  85000000.000) = 1 
    [ 85000000.000,  90000000.000) = 0 
    [ 90000000.000,  95000000.000) = 0 
    [ 95000000.000, 100000000.000) = 0 
    [100000000.000, 105000000.000) = 0 
    [105000000.000, 110000000.000) = 0 
    [110000000.000, 115000000.000) = 0 
    [115000000.000, 120000000.000) = 0 
    [120000000.000, 125000000.000) = 0 
    [125000000.000, 130000000.000) = 0 
    [130000000.000, 135000000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 62390272.000 ns/op
     p(50.0000) = 63504384.000 ns/op
     p(90.0000) = 69651660.800 ns/op
     p(95.0000) = 71119667.200 ns/op
     p(99.0000) = 102309560.320 ns/op
     p(99.9000) = 130285568.000 ns/op
     p(99.9900) = 130285568.000 ns/op
     p(99.9990) = 130285568.000 ns/op
     p(99.9999) = 130285568.000 ns/op
    p(100.0000) = 130285568.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaSerializationBenchmark.serialization_site_8k

# Run progress: 71.94% complete, ETA 00:20:02
# Fork: 1 of 1
# Warmup Iteration   1: n = 80, mean = 12535296 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 8200192, 8486912, 26483098, 28177203, 41680896, 41680896, 41680896, 41680896 ns/op
Iteration   1: n = 112, mean = 8994304 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 8183808, 8265728, 8596685, 11748147, 39013581, 40632320, 40632320, 40632320 ns/op
Iteration   2: n = 118, mean = 8494687 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 8208384, 8314880, 8636006, 8770355, 13498286, 13893632, 13893632, 13893632 ns/op
Iteration   3: n = 122, mean = 8193276 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7831552, 8232960, 8340275, 8742502, 11861852, 12566528, 12566528, 12566528 ns/op
Iteration   4: n = 126, mean = 7972962 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7823360, 7880704, 8012595, 8600781, 11086889, 11763712, 11763712, 11763712 ns/op
Iteration   5: n = 125, mean = 8035828 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7831552, 7897088, 8185446, 8837530, 12181504, 12500992, 12500992, 12500992 ns/op
Iteration   6: n = 124, mean = 8112723 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7831552, 7991296, 8351744, 8679424, 13312000, 14663680, 14663680, 14663680 ns/op
Iteration   7: n = 126, mean = 7978423 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7815168, 7872512, 8117453, 8579482, 11842519, 12713984, 12713984, 12713984 ns/op
Iteration   8: n = 125, mean = 8010662 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7815168, 7872512, 8095334, 8250163, 16201810, 18808832, 18808832, 18808832 ns/op
Iteration   9: n = 126, mean = 7954302 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7798784, 7864320, 8052736, 8262451, 10973020, 11141120, 11141120, 11141120 ns/op
Iteration  10: n = 126, mean = 7967240 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7806976, 7872512, 8180531, 8652390, 10636984, 11304960, 11304960, 11304960 ns/op


Result "serialization_site_8k":
  N = 1230
  mean = 8160237.685 ±(99.9%) 120429.819 ns/op

  Histogram, ns/op:
    [       0.000,  5000000.000) = 0 
    [ 5000000.000, 10000000.000) = 1212 
    [10000000.000, 15000000.000) = 14 
    [15000000.000, 20000000.000) = 2 
    [20000000.000, 25000000.000) = 0 
    [25000000.000, 30000000.000) = 1 
    [30000000.000, 35000000.000) = 0 
    [35000000.000, 40000000.000) = 0 
    [40000000.000, 45000000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 7798784.000 ns/op
     p(50.0000) = 7905280.000 ns/op
     p(90.0000) = 8486912.000 ns/op
     p(95.0000) = 8667136.000 ns/op
     p(99.0000) = 11797626.880 ns/op
     p(99.9000) = 37755944.960 ns/op
     p(99.9900) = 40632320.000 ns/op
     p(99.9990) = 40632320.000 ns/op
     p(99.9999) = 40632320.000 ns/op
    p(100.0000) = 40632320.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_events_1k

# Run progress: 72.22% complete, ETA 00:19:50
# Fork: 1 of 1
# Warmup Iteration   1: n = 2324, mean = 429335 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 273920, 285696, 455936, 1136640, 2674688, 8400691, 24969216, 24969216 ns/op
Iteration   1: n = 3356, mean = 298074 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 272896, 285696, 298496, 357376, 520269, 1249288, 4743168, 4743168 ns/op
Iteration   2: n = 3441, mean = 290341 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 275968, 284672, 293888, 305152, 518441, 1218261, 4341760, 4341760 ns/op
Iteration   3: n = 3498, mean = 285593 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 275968, 279552, 287795, 299008, 386688, 1069060, 3346432, 3346432 ns/op
Iteration   4: n = 3481, mean = 286993 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 275968, 280576, 289792, 301056, 385116, 1166373, 1280000, 1280000 ns/op
Iteration   5: n = 3453, mean = 289309 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 275968, 280576, 292352, 308224, 500736, 1072058, 1116160, 1116160 ns/op
Iteration   6: n = 3435, mean = 290875 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 275456, 280576, 293888, 306688, 514560, 1121567, 1437696, 1437696 ns/op
Iteration   7: n = 3450, mean = 289740 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 275456, 280064, 289280, 302592, 502252, 1091865, 1208320, 1208320 ns/op
Iteration   8: n = 3420, mean = 292159 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 275968, 284672, 295424, 306688, 499768, 1073693, 4210688, 4210688 ns/op
Iteration   9: n = 3434, mean = 291266 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 275456, 280064, 291328, 307200, 494541, 1118290, 4120576, 4120576 ns/op
Iteration  10: n = 3456, mean = 289092 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 275968, 280576, 292864, 307200, 475868, 1039685, 1468416, 1468416 ns/op


Result "deserialization_events_1k":
  N = 34424
  mean = 290311.005 ±(99.9%) 1247.666 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 34088 
    [ 500000.000, 1000000.000) = 262 
    [1000000.000, 1500000.000) = 67 
    [1500000.000, 2000000.000) = 2 
    [2000000.000, 2500000.000) = 0 
    [2500000.000, 3000000.000) = 0 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 3 

  Percentiles, ns/op:
      p(0.0000) = 272896.000 ns/op
     p(50.0000) = 280576.000 ns/op
     p(90.0000) = 293376.000 ns/op
     p(95.0000) = 305664.000 ns/op
     p(99.0000) = 498688.000 ns/op
     p(99.9000) = 1092761.600 ns/op
     p(99.9900) = 4170813.440 ns/op
     p(99.9990) = 4743168.000 ns/op
     p(99.9999) = 4743168.000 ns/op
    p(100.0000) = 4743168.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_events_2k

# Run progress: 72.50% complete, ETA 00:19:38
# Fork: 1 of 1
# Warmup Iteration   1: n = 1052, mean = 948623 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 563200, 601088, 1640448, 1910272, 5645189, 26390921, 27295744, 27295744 ns/op
Iteration   1: n = 1689, mean = 593179 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 552960, 566272, 617472, 702464, 1075610, 2538476, 4063232, 4063232 ns/op
Iteration   2: n = 1741, mean = 574086 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 558080, 565248, 582656, 591872, 757391, 1482338, 1681408, 1681408 ns/op
Iteration   3: n = 1741, mean = 574002 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 557056, 565248, 583680, 592794, 744079, 1424278, 1509376, 1509376 ns/op
Iteration   4: n = 1713, mean = 583301 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 558080, 565248, 586752, 598323, 1083105, 1369530, 1378304, 1378304 ns/op
Iteration   5: n = 1724, mean = 579807 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 558080, 565248, 584192, 596736, 1031424, 1922560, 3125248, 3125248 ns/op
Iteration   6: n = 1717, mean = 582230 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 558080, 565248, 589824, 607334, 1077658, 1472659, 1613824, 1613824 ns/op
Iteration   7: n = 1716, mean = 582236 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 558080, 565248, 589824, 605338, 1087488, 1591552, 2142208, 2142208 ns/op
Iteration   8: n = 1726, mean = 579089 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 558080, 565248, 584704, 594944, 1054894, 1415545, 1427456, 1427456 ns/op
Iteration   9: n = 1714, mean = 583108 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 558080, 565248, 585728, 596224, 1169101, 3611034, 8765440, 8765440 ns/op
Iteration  10: n = 1719, mean = 581754 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 558080, 566272, 588800, 602112, 1195622, 1489306, 1695744, 1695744 ns/op


Result "deserialization_events_2k":
  N = 17200
  mean = 581237.165 ±(99.9%) 2636.162 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 16994 
    [1000000.000, 1500000.000) = 196 
    [1500000.000, 2000000.000) = 6 
    [2000000.000, 2500000.000) = 1 
    [2500000.000, 3000000.000) = 0 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 1 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 0 
    [6500000.000, 7000000.000) = 0 
    [7000000.000, 7500000.000) = 0 
    [7500000.000, 8000000.000) = 0 
    [8000000.000, 8500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 552960.000 ns/op
     p(50.0000) = 565248.000 ns/op
     p(90.0000) = 586752.000 ns/op
     p(95.0000) = 603136.000 ns/op
     p(99.0000) = 1054720.000 ns/op
     p(99.9000) = 1412708.352 ns/op
     p(99.9900) = 5379380.019 ns/op
     p(99.9990) = 8765440.000 ns/op
     p(99.9999) = 8765440.000 ns/op
    p(100.0000) = 8765440.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_events_4k

# Run progress: 72.78% complete, ETA 00:19:26
# Fork: 1 of 1
# Warmup Iteration   1: n = 556, mean = 1795297 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1062912, 1217536, 2806989, 3528499, 8981545, 39976960, 39976960, 39976960 ns/op
Iteration   1: n = 895, mean = 1118663 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1052672, 1073152, 1193984, 1337754, 1999503, 5971968, 5971968, 5971968 ns/op
Iteration   2: n = 917, mean = 1101040 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1050624, 1067008, 1100186, 1130496, 2065695, 3166208, 3166208, 3166208 ns/op
Iteration   3: n = 921, mean = 1085936 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1050624, 1067008, 1093632, 1113907, 1849139, 2125824, 2125824, 2125824 ns/op
Iteration   4: n = 912, mean = 1095956 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1052672, 1069056, 1107968, 1144832, 1935729, 2025472, 2025472, 2025472 ns/op
Iteration   5: n = 913, mean = 1095016 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1052672, 1069056, 1107968, 1143398, 1912259, 2502656, 2502656, 2502656 ns/op
Iteration   6: n = 904, mean = 1106029 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1056768, 1069056, 1097728, 1135616, 1994650, 6561792, 6561792, 6561792 ns/op
Iteration   7: n = 905, mean = 1104078 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1054720, 1069056, 1105920, 1167565, 1887764, 6201344, 6201344, 6201344 ns/op
Iteration   8: n = 905, mean = 1104619 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1054720, 1069056, 1107968, 1214054, 1900298, 3055616, 3055616, 3055616 ns/op
Iteration   9: n = 901, mean = 1109809 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1054720, 1071104, 1107558, 1213030, 1970094, 4030464, 4030464, 4030464 ns/op
Iteration  10: n = 910, mean = 1098423 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1052672, 1069056, 1101824, 1129370, 1936056, 3358720, 3358720, 3358720 ns/op


Result "deserialization_events_4k":
  N = 9083
  mean = 1101892.545 ±(99.9%) 5956.408 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 8846 
    [1500000.000, 2000000.000) = 184 
    [2000000.000, 2500000.000) = 42 
    [2500000.000, 3000000.000) = 3 
    [3000000.000, 3500000.000) = 4 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 1 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 1 
    [6000000.000, 6500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 1050624.000 ns/op
     p(50.0000) = 1069056.000 ns/op
     p(90.0000) = 1105920.000 ns/op
     p(95.0000) = 1171456.000 ns/op
     p(99.0000) = 1953792.000 ns/op
     p(99.9000) = 2649423.872 ns/op
     p(99.9900) = 6561792.000 ns/op
     p(99.9990) = 6561792.000 ns/op
     p(99.9999) = 6561792.000 ns/op
    p(100.0000) = 6561792.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_events_64k

# Run progress: 73.06% complete, ETA 00:19:14
# Fork: 1 of 1
# Warmup Iteration   1: n = 33, mean = 30473247 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 22609920, 24838144, 37932237, 75930010, 147587072, 147587072, 147587072, 147587072 ns/op
Iteration   1: n = 43, mean = 23407783 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 22380544, 22609920, 25729434, 29071770, 33947648, 33947648, 33947648, 33947648 ns/op
Iteration   2: n = 43, mean = 23384921 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 22020096, 22282240, 25604915, 31581798, 34734080, 34734080, 34734080, 34734080 ns/op
Iteration   3: n = 45, mean = 22555307 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21921792, 22085632, 23199744, 26574848, 30081024, 30081024, 30081024, 30081024 ns/op
Iteration   4: n = 45, mean = 22352145 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21987328, 22085632, 23134208, 23442227, 25657344, 25657344, 25657344, 25657344 ns/op
Iteration   5: n = 45, mean = 22657252 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21954560, 22151168, 23134208, 23792845, 35192832, 35192832, 35192832, 35192832 ns/op
Iteration   6: n = 45, mean = 22946338 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 22052864, 22249472, 23396352, 28219802, 34340864, 34340864, 34340864, 34340864 ns/op
Iteration   7: n = 45, mean = 22469382 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21954560, 22151168, 23134208, 23298048, 27426816, 27426816, 27426816, 27426816 ns/op
Iteration   8: n = 45, mean = 22528364 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21987328, 22151168, 23304602, 24035328, 26411008, 26411008, 26411008, 26411008 ns/op
Iteration   9: n = 45, mean = 22653611 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21954560, 22249472, 23107994, 23687987, 30932992, 30932992, 30932992, 30932992 ns/op
Iteration  10: n = 44, mean = 22810252 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21987328, 22282240, 23150592, 23748608, 34275328, 34275328, 34275328, 34275328 ns/op


Result "deserialization_events_64k":
  N = 445
  mean = 22770888.198 ±(99.9%) 270445.098 ns/op

  Histogram, ns/op:
    [20000000.000, 21250000.000) = 0 
    [21250000.000, 22500000.000) = 268 
    [22500000.000, 23750000.000) = 148 
    [23750000.000, 25000000.000) = 10 
    [25000000.000, 26250000.000) = 3 
    [26250000.000, 27500000.000) = 4 
    [27500000.000, 28750000.000) = 1 
    [28750000.000, 30000000.000) = 1 
    [30000000.000, 31250000.000) = 4 
    [31250000.000, 32500000.000) = 1 
    [32500000.000, 33750000.000) = 0 
    [33750000.000, 35000000.000) = 4 
    [35000000.000, 36250000.000) = 1 
    [36250000.000, 37500000.000) = 0 
    [37500000.000, 38750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 21921792.000 ns/op
     p(50.0000) = 22216704.000 ns/op
     p(90.0000) = 23311155.200 ns/op
     p(95.0000) = 24231936.000 ns/op
     p(99.0000) = 34124595.200 ns/op
     p(99.9000) = 35192832.000 ns/op
     p(99.9900) = 35192832.000 ns/op
     p(99.9990) = 35192832.000 ns/op
     p(99.9999) = 35192832.000 ns/op
    p(100.0000) = 35192832.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_events_8k

# Run progress: 73.33% complete, ETA 00:19:02
# Fork: 1 of 1
# Warmup Iteration   1: n = 267, mean = 3740170 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2236416, 2682880, 5980160, 7325286, 16748380, 56688640, 56688640, 56688640 ns/op
Iteration   1: n = 432, mean = 2316051 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2220032, 2252800, 2434662, 2685747, 3206554, 6111232, 6111232, 6111232 ns/op
Iteration   2: n = 439, mean = 2277647 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2199552, 2224128, 2306048, 2359296, 3225190, 7446528, 7446528, 7446528 ns/op
Iteration   3: n = 442, mean = 2262530 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2199552, 2220032, 2252800, 2356838, 3641876, 4874240, 4874240, 4874240 ns/op
Iteration   4: n = 439, mean = 2279597 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2199552, 2224128, 2297856, 2424832, 4099277, 5029888, 5029888, 5029888 ns/op
Iteration   5: n = 439, mean = 2280212 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2199552, 2224128, 2297856, 2699264, 3330048, 4816896, 4816896, 4816896 ns/op
Iteration   6: n = 438, mean = 2281509 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2199552, 2224128, 2310963, 2830541, 3119063, 3883008, 3883008, 3883008 ns/op
Iteration   7: n = 438, mean = 2282099 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2203648, 2224128, 2306048, 2527437, 3025347, 8962048, 8962048, 8962048 ns/op
Iteration   8: n = 441, mean = 2270447 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2199552, 2220032, 2301133, 2550989, 3066429, 4067328, 4067328, 4067328 ns/op
Iteration   9: n = 438, mean = 2284782 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2199552, 2224128, 2301952, 2558976, 3760046, 6922240, 6922240, 6922240 ns/op
Iteration  10: n = 438, mean = 2282510 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2195456, 2224128, 2327347, 2822963, 3051725, 4079616, 4079616, 4079616 ns/op


Result "deserialization_events_8k":
  N = 4384
  mean = 2281664.467 ±(99.9%) 12859.679 ns/op

  Histogram, ns/op:
    [2000000.000, 2500000.000) = 4135 
    [2500000.000, 3000000.000) = 173 
    [3000000.000, 3500000.000) = 44 
    [3500000.000, 4000000.000) = 11 
    [4000000.000, 4500000.000) = 13 
    [4500000.000, 5000000.000) = 3 
    [5000000.000, 5500000.000) = 1 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 1 
    [6500000.000, 7000000.000) = 1 
    [7000000.000, 7500000.000) = 1 
    [7500000.000, 8000000.000) = 0 
    [8000000.000, 8500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 2195456.000 ns/op
     p(50.0000) = 2224128.000 ns/op
     p(90.0000) = 2306048.000 ns/op
     p(95.0000) = 2617344.000 ns/op
     p(99.0000) = 3161088.000 ns/op
     p(99.9000) = 5694914.560 ns/op
     p(99.9900) = 8962048.000 ns/op
     p(99.9990) = 8962048.000 ns/op
     p(99.9999) = 8962048.000 ns/op
    p(100.0000) = 8962048.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_site_1k

# Run progress: 73.61% complete, ETA 00:18:50
# Fork: 1 of 1
# Warmup Iteration   1: n = 1963, mean = 508310 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 221440, 245760, 861798, 1064141, 2840658, 8764195, 18382848, 18382848 ns/op
Iteration   1: n = 4132, mean = 241798 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 221440, 226304, 263168, 360627, 411136, 1203337, 2121728, 2121728 ns/op
Iteration   2: n = 4310, mean = 232188 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 224256, 227072, 233728, 244710, 385203, 973667, 2064384, 2064384 ns/op
Iteration   3: n = 4311, mean = 231788 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 224256, 226816, 233728, 246784, 359690, 879886, 1122304, 1122304 ns/op
Iteration   4: n = 4313, mean = 231672 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 224512, 227072, 234496, 246016, 321178, 948783, 1132544, 1132544 ns/op
Iteration   5: n = 4303, mean = 232197 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 224768, 227072, 233984, 241357, 285676, 1034207, 3952640, 3952640 ns/op
Iteration   6: n = 4302, mean = 232283 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 224256, 226816, 233984, 245210, 346470, 1003336, 2158592, 2158592 ns/op
Iteration   7: n = 4284, mean = 233258 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 224256, 226816, 232704, 245504, 406605, 1011471, 3510272, 3510272 ns/op
Iteration   8: n = 4255, mean = 234828 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 224256, 227072, 235520, 248832, 419041, 1089241, 3186688, 3186688 ns/op
Iteration   9: n = 4293, mean = 232791 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 224256, 226816, 234496, 244736, 393800, 1153956, 2142208, 2142208 ns/op
Iteration  10: n = 4249, mean = 235177 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 224256, 227072, 238080, 246528, 369152, 947712, 8437760, 8437760 ns/op


Result "deserialization_site_1k":
  N = 42752
  mean = 233762.527 ±(99.9%) 1099.279 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 42667 
    [ 500000.000, 1000000.000) = 45 
    [1000000.000, 1500000.000) = 26 
    [1500000.000, 2000000.000) = 3 
    [2000000.000, 2500000.000) = 4 
    [2500000.000, 3000000.000) = 2 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 3 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 0 
    [6500000.000, 7000000.000) = 0 
    [7000000.000, 7500000.000) = 0 
    [7500000.000, 8000000.000) = 0 
    [8000000.000, 8500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 221440.000 ns/op
     p(50.0000) = 227072.000 ns/op
     p(90.0000) = 235264.000 ns/op
     p(95.0000) = 247808.000 ns/op
     p(99.0000) = 379904.000 ns/op
     p(99.9000) = 969425.920 ns/op
     p(99.9900) = 3421189.325 ns/op
     p(99.9990) = 8437760.000 ns/op
     p(99.9999) = 8437760.000 ns/op
    p(100.0000) = 8437760.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_site_2k

# Run progress: 73.89% complete, ETA 00:18:38
# Fork: 1 of 1
# Warmup Iteration   1: n = 1079, mean = 924105 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 420352, 446976, 1996800, 2084864, 5319885, 27067679, 28409856, 28409856 ns/op
Iteration   1: n = 2161, mean = 464097 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 423424, 438272, 563200, 569344, 829194, 3486437, 4050944, 4050944 ns/op
Iteration   2: n = 2232, mean = 447832 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 434688, 438272, 451584, 465408, 582656, 1325236, 6332416, 6332416 ns/op
Iteration   3: n = 2230, mean = 448282 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 434688, 438784, 456704, 466432, 604805, 1452636, 2465792, 2465792 ns/op
Iteration   4: n = 2228, mean = 448575 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 434176, 438272, 452608, 467456, 787159, 1256581, 1409024, 1409024 ns/op
Iteration   5: n = 2233, mean = 447564 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 434176, 438272, 452096, 465050, 797696, 1273336, 1318912, 1318912 ns/op
Iteration   6: n = 2234, mean = 447483 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 434176, 438784, 453632, 463488, 630374, 1317960, 1957888, 1957888 ns/op
Iteration   7: n = 2225, mean = 449208 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 434176, 438272, 452096, 468838, 774820, 1336209, 2158592, 2158592 ns/op
Iteration   8: n = 2197, mean = 455001 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 434176, 438784, 458240, 472064, 823398, 2275738, 2924544, 2924544 ns/op
Iteration   9: n = 2196, mean = 455180 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 434176, 438784, 461312, 471629, 814111, 3388342, 4202496, 4202496 ns/op
Iteration  10: n = 2234, mean = 447892 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 433664, 438272, 454144, 465408, 689408, 1648046, 1900544, 1900544 ns/op


Result "deserialization_site_2k":
  N = 22170
  mean = 451057.705 ±(99.9%) 2027.471 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 21421 
    [ 500000.000, 1000000.000) = 669 
    [1000000.000, 1500000.000) = 65 
    [1500000.000, 2000000.000) = 5 
    [2000000.000, 2500000.000) = 3 
    [2500000.000, 3000000.000) = 2 
    [3000000.000, 3500000.000) = 0 
    [3500000.000, 4000000.000) = 2 
    [4000000.000, 4500000.000) = 2 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 423424.000 ns/op
     p(50.0000) = 438272.000 ns/op
     p(90.0000) = 457728.000 ns/op
     p(95.0000) = 471270.400 ns/op
     p(99.0000) = 758056.960 ns/op
     p(99.9000) = 1326053.376 ns/op
     p(99.9900) = 4169594.061 ns/op
     p(99.9990) = 6332416.000 ns/op
     p(99.9999) = 6332416.000 ns/op
    p(100.0000) = 6332416.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_site_4k

# Run progress: 74.17% complete, ETA 00:18:26
# Fork: 1 of 1
# Warmup Iteration   1: n = 673, mean = 1483005 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 743424, 1016832, 2985165, 3593421, 7763067, 39124992, 39124992, 39124992 ns/op
Iteration   1: n = 1248, mean = 802192 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 737280, 765952, 883712, 906240, 1269842, 2399234, 2527232, 2527232 ns/op
Iteration   2: n = 1293, mean = 780505 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 753664, 760832, 786432, 804147, 1478656, 2396414, 2428928, 2428928 ns/op
Iteration   3: n = 1281, mean = 780469 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 753664, 761856, 785408, 817664, 1447936, 2056118, 2228224, 2228224 ns/op
Iteration   4: n = 1283, mean = 778929 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 754688, 761856, 786432, 802611, 1391821, 1701962, 1714176, 1714176 ns/op
Iteration   5: n = 1287, mean = 776759 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 754688, 760832, 788480, 805478, 1128284, 1742340, 1769472, 1769472 ns/op
Iteration   6: n = 1282, mean = 779692 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 754688, 761856, 789504, 805888, 1419264, 1637009, 1644544, 1644544 ns/op
Iteration   7: n = 1278, mean = 782091 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 753664, 761856, 786432, 801843, 1448038, 1824068, 1880064, 1880064 ns/op
Iteration   8: n = 1275, mean = 784346 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 754688, 762880, 789504, 819200, 1473495, 2544583, 2871296, 2871296 ns/op
Iteration   9: n = 1275, mean = 784149 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 755712, 762880, 789504, 819610, 1464812, 1668342, 1671168, 1671168 ns/op
Iteration  10: n = 1270, mean = 786960 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 755712, 761856, 785408, 809882, 1493586, 5432787, 5783552, 5783552 ns/op


Result "deserialization_site_4k":
  N = 12772
  mean = 783550.898 ±(99.9%) 3281.344 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 12514 
    [1000000.000, 1500000.000) = 184 
    [1500000.000, 2000000.000) = 66 
    [2000000.000, 2500000.000) = 4 
    [2500000.000, 3000000.000) = 2 
    [3000000.000, 3500000.000) = 0 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 1 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 737280.000 ns/op
     p(50.0000) = 761856.000 ns/op
     p(90.0000) = 790528.000 ns/op
     p(95.0000) = 846848.000 ns/op
     p(99.0000) = 1439744.000 ns/op
     p(99.9000) = 1775980.544 ns/op
     p(99.9900) = 5424632.627 ns/op
     p(99.9990) = 5783552.000 ns/op
     p(99.9999) = 5783552.000 ns/op
    p(100.0000) = 5783552.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_site_64k

# Run progress: 74.44% complete, ETA 00:18:14
# Fork: 1 of 1
# Warmup Iteration   1: n = 42, mean = 24170301 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14286848, 16736256, 43247206, 68573594, 122814464, 122814464, 122814464, 122814464 ns/op
Iteration   1: n = 66, mean = 15188216 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 13254656, 14229504, 19224986, 21905408, 25985024, 25985024, 25985024, 25985024 ns/op
Iteration   2: n = 75, mean = 13471580 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 13156352, 13205504, 14054195, 14630912, 20348928, 20348928, 20348928, 20348928 ns/op
Iteration   3: n = 75, mean = 13480974 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 13156352, 13221888, 14162330, 14624358, 19464192, 19464192, 19464192, 19464192 ns/op
Iteration   4: n = 75, mean = 13448861 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 13156352, 13205504, 14018150, 14286848, 18907136, 18907136, 18907136, 18907136 ns/op
Iteration   5: n = 75, mean = 13470706 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 13156352, 13205504, 14021427, 14231142, 22151168, 22151168, 22151168, 22151168 ns/op
Iteration   6: n = 74, mean = 13513479 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 13156352, 13221888, 14065664, 14872576, 19693568, 19693568, 19693568, 19693568 ns/op
Iteration   7: n = 74, mean = 13518793 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 13156352, 13230080, 14106624, 14303232, 18579456, 18579456, 18579456, 18579456 ns/op
Iteration   8: n = 75, mean = 13496265 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 13139968, 13238272, 14168883, 14431027, 15843328, 15843328, 15843328, 15843328 ns/op
Iteration   9: n = 75, mean = 13486653 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 13123584, 13205504, 14257357, 14411366, 16269312, 16269312, 16269312, 16269312 ns/op
Iteration  10: n = 74, mean = 13569052 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 13139968, 13221888, 14188544, 14385152, 21594112, 21594112, 21594112, 21594112 ns/op


Result "deserialization_site_64k":
  N = 738
  mean = 13646406.764 ±(99.9%) 147973.129 ns/op

  Histogram, ns/op:
    [10000000.000, 11250000.000) = 0 
    [11250000.000, 12500000.000) = 0 
    [12500000.000, 13750000.000) = 568 
    [13750000.000, 15000000.000) = 136 
    [15000000.000, 16250000.000) = 11 
    [16250000.000, 17500000.000) = 9 
    [17500000.000, 18750000.000) = 1 
    [18750000.000, 20000000.000) = 5 
    [20000000.000, 21250000.000) = 1 
    [21250000.000, 22500000.000) = 5 
    [22500000.000, 23750000.000) = 0 
    [23750000.000, 25000000.000) = 1 
    [25000000.000, 26250000.000) = 1 
    [26250000.000, 27500000.000) = 0 
    [27500000.000, 28750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 13123584.000 ns/op
     p(50.0000) = 13221888.000 ns/op
     p(90.0000) = 14270464.000 ns/op
     p(95.0000) = 14959411.200 ns/op
     p(99.0000) = 20908605.440 ns/op
     p(99.9000) = 25985024.000 ns/op
     p(99.9900) = 25985024.000 ns/op
     p(99.9990) = 25985024.000 ns/op
     p(99.9999) = 25985024.000 ns/op
    p(100.0000) = 25985024.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.deserialization_site_8k

# Run progress: 74.72% complete, ETA 00:18:02
# Fork: 1 of 1
# Warmup Iteration   1: n = 257, mean = 3885614 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1910784, 3043328, 5876941, 7500595, 15734538, 54657024, 54657024, 54657024 ns/op
Iteration   1: n = 610, mean = 1641828 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1466368, 1497088, 1748787, 2665677, 3330990, 8314880, 8314880, 8314880 ns/op
Iteration   2: n = 662, mean = 1510236 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1472512, 1484800, 1519616, 1566413, 1998828, 6545408, 6545408, 6545408 ns/op
Iteration   3: n = 659, mean = 1517984 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1472512, 1484800, 1525760, 1609728, 2528870, 2830336, 2830336, 2830336 ns/op
Iteration   4: n = 659, mean = 1516853 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1474560, 1486848, 1533952, 1583104, 2460058, 3063808, 3063808, 3063808 ns/op
Iteration   5: n = 657, mean = 1521567 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1474560, 1484800, 1530266, 1608704, 2613330, 2863104, 2863104, 2863104 ns/op
Iteration   6: n = 658, mean = 1519190 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1472512, 1484800, 1533952, 1581158, 2466202, 3383296, 3383296, 3383296 ns/op
Iteration   7: n = 654, mean = 1529734 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1472512, 1486848, 1536000, 1705472, 2480742, 3207168, 3207168, 3207168 ns/op
Iteration   8: n = 655, mean = 1525763 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1474560, 1484800, 1529856, 1664205, 2509046, 2932736, 2932736, 2932736 ns/op
Iteration   9: n = 658, mean = 1519211 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1474560, 1484800, 1519821, 1570918, 2242191, 8732672, 8732672, 8732672 ns/op
Iteration  10: n = 656, mean = 1524193 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1474560, 1486848, 1532518, 1614131, 2613248, 3387392, 3387392, 3387392 ns/op


Result "deserialization_site_8k":
  N = 6528
  mean = 1531844.078 ±(99.9%) 9577.405 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 4704 
    [1500000.000, 2000000.000) = 1656 
    [2000000.000, 2500000.000) = 88 
    [2500000.000, 3000000.000) = 54 
    [3000000.000, 3500000.000) = 19 
    [3500000.000, 4000000.000) = 2 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 2 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 0 
    [6500000.000, 7000000.000) = 1 
    [7000000.000, 7500000.000) = 0 
    [7500000.000, 8000000.000) = 0 
    [8000000.000, 8500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 1466368.000 ns/op
     p(50.0000) = 1486848.000 ns/op
     p(90.0000) = 1538048.000 ns/op
     p(95.0000) = 1691648.000 ns/op
     p(99.0000) = 2652364.800 ns/op
     p(99.9000) = 3675709.440 ns/op
     p(99.9900) = 8732672.000 ns/op
     p(99.9990) = 8732672.000 ns/op
     p(99.9999) = 8732672.000 ns/op
    p(100.0000) = 8732672.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_events_1k

# Run progress: 75.00% complete, ETA 00:17:50
# Fork: 1 of 1
# Warmup Iteration   1: n = 1515, mean = 659032 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 484864, 509440, 702464, 1425408, 3744727, 7246610, 7749632, 7749632 ns/op
Iteration   1: n = 1922, mean = 521071 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 484352, 503808, 529408, 631808, 839444, 1872218, 2244608, 2244608 ns/op
Iteration   2: n = 1964, mean = 512997 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 495104, 502272, 519168, 534272, 831539, 1489654, 1849344, 1849344 ns/op
Iteration   3: n = 2241, mean = 445917 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 373760, 394752, 505344, 518144, 794624, 1239106, 1325056, 1325056 ns/op
Iteration   4: n = 2567, mean = 389314 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 375296, 382464, 394240, 406528, 541696, 1168671, 1212416, 1212416 ns/op
Iteration   5: n = 2557, mean = 390787 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 375296, 381952, 395366, 408576, 619950, 1231618, 1355776, 1355776 ns/op
Iteration   6: n = 2543, mean = 393074 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 374272, 381440, 391680, 404480, 504156, 2809168, 9076736, 9076736 ns/op
Iteration   7: n = 2552, mean = 391697 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 375808, 382464, 396288, 413363, 625541, 1485109, 2674688, 2674688 ns/op
Iteration   8: n = 2556, mean = 390992 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 375296, 381952, 397312, 411136, 673208, 1192323, 1466368, 1466368 ns/op
Iteration   9: n = 2563, mean = 390000 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 375808, 381952, 394240, 408064, 613745, 1237631, 1529856, 1529856 ns/op
Iteration  10: n = 2560, mean = 390336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 376320, 382464, 396237, 407526, 552407, 1107968, 1146880, 1146880 ns/op


Result "serialization_events_1k":
  N = 24025
  mean = 416413.617 ±(99.9%) 2072.870 ns/op

  Histogram, ns/op:
    [       0.000,  1000000.000) = 23956 
    [ 1000000.000,  2000000.000) = 65 
    [ 2000000.000,  3000000.000) = 2 
    [ 3000000.000,  4000000.000) = 1 
    [ 4000000.000,  5000000.000) = 0 
    [ 5000000.000,  6000000.000) = 0 
    [ 6000000.000,  7000000.000) = 0 
    [ 7000000.000,  8000000.000) = 0 
    [ 8000000.000,  9000000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 373760.000 ns/op
     p(50.0000) = 383488.000 ns/op
     p(90.0000) = 502784.000 ns/op
     p(95.0000) = 508416.000 ns/op
     p(99.0000) = 660480.000 ns/op
     p(99.9000) = 1232842.752 ns/op
     p(99.9900) = 3433242.624 ns/op
     p(99.9990) = 9076736.000 ns/op
     p(99.9999) = 9076736.000 ns/op
    p(100.0000) = 9076736.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_events_2k

# Run progress: 75.28% complete, ETA 00:17:38
# Fork: 1 of 1
# Warmup Iteration   1: n = 720, mean = 1386517 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 969728, 1039872, 2096947, 2473165, 6609715, 10518528, 10518528, 10518528 ns/op
Iteration   1: n = 965, mean = 1035815 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 962560, 1003520, 1107968, 1149338, 1655521, 2523136, 2523136, 2523136 ns/op
Iteration   2: n = 936, mean = 1068024 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 987136, 998400, 1274266, 1613824, 1712660, 2473984, 2473984, 2473984 ns/op
Iteration   3: n = 1117, mean = 895361 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 762880, 801792, 1007821, 1026150, 1331118, 3193905, 3358720, 3358720 ns/op
Iteration   4: n = 1264, mean = 790664 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 761856, 773120, 798720, 822784, 1355162, 2365809, 2576384, 2576384 ns/op
Iteration   5: n = 1265, mean = 790223 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 762880, 773120, 798720, 823296, 1327227, 4014391, 4792320, 4792320 ns/op
Iteration   6: n = 1262, mean = 792138 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 761856, 773120, 797696, 812032, 1498358, 4726385, 5677056, 5677056 ns/op
Iteration   7: n = 1257, mean = 795074 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 761856, 773120, 795648, 825549, 1487708, 2088706, 2129920, 2129920 ns/op
Iteration   8: n = 1260, mean = 793385 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 762880, 773120, 796672, 825293, 1456476, 4298369, 5242880, 5242880 ns/op
Iteration   9: n = 1251, mean = 799117 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 762880, 773120, 802816, 854016, 1479066, 3403252, 3985408, 3985408 ns/op
Iteration  10: n = 1252, mean = 798336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 760832, 774144, 808960, 849254, 1430467, 2626218, 2957312, 2957312 ns/op


Result "serialization_events_2k":
  N = 11829
  mean = 845071.128 ±(99.9%) 5127.032 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 10396 
    [1000000.000, 1500000.000) = 1265 
    [1500000.000, 2000000.000) = 154 
    [2000000.000, 2500000.000) = 6 
    [2500000.000, 3000000.000) = 3 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 1 
    [5000000.000, 5500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 760832.000 ns/op
     p(50.0000) = 775168.000 ns/op
     p(90.0000) = 1003520.000 ns/op
     p(95.0000) = 1027072.000 ns/op
     p(99.0000) = 1591296.000 ns/op
     p(99.9000) = 2217410.560 ns/op
     p(99.9900) = 5597601.792 ns/op
     p(99.9990) = 5677056.000 ns/op
     p(99.9999) = 5677056.000 ns/op
    p(100.0000) = 5677056.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_events_4k

# Run progress: 75.56% complete, ETA 00:17:26
# Fork: 1 of 1
# Warmup Iteration   1: n = 348, mean = 2874827 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2101248, 2197504, 4674355, 5952307, 12454953, 22446080, 22446080, 22446080 ns/op
Iteration   1: n = 457, mean = 2189446 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2086912, 2121728, 2367488, 2392064, 3150152, 3477504, 3477504, 3477504 ns/op
Iteration   2: n = 466, mean = 2145834 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2084864, 2109440, 2170880, 2244608, 3274547, 4317184, 4317184, 4317184 ns/op
Iteration   3: n = 552, mean = 1810751 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1523712, 1562624, 2117632, 2131354, 2843935, 3391488, 3391488, 3391488 ns/op
Iteration   4: n = 636, mean = 1571924 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1523712, 1550336, 1583104, 1616486, 2350653, 3239936, 3239936, 3239936 ns/op
Iteration   5: n = 632, mean = 1583597 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1525760, 1554432, 1593344, 1669837, 2471444, 2822144, 2822144, 2822144 ns/op
Iteration   6: n = 630, mean = 1588016 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1529856, 1554432, 1591296, 1664205, 2392064, 3395584, 3395584, 3395584 ns/op
Iteration   7: n = 630, mean = 1588676 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1531904, 1556480, 1591091, 1671270, 2407465, 2834432, 2834432, 2834432 ns/op
Iteration   8: n = 628, mean = 1591691 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1529856, 1554432, 1605632, 1738854, 2539151, 4100096, 4100096, 4100096 ns/op
Iteration   9: n = 628, mean = 1592982 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1525760, 1554432, 1601536, 1642496, 2676244, 4349952, 4349952, 4349952 ns/op
Iteration  10: n = 634, mean = 1578888 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1525760, 1550336, 1574912, 1601536, 2391450, 5193728, 5193728, 5193728 ns/op


Result "serialization_events_4k":
  N = 5893
  mean = 1697429.525 ±(99.9%) 12294.574 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 0 
    [1500000.000, 2000000.000) = 4633 
    [2000000.000, 2500000.000) = 1188 
    [2500000.000, 3000000.000) = 46 
    [3000000.000, 3500000.000) = 16 
    [3500000.000, 4000000.000) = 5 
    [4000000.000, 4500000.000) = 4 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 1523712.000 ns/op
     p(50.0000) = 1558528.000 ns/op
     p(90.0000) = 2117632.000 ns/op
     p(95.0000) = 2158592.000 ns/op
     p(99.0000) = 2579087.360 ns/op
     p(99.9000) = 3876724.736 ns/op
     p(99.9900) = 5193728.000 ns/op
     p(99.9990) = 5193728.000 ns/op
     p(99.9999) = 5193728.000 ns/op
    p(100.0000) = 5193728.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_events_64k

# Run progress: 75.83% complete, ETA 00:17:14
# Fork: 1 of 1
# Warmup Iteration   1: n = 16, mean = 62992384 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 51576832, 55967744, 92353331, 145752064, 145752064, 145752064, 145752064, 145752064 ns/op
Iteration   1: n = 20, mean = 52219085 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50397184, 51118080, 56924570, 60568371, 60751872, 60751872, 60751872, 60751872 ns/op
Iteration   2: n = 20, mean = 52088013 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 50462720, 51118080, 56655872, 58687488, 58785792, 58785792, 58785792, 58785792 ns/op
Iteration   3: n = 24, mean = 42434560 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 36241408, 37847040, 51511296, 52428800, 52625408, 52625408, 52625408, 52625408 ns/op
Iteration   4: n = 27, mean = 37306975 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 36175872, 36503552, 39138099, 45088768, 46399488, 46399488, 46399488, 46399488 ns/op
Iteration   5: n = 28, mean = 36981029 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 36175872, 36405248, 37971558, 41789030, 44236800, 44236800, 44236800, 44236800 ns/op
Iteration   6: n = 28, mean = 36910811 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 36175872, 36569088, 38279578, 40298086, 41418752, 41418752, 41418752, 41418752 ns/op
Iteration   7: n = 27, mean = 37090949 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 36175872, 36896768, 38351667, 40252211, 41484288, 41484288, 41484288, 41484288 ns/op
Iteration   8: n = 27, mean = 37340956 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 36241408, 37224448, 37735629, 41680896, 43646976, 43646976, 43646976, 43646976 ns/op
Iteration   9: n = 27, mean = 37078812 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 36241408, 36962304, 37788058, 40461926, 42139648, 42139648, 42139648, 42139648 ns/op
Iteration  10: n = 27, mean = 37353093 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 36175872, 37093376, 38063309, 42912973, 46006272, 46006272, 46006272, 46006272 ns/op


Result "serialization_events_64k":
  N = 255
  mean = 40000604.361 ±(99.9%) 1266648.240 ns/op

  Histogram, ns/op:
    [30000000.000, 32500000.000) = 0 
    [32500000.000, 35000000.000) = 0 
    [35000000.000, 37500000.000) = 172 
    [37500000.000, 40000000.000) = 25 
    [40000000.000, 42500000.000) = 4 
    [42500000.000, 45000000.000) = 3 
    [45000000.000, 47500000.000) = 2 
    [47500000.000, 50000000.000) = 0 
    [50000000.000, 52500000.000) = 39 
    [52500000.000, 55000000.000) = 4 
    [55000000.000, 57500000.000) = 4 
    [57500000.000, 60000000.000) = 1 
    [60000000.000, 62500000.000) = 1 
    [62500000.000, 65000000.000) = 0 
    [65000000.000, 67500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 36175872.000 ns/op
     p(50.0000) = 37093376.000 ns/op
     p(90.0000) = 50921472.000 ns/op
     p(95.0000) = 52179763.200 ns/op
     p(99.0000) = 57831587.840 ns/op
     p(99.9000) = 60751872.000 ns/op
     p(99.9900) = 60751872.000 ns/op
     p(99.9990) = 60751872.000 ns/op
     p(99.9999) = 60751872.000 ns/op
    p(100.0000) = 60751872.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_events_8k

# Run progress: 76.11% complete, ETA 00:17:02
# Fork: 1 of 1
# Warmup Iteration   1: n = 150, mean = 6661243 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4644864, 5189632, 9304474, 10642227, 31749243, 41091072, 41091072, 41091072 ns/op
Iteration   1: n = 206, mean = 4870621 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4644864, 4702208, 5179802, 5419008, 7061668, 7389184, 7389184, 7389184 ns/op
Iteration   2: n = 212, mean = 4720601 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4636672, 4661248, 4718592, 4904550, 6867026, 7626752, 7626752, 7626752 ns/op
Iteration   3: n = 250, mean = 4008067 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3338240, 3450880, 4702208, 4875469, 6175949, 6324224, 6324224, 6324224 ns/op
Iteration   4: n = 291, mean = 3438430 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3313664, 3362816, 3469312, 3672474, 5558436, 7610368, 7610368, 7610368 ns/op
Iteration   5: n = 294, mean = 3400669 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3305472, 3338240, 3424256, 3565568, 4525261, 8298496, 8298496, 8298496 ns/op
Iteration   6: n = 294, mean = 3406019 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3297280, 3334144, 3436544, 3743744, 4800102, 7135232, 7135232, 7135232 ns/op
Iteration   7: n = 294, mean = 3406535 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3305472, 3330048, 3416064, 3984384, 5570150, 6635520, 6635520, 6635520 ns/op
Iteration   8: n = 292, mean = 3425532 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3301376, 3334144, 3485696, 4093542, 6041764, 8183808, 8183808, 8183808 ns/op
Iteration   9: n = 294, mean = 3412302 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3305472, 3332096, 3540992, 4087808, 4375757, 6119424, 6119424, 6119424 ns/op
Iteration  10: n = 291, mean = 3435488 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3309568, 3334144, 3620864, 4073882, 5548278, 6119424, 6119424, 6119424 ns/op


Result "serialization_events_8k":
  N = 2718
  mean = 3683812.497 ±(99.9%) 40266.994 ns/op

  Histogram, ns/op:
    [3000000.000, 3500000.000) = 2002 
    [3500000.000, 4000000.000) = 87 
    [4000000.000, 4500000.000) = 77 
    [4500000.000, 5000000.000) = 463 
    [5000000.000, 5500000.000) = 55 
    [5500000.000, 6000000.000) = 10 
    [6000000.000, 6500000.000) = 14 
    [6500000.000, 7000000.000) = 3 
    [7000000.000, 7500000.000) = 3 
    [7500000.000, 8000000.000) = 2 
    [8000000.000, 8500000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 3297280.000 ns/op
     p(50.0000) = 3350528.000 ns/op
     p(90.0000) = 4677632.000 ns/op
     p(95.0000) = 4759552.000 ns/op
     p(99.0000) = 5697372.160 ns/op
     p(99.9000) = 7783284.736 ns/op
     p(99.9900) = 8298496.000 ns/op
     p(99.9990) = 8298496.000 ns/op
     p(99.9999) = 8298496.000 ns/op
    p(100.0000) = 8298496.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_site_1k

# Run progress: 76.39% complete, ETA 00:16:50
# Fork: 1 of 1
# Warmup Iteration   1: n = 1442, mean = 691785 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 463360, 479232, 1158554, 1318605, 3660308, 8297669, 8323072, 8323072 ns/op
Iteration   1: n = 2031, mean = 492231 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 463360, 475648, 505242, 606618, 633528, 2779578, 3964928, 3964928 ns/op
Iteration   2: n = 2059, mean = 490299 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 462336, 475136, 499200, 604160, 716800, 1411973, 3072000, 3072000 ns/op
Iteration   3: n = 2567, mean = 389309 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 313856, 322560, 480256, 492032, 587407, 1325400, 1789952, 1789952 ns/op
Iteration   4: n = 3081, mean = 324266 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 312832, 317440, 328192, 343501, 538337, 1087689, 1656832, 1656832 ns/op
Iteration   5: n = 3044, mean = 328289 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 313344, 317440, 330240, 349184, 593920, 1190866, 1466368, 1466368 ns/op
Iteration   6: n = 3089, mean = 323518 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 312832, 317440, 325632, 337920, 422400, 1174446, 3096576, 3096576 ns/op
Iteration   7: n = 3058, mean = 326708 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 312832, 317952, 331264, 343552, 588196, 1147841, 1331200, 1331200 ns/op
Iteration   8: n = 3060, mean = 326562 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 312320, 317440, 325632, 342528, 588800, 1308445, 1812480, 1812480 ns/op
Iteration   9: n = 3039, mean = 328800 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 312832, 317440, 334848, 353280, 598221, 1123942, 1286144, 1286144 ns/op
Iteration  10: n = 3053, mean = 327280 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 312320, 317440, 327680, 342528, 589271, 1164870, 1173504, 1173504 ns/op


Result "serialization_site_1k":
  N = 28081
  mean = 356222.509 ±(99.9%) 1757.839 ns/op

  Histogram, ns/op:
    [      0.000,  250000.000) = 0 
    [ 250000.000,  500000.000) = 27247 
    [ 500000.000,  750000.000) = 753 
    [ 750000.000, 1000000.000) = 21 
    [1000000.000, 1250000.000) = 39 
    [1250000.000, 1500000.000) = 13 
    [1500000.000, 1750000.000) = 1 
    [1750000.000, 2000000.000) = 3 
    [2000000.000, 2250000.000) = 0 
    [2250000.000, 2500000.000) = 0 
    [2500000.000, 2750000.000) = 0 
    [2750000.000, 3000000.000) = 1 
    [3000000.000, 3250000.000) = 2 
    [3250000.000, 3500000.000) = 0 
    [3500000.000, 3750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 312320.000 ns/op
     p(50.0000) = 318464.000 ns/op
     p(90.0000) = 475648.000 ns/op
     p(95.0000) = 481792.000 ns/op
     p(99.0000) = 609280.000 ns/op
     p(99.9000) = 1173336.064 ns/op
     p(99.9900) = 3076713.677 ns/op
     p(99.9990) = 3964928.000 ns/op
     p(99.9999) = 3964928.000 ns/op
    p(100.0000) = 3964928.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_site_2k

# Run progress: 76.67% complete, ETA 00:16:38
# Fork: 1 of 1
# Warmup Iteration   1: n = 621, mean = 1607759 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 836608, 1357824, 2571469, 2669773, 7107215, 15040512, 15040512, 15040512 ns/op
Iteration   1: n = 1125, mean = 895326 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 826368, 862208, 972800, 983040, 1387479, 4799922, 4874240, 4874240 ns/op
Iteration   2: n = 1121, mean = 892242 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 824320, 863232, 968704, 998400, 1450230, 2203775, 2260992, 2260992 ns/op
Iteration   3: n = 1391, mean = 718446 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 586752, 615424, 867328, 888832, 1064059, 1659978, 1794048, 1794048 ns/op
Iteration   4: n = 1653, mean = 604576 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 585728, 594944, 614400, 628736, 753500, 2485662, 4075520, 4075520 ns/op
Iteration   5: n = 1620, mean = 616876 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 586752, 595968, 618496, 634829, 1150976, 3814580, 7340032, 7340032 ns/op
Iteration   6: n = 1650, mean = 605499 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 585728, 593920, 613376, 624077, 1058611, 1484374, 1495040, 1495040 ns/op
Iteration   7: n = 1644, mean = 607950 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 584704, 593920, 613376, 622592, 1092710, 2627512, 4718592, 4718592 ns/op
Iteration   8: n = 1646, mean = 607019 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 585728, 593920, 612352, 624640, 1024072, 2252302, 3403776, 3403776 ns/op
Iteration   9: n = 1644, mean = 608065 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 584704, 593920, 612352, 627712, 1103258, 1587958, 1712128, 1712128 ns/op
Iteration  10: n = 1640, mean = 609484 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 584704, 593920, 616448, 634829, 1263677, 1435441, 1515520, 1515520 ns/op


Result "serialization_site_2k":
  N = 15134
  mean = 660923.458 ±(99.9%) 4287.183 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 14874 
    [1000000.000, 1500000.000) = 236 
    [1500000.000, 2000000.000) = 14 
    [2000000.000, 2500000.000) = 2 
    [2500000.000, 3000000.000) = 1 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 2 
    [4500000.000, 5000000.000) = 2 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 0 
    [6500000.000, 7000000.000) = 0 
    [7000000.000, 7500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 584704.000 ns/op
     p(50.0000) = 595968.000 ns/op
     p(90.0000) = 862208.000 ns/op
     p(95.0000) = 879616.000 ns/op
     p(99.0000) = 1127731.200 ns/op
     p(99.9000) = 1641779.200 ns/op
     p(99.9900) = 6073847.808 ns/op
     p(99.9990) = 7340032.000 ns/op
     p(99.9999) = 7340032.000 ns/op
    p(100.0000) = 7340032.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_site_4k

# Run progress: 76.94% complete, ETA 00:16:26
# Fork: 1 of 1
# Warmup Iteration   1: n = 384, mean = 2604277 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1693696, 2042880, 4636672, 5468160, 9862349, 24707072, 24707072, 24707072 ns/op
Iteration   1: n = 563, mean = 1776725 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1703936, 1734656, 1822720, 1894400, 2626191, 3051520, 3051520, 3051520 ns/op
Iteration   2: n = 566, mean = 1766364 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1705984, 1720320, 1810432, 1890304, 2632335, 4251648, 4251648, 4251648 ns/op
Iteration   3: n = 728, mean = 1374135 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1107968, 1138688, 1726464, 1740800, 1880330, 2641920, 2641920, 2641920 ns/op
Iteration   4: n = 874, mean = 1143536 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1103872, 1117184, 1155072, 1224704, 2000896, 3317760, 3317760, 3317760 ns/op
Iteration   5: n = 879, mean = 1137460 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1101824, 1118208, 1140736, 1165312, 1776026, 5177344, 5177344, 5177344 ns/op
Iteration   6: n = 880, mean = 1135872 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1099776, 1116160, 1142784, 1163264, 1596764, 5169152, 5169152, 5169152 ns/op
Iteration   7: n = 878, mean = 1138576 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1101824, 1118208, 1146880, 1173504, 1916580, 3424256, 3424256, 3424256 ns/op
Iteration   8: n = 874, mean = 1144026 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1103872, 1118208, 1148928, 1186304, 1867264, 5316608, 5316608, 5316608 ns/op
Iteration   9: n = 875, mean = 1142325 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1101824, 1116160, 1148928, 1202586, 1870725, 2641920, 2641920, 2641920 ns/op
Iteration  10: n = 868, mean = 1151297 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1101824, 1118208, 1150976, 1231974, 2074481, 2400256, 2400256, 2400256 ns/op


Result "serialization_site_4k":
  N = 7985
  mean = 1252057.945 ±(99.9%) 10259.926 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 6450 
    [1500000.000, 2000000.000) = 1457 
    [2000000.000, 2500000.000) = 52 
    [2500000.000, 3000000.000) = 18 
    [3000000.000, 3500000.000) = 3 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 1 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 3 

  Percentiles, ns/op:
      p(0.0000) = 1099776.000 ns/op
     p(50.0000) = 1120256.000 ns/op
     p(90.0000) = 1722368.000 ns/op
     p(95.0000) = 1789952.000 ns/op
     p(99.0000) = 1998848.000 ns/op
     p(99.9000) = 3055247.360 ns/op
     p(99.9900) = 5316608.000 ns/op
     p(99.9990) = 5316608.000 ns/op
     p(99.9999) = 5316608.000 ns/op
    p(100.0000) = 5316608.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_site_64k

# Run progress: 77.22% complete, ETA 00:16:14
# Fork: 1 of 1
# Warmup Iteration   1: n = 20, mean = 51386778 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 34013184, 38666240, 95800525, 150267494, 153092096, 153092096, 153092096, 153092096 ns/op
Iteration   1: n = 29, mean = 35079839 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33882112, 34275328, 37814272, 38830080, 39321600, 39321600, 39321600, 39321600 ns/op
Iteration   2: n = 29, mean = 35538591 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33554432, 34406400, 38993920, 43352064, 46071808, 46071808, 46071808, 46071808 ns/op
Iteration   3: n = 39, mean = 26065684 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21299200, 21528576, 34734080, 35651584, 41877504, 41877504, 41877504, 41877504 ns/op
Iteration   4: n = 46, mean = 21907545 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21364736, 21577728, 22564045, 25390285, 26968064, 26968064, 26968064, 26968064 ns/op
Iteration   5: n = 46, mean = 21850557 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21331968, 21479424, 22413312, 22722970, 32473088, 32473088, 32473088, 32473088 ns/op
Iteration   6: n = 46, mean = 21837023 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21331968, 21430272, 22462464, 24847974, 27164672, 27164672, 27164672, 27164672 ns/op
Iteration   7: n = 46, mean = 21810666 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21331968, 21463040, 22432973, 24480973, 26509312, 26509312, 26509312, 26509312 ns/op
Iteration   8: n = 46, mean = 21901134 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21331968, 21479424, 22629581, 23039181, 30310400, 30310400, 30310400, 30310400 ns/op
Iteration   9: n = 46, mean = 21876202 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21299200, 21528576, 22586982, 24030413, 26214400, 26214400, 26214400, 26214400 ns/op
Iteration  10: n = 46, mean = 21871215 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21364736, 21544960, 22432973, 24199168, 24707072, 24707072, 24707072, 24707072 ns/op


Result "serialization_site_64k":
  N = 419
  mean = 24116935.179 ±(99.9%) 842318.508 ns/op

  Histogram, ns/op:
    [20000000.000, 22500000.000) = 315 
    [22500000.000, 25000000.000) = 24 
    [25000000.000, 27500000.000) = 7 
    [27500000.000, 30000000.000) = 0 
    [30000000.000, 32500000.000) = 2 
    [32500000.000, 35000000.000) = 44 
    [35000000.000, 37500000.000) = 20 
    [37500000.000, 40000000.000) = 4 
    [40000000.000, 42500000.000) = 2 
    [42500000.000, 45000000.000) = 0 
    [45000000.000, 47500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 21299200.000 ns/op
     p(50.0000) = 21528576.000 ns/op
     p(90.0000) = 34209792.000 ns/op
     p(95.0000) = 35717120.000 ns/op
     p(99.0000) = 39256064.000 ns/op
     p(99.9000) = 46071808.000 ns/op
     p(99.9900) = 46071808.000 ns/op
     p(99.9990) = 46071808.000 ns/op
     p(99.9999) = 46071808.000 ns/op
    p(100.0000) = 46071808.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JavaThriftBenchmark.serialization_site_8k

# Run progress: 77.50% complete, ETA 00:16:02
# Fork: 1 of 1
# Warmup Iteration   1: n = 192, mean = 5215915 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3563520, 3842048, 8408269, 12135629, 23995351, 36306944, 36306944, 36306944 ns/op
Iteration   1: n = 271, mean = 3692839 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3584000, 3620864, 3825664, 3893658, 4835246, 5046272, 5046272, 5046272 ns/op
Iteration   2: n = 272, mean = 3693342 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3588096, 3612672, 3803955, 3854746, 5595300, 5865472, 5865472, 5865472 ns/op
Iteration   3: n = 354, mean = 2828658 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2232320, 2295808, 3631104, 3658752, 4054630, 4554752, 4554752, 4554752 ns/op
Iteration   4: n = 437, mean = 2286346 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2236416, 2252800, 2293760, 2406400, 3159081, 4399104, 4399104, 4399104 ns/op
Iteration   5: n = 435, mean = 2301575 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2232320, 2260992, 2306048, 2383872, 3406889, 8421376, 8421376, 8421376 ns/op
Iteration   6: n = 435, mean = 2296820 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2228224, 2260992, 2303590, 2380595, 3363635, 4382720, 4382720, 4382720 ns/op
Iteration   7: n = 436, mean = 2295122 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2236416, 2260992, 2319565, 2417254, 3122708, 6045696, 6045696, 6045696 ns/op
Iteration   8: n = 437, mean = 2288764 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2236416, 2256896, 2297856, 2371174, 3065774, 3788800, 3788800, 3788800 ns/op
Iteration   9: n = 434, mean = 2306303 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2236416, 2260992, 2326528, 2436096, 3316326, 4489216, 4489216, 4489216 ns/op
Iteration  10: n = 432, mean = 2315169 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2232320, 2265088, 2342912, 2670592, 3259310, 3686400, 3686400, 3686400 ns/op


Result "serialization_site_8k":
  N = 3943
  mean = 2538189.293 ±(99.9%) 29607.875 ns/op

  Histogram, ns/op:
    [2000000.000, 2500000.000) = 3136 
    [2500000.000, 3000000.000) = 68 
    [3000000.000, 3500000.000) = 37 
    [3500000.000, 4000000.000) = 675 
    [4000000.000, 4500000.000) = 14 
    [4500000.000, 5000000.000) = 6 
    [5000000.000, 5500000.000) = 2 
    [5500000.000, 6000000.000) = 3 
    [6000000.000, 6500000.000) = 1 
    [6500000.000, 7000000.000) = 0 
    [7000000.000, 7500000.000) = 0 
    [7500000.000, 8000000.000) = 0 
    [8000000.000, 8500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 2228224.000 ns/op
     p(50.0000) = 2265088.000 ns/op
     p(90.0000) = 3612672.000 ns/op
     p(95.0000) = 3661824.000 ns/op
     p(99.0000) = 3889397.760 ns/op
     p(99.9000) = 5757206.528 ns/op
     p(99.9900) = 8421376.000 ns/op
     p(99.9990) = 8421376.000 ns/op
     p(99.9999) = 8421376.000 ns/op
    p(100.0000) = 8421376.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_events_1k

# Run progress: 77.78% complete, ETA 00:15:50
# Fork: 1 of 1
# Warmup Iteration   1: n = 306, mean = 3263274 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1029120, 1529856, 5616435, 6146048, 15291187, 64290816, 64290816, 64290816 ns/op
Iteration   1: n = 914, mean = 1105808 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1016832, 1038336, 1181696, 1204224, 1780122, 9551872, 9551872, 9551872 ns/op
Iteration   2: n = 934, mean = 1070217 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1012736, 1034240, 1168384, 1200128, 2025370, 3022848, 3022848, 3022848 ns/op
Iteration   3: n = 962, mean = 1039610 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1007616, 1024000, 1050624, 1075200, 1639383, 1921024, 1921024, 1921024 ns/op
Iteration   4: n = 961, mean = 1040010 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1008640, 1025024, 1052672, 1069056, 1655972, 2121728, 2121728, 2121728 ns/op
Iteration   5: n = 955, mean = 1047000 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1008640, 1025024, 1048576, 1089536, 1952399, 2789376, 2789376, 2789376 ns/op
Iteration   6: n = 960, mean = 1041453 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1008640, 1026048, 1052672, 1064960, 1513329, 2359296, 2359296, 2359296 ns/op
Iteration   7: n = 963, mean = 1038373 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1009664, 1025024, 1046528, 1056768, 1335296, 3137536, 3137536, 3137536 ns/op
Iteration   8: n = 956, mean = 1045573 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1010688, 1026048, 1050624, 1079296, 1900319, 2805760, 2805760, 2805760 ns/op
Iteration   9: n = 944, mean = 1058986 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1010688, 1029120, 1080320, 1097216, 1954406, 5373952, 5373952, 5373952 ns/op
Iteration  10: n = 944, mean = 1059075 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1010688, 1032192, 1088512, 1126400, 1875046, 2009088, 2009088, 2009088 ns/op


Result "deserialization_events_1k":
  N = 9493
  mean = 1054302.763 ±(99.9%) 6253.475 ns/op

  Histogram, ns/op:
    [ 1000000.000,  1500000.000) = 9361 
    [ 1500000.000,  2000000.000) = 92 
    [ 2000000.000,  2500000.000) = 31 
    [ 2500000.000,  3000000.000) = 3 
    [ 3000000.000,  3500000.000) = 2 
    [ 3500000.000,  4000000.000) = 0 
    [ 4000000.000,  4500000.000) = 0 
    [ 4500000.000,  5000000.000) = 0 
    [ 5000000.000,  5500000.000) = 1 
    [ 5500000.000,  6000000.000) = 0 
    [ 6000000.000,  6500000.000) = 0 
    [ 6500000.000,  7000000.000) = 0 
    [ 7000000.000,  7500000.000) = 0 
    [ 7500000.000,  8000000.000) = 0 
    [ 8000000.000,  8500000.000) = 1 
    [ 8500000.000,  9000000.000) = 1 
    [ 9000000.000,  9500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 1007616.000 ns/op
     p(50.0000) = 1028096.000 ns/op
     p(90.0000) = 1073152.000 ns/op
     p(95.0000) = 1165312.000 ns/op
     p(99.0000) = 1792245.760 ns/op
     p(99.9000) = 2576916.480 ns/op
     p(99.9900) = 9551872.000 ns/op
     p(99.9990) = 9551872.000 ns/op
     p(99.9999) = 9551872.000 ns/op
    p(100.0000) = 9551872.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_events_2k

# Run progress: 78.06% complete, ETA 00:15:38
# Fork: 1 of 1
# Warmup Iteration   1: n = 176, mean = 5678639 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2117632, 2945024, 9925427, 12256870, 41231974, 107085824, 107085824, 107085824 ns/op
Iteration   1: n = 471, mean = 2121828 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1959936, 1990656, 2260173, 2367488, 4045537, 10944512, 10944512, 10944512 ns/op
Iteration   2: n = 492, mean = 2034846 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1951744, 1976320, 2125824, 2252800, 3312968, 5185536, 5185536, 5185536 ns/op
Iteration   3: n = 502, mean = 1994348 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1947648, 1964032, 2003763, 2066125, 2895258, 3969024, 3969024, 3969024 ns/op
Iteration   4: n = 500, mean = 2000437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1947648, 1970176, 2011136, 2058240, 3212820, 4440064, 4440064, 4440064 ns/op
Iteration   5: n = 501, mean = 1997503 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1953792, 1972224, 2012774, 2060288, 2787246, 4505600, 4505600, 4505600 ns/op
Iteration   6: n = 498, mean = 2007912 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1949696, 1970176, 2029568, 2060493, 3294167, 3915776, 3915776, 3915776 ns/op
Iteration   7: n = 499, mean = 2006810 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1949696, 1968128, 2064384, 2146304, 2834432, 3813376, 3813376, 3813376 ns/op
Iteration   8: n = 498, mean = 2008817 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1953792, 1970176, 2013184, 2072883, 3674358, 4173824, 4173824, 4173824 ns/op
Iteration   9: n = 499, mean = 2006605 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1951744, 1972224, 2009088, 2064384, 2994176, 5054464, 5054464, 5054464 ns/op
Iteration  10: n = 503, mean = 1996100 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1949696, 1970176, 2009088, 2057830, 2898166, 3665920, 3665920, 3665920 ns/op


Result "deserialization_events_2k":
  N = 4963
  mean = 2016868.584 ±(99.9%) 12914.476 ns/op

  Histogram, ns/op:
    [ 1000000.000,  2000000.000) = 4039 
    [ 2000000.000,  3000000.000) = 878 
    [ 3000000.000,  4000000.000) = 35 
    [ 4000000.000,  5000000.000) = 6 
    [ 5000000.000,  6000000.000) = 2 
    [ 6000000.000,  7000000.000) = 0 
    [ 7000000.000,  8000000.000) = 0 
    [ 8000000.000,  9000000.000) = 0 
    [ 9000000.000, 10000000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 1947648.000 ns/op
     p(50.0000) = 1972224.000 ns/op
     p(90.0000) = 2054144.000 ns/op
     p(95.0000) = 2138112.000 ns/op
     p(99.0000) = 2986311.680 ns/op
     p(99.9000) = 5059182.592 ns/op
     p(99.9900) = 10944512.000 ns/op
     p(99.9990) = 10944512.000 ns/op
     p(99.9999) = 10944512.000 ns/op
    p(100.0000) = 10944512.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_events_4k

# Run progress: 78.33% complete, ETA 00:15:27
# Fork: 1 of 1
# Warmup Iteration   1: n = 58, mean = 17229471 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 10600448, 12296192, 24002560, 28341043, 131203072, 131203072, 131203072, 131203072 ns/op
Iteration   1: n = 204, mean = 4906908 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4071424, 4382720, 5890048, 9449472, 12007014, 22544384, 22544384, 22544384 ns/op
Iteration   2: n = 237, mean = 4226450 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4063232, 4108288, 4456448, 4571955, 7477166, 7741440, 7741440, 7741440 ns/op
Iteration   3: n = 239, mean = 4184415 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4034560, 4083712, 4210688, 4718592, 7797146, 8036352, 8036352, 8036352 ns/op
Iteration   4: n = 243, mean = 4120188 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4022272, 4063232, 4155802, 4274586, 6482166, 7856128, 7856128, 7856128 ns/op
Iteration   5: n = 241, mean = 4153293 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4022272, 4079616, 4189389, 4250829, 7678034, 7847936, 7847936, 7847936 ns/op
Iteration   6: n = 241, mean = 4160584 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4079616, 4108288, 4218880, 4257382, 6327173, 8019968, 8019968, 8019968 ns/op
Iteration   7: n = 241, mean = 4154891 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4079616, 4108288, 4144333, 4349133, 5599396, 7593984, 7593984, 7593984 ns/op
Iteration   8: n = 239, mean = 4197680 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4087808, 4112384, 4190208, 4390912, 7638221, 7905280, 7905280, 7905280 ns/op
Iteration   9: n = 240, mean = 4179490 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4083712, 4108288, 4250829, 4405658, 6164480, 7405568, 7405568, 7405568 ns/op
Iteration  10: n = 241, mean = 4163185 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4083712, 4112384, 4225434, 4349133, 5284332, 6643712, 6643712, 6643712 ns/op


Result "deserialization_events_4k":
  N = 2366
  mean = 4234396.673 ±(99.9%) 47350.470 ns/op

  Histogram, ns/op:
    [       0.000,  2500000.000) = 0 
    [ 2500000.000,  5000000.000) = 2293 
    [ 5000000.000,  7500000.000) = 44 
    [ 7500000.000, 10000000.000) = 24 
    [10000000.000, 12500000.000) = 4 
    [12500000.000, 15000000.000) = 0 
    [15000000.000, 17500000.000) = 0 
    [17500000.000, 20000000.000) = 0 
    [20000000.000, 22500000.000) = 0 
    [22500000.000, 25000000.000) = 1 
    [25000000.000, 27500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 4022272.000 ns/op
     p(50.0000) = 4104192.000 ns/op
     p(90.0000) = 4349952.000 ns/op
     p(95.0000) = 4576460.800 ns/op
     p(99.0000) = 7719485.440 ns/op
     p(99.9000) = 11991433.216 ns/op
     p(99.9900) = 22544384.000 ns/op
     p(99.9990) = 22544384.000 ns/op
     p(99.9999) = 22544384.000 ns/op
    p(100.0000) = 22544384.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_events_64k

# Run progress: 78.61% complete, ETA 00:15:15
# Fork: 1 of 1
# Warmup Iteration   1: n = 5, mean = 221800038 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 117047296, 158072832, 401604608, 401604608, 401604608, 401604608, 401604608, 401604608 ns/op
Iteration   1: n = 12, mean = 85502635 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 80216064, 84017152, 96390349, 97648640, 97648640, 97648640, 97648640, 97648640 ns/op
Iteration   2: n = 13, mean = 82656020 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 80478208, 81002496, 88237670, 88342528, 88342528, 88342528, 88342528, 88342528 ns/op
Iteration   3: n = 13, mean = 82514865 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 80609280, 82051072, 85904589, 86900736, 86900736, 86900736, 86900736, 86900736 ns/op
Iteration   4: n = 13, mean = 81667938 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 80478208, 81133568, 85275443, 85852160, 85852160, 85852160, 85852160, 85852160 ns/op
Iteration   5: n = 13, mean = 82353546 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 80478208, 81526784, 88683315, 91881472, 91881472, 91881472, 91881472, 91881472 ns/op
Iteration   6: n = 13, mean = 81849423 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 80084992, 81526784, 85013299, 85590016, 85590016, 85590016, 85590016, 85590016 ns/op
Iteration   7: n = 13, mean = 82141814 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 80216064, 80347136, 90229965, 93061120, 93061120, 93061120, 93061120, 93061120 ns/op
Iteration   8: n = 13, mean = 81204145 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 80084992, 80871424, 84069581, 85327872, 85327872, 85327872, 85327872, 85327872 ns/op
Iteration   9: n = 13, mean = 81476372 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 80084992, 81133568, 84462797, 85196800, 85196800, 85196800, 85196800, 85196800 ns/op
Iteration  10: n = 13, mean = 81869588 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 80084992, 81002496, 88840602, 93192192, 93192192, 93192192, 93192192, 93192192 ns/op


Result "deserialization_events_64k":
  N = 129
  mean = 82298991.132 ±(99.9%) 912270.432 ns/op

  Histogram, ns/op:
    [ 80000000.000,  81250000.000) = 67 
    [ 81250000.000,  82500000.000) = 32 
    [ 82500000.000,  83750000.000) = 5 
    [ 83750000.000,  85000000.000) = 7 
    [ 85000000.000,  86250000.000) = 7 
    [ 86250000.000,  87500000.000) = 2 
    [ 87500000.000,  88750000.000) = 3 
    [ 88750000.000,  90000000.000) = 1 
    [ 90000000.000,  91250000.000) = 0 
    [ 91250000.000,  92500000.000) = 1 
    [ 92500000.000,  93750000.000) = 3 
    [ 93750000.000,  95000000.000) = 0 
    [ 95000000.000,  96250000.000) = 0 
    [ 96250000.000,  97500000.000) = 0 
    [ 97500000.000,  98750000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 80084992.000 ns/op
     p(50.0000) = 81133568.000 ns/op
     p(90.0000) = 85852160.000 ns/op
     p(95.0000) = 88866816.000 ns/op
     p(99.0000) = 96390348.800 ns/op
     p(99.9000) = 97648640.000 ns/op
     p(99.9900) = 97648640.000 ns/op
     p(99.9990) = 97648640.000 ns/op
     p(99.9999) = 97648640.000 ns/op
    p(100.0000) = 97648640.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_events_8k

# Run progress: 78.89% complete, ETA 00:15:03
# Fork: 1 of 1
# Warmup Iteration   1: n = 39, mean = 25638439 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9306112, 16875520, 58654720, 66191360, 156237824, 156237824, 156237824, 156237824 ns/op
Iteration   1: n = 102, mean = 9860116 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9043968, 9256960, 10685645, 11904614, 18960876, 18972672, 18972672, 18972672 ns/op
Iteration   2: n = 108, mean = 9322951 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9043968, 9109504, 9946726, 10045030, 12270633, 12320768, 12320768, 12320768 ns/op
Iteration   3: n = 109, mean = 9199541 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9043968, 9076736, 9355264, 9674752, 13556122, 13795328, 13795328, 13795328 ns/op
Iteration   4: n = 108, mean = 9322193 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9060352, 9093120, 9374925, 10190848, 17076060, 17465344, 17465344, 17465344 ns/op
Iteration   5: n = 108, mean = 9290942 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9060352, 9109504, 9453568, 10298982, 15150449, 15417344, 15417344, 15417344 ns/op
Iteration   6: n = 109, mean = 9183758 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9011200, 9076736, 9502720, 9764864, 12104499, 12304384, 12304384, 12304384 ns/op
Iteration   7: n = 107, mean = 9362920 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9043968, 9076736, 9607578, 11491738, 14772470, 14827520, 14827520, 14827520 ns/op
Iteration   8: n = 109, mean = 9216075 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9043968, 9076736, 9404416, 9945088, 15219098, 15794176, 15794176, 15794176 ns/op
Iteration   9: n = 109, mean = 9224643 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9027584, 9076736, 9568256, 9904128, 13325107, 13664256, 13664256, 13664256 ns/op
Iteration  10: n = 108, mean = 9276681 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9027584, 9093120, 9440461, 10028646, 16082698, 16334848, 16334848, 16334848 ns/op


Result "deserialization_events_8k":
  N = 1077
  mean = 9322526.425 ±(99.9%) 89119.422 ns/op

  Histogram, ns/op:
    [ 9000000.000, 10000000.000) = 1006 
    [10000000.000, 11000000.000) = 39 
    [11000000.000, 12000000.000) = 11 
    [12000000.000, 13000000.000) = 5 
    [13000000.000, 14000000.000) = 5 
    [14000000.000, 15000000.000) = 3 
    [15000000.000, 16000000.000) = 2 
    [16000000.000, 17000000.000) = 2 
    [17000000.000, 18000000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 9011200.000 ns/op
     p(50.0000) = 9093120.000 ns/op
     p(90.0000) = 9666560.000 ns/op
     p(95.0000) = 10128588.800 ns/op
     p(99.0000) = 14126612.480 ns/op
     p(99.9000) = 18942001.152 ns/op
     p(99.9900) = 18972672.000 ns/op
     p(99.9990) = 18972672.000 ns/op
     p(99.9999) = 18972672.000 ns/op
    p(100.0000) = 18972672.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_site_1k

# Run progress: 79.17% complete, ETA 00:14:51
# Fork: 1 of 1
# Warmup Iteration   1: n = 424, mean = 2354280 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 711680, 1491968, 5050368, 5199872, 9621504, 73400320, 73400320, 73400320 ns/op
Iteration   1: n = 1343, mean = 744689 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 700416, 707584, 737280, 840499, 1323254, 7960003, 8044544, 8044544 ns/op
Iteration   2: n = 1372, mean = 728372 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 701440, 707584, 739021, 843110, 921016, 5410296, 7700480, 7700480 ns/op
Iteration   3: n = 1364, mean = 733165 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 701440, 707584, 731136, 842752, 1329869, 6377206, 8142848, 8142848 ns/op
Iteration   4: n = 1387, mean = 720713 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 700416, 705536, 730112, 735232, 880476, 4770005, 5160960, 5160960 ns/op
Iteration   5: n = 1362, mean = 733785 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 701440, 704512, 735232, 844800, 1449452, 2513244, 2818048, 2818048 ns/op
Iteration   6: n = 1392, mean = 718273 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 701440, 705536, 720589, 735232, 967895, 3399629, 4546560, 4546560 ns/op
Iteration   7: n = 1393, mean = 717360 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 699392, 705536, 728064, 735232, 1077125, 2059817, 2297856, 2297856 ns/op
Iteration   8: n = 1406, mean = 711177 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 698368, 704512, 723968, 729754, 779356, 1679643, 1734656, 1734656 ns/op
Iteration   9: n = 1391, mean = 718603 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 700416, 705536, 727040, 736666, 1179156, 2026324, 2248704, 2248704 ns/op
Iteration  10: n = 1394, mean = 716863 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 702464, 706560, 726016, 738304, 872909, 1793372, 1837056, 1837056 ns/op


Result "deserialization_site_1k":
  N = 13804
  mean = 724170.070 ±(99.9%) 4732.597 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 13656 
    [1000000.000, 1500000.000) = 114 
    [1500000.000, 2000000.000) = 21 
    [2000000.000, 2500000.000) = 2 
    [2500000.000, 3000000.000) = 2 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 1 
    [4500000.000, 5000000.000) = 1 
    [5000000.000, 5500000.000) = 1 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 0 
    [6500000.000, 7000000.000) = 0 
    [7000000.000, 7500000.000) = 0 
    [7500000.000, 8000000.000) = 3 
    [8000000.000, 8500000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 698368.000 ns/op
     p(50.0000) = 706560.000 ns/op
     p(90.0000) = 729088.000 ns/op
     p(95.0000) = 749312.000 ns/op
     p(99.0000) = 1062604.800 ns/op
     p(99.9000) = 2044272.640 ns/op
     p(99.9900) = 8105443.328 ns/op
     p(99.9990) = 8142848.000 ns/op
     p(99.9999) = 8142848.000 ns/op
    p(100.0000) = 8142848.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_site_2k

# Run progress: 79.44% complete, ETA 00:14:39
# Fork: 1 of 1
# Warmup Iteration   1: n = 195, mean = 5123434 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1464320, 2887680, 8110080, 8506573, 27158118, 112721920, 112721920, 112721920 ns/op
Iteration   1: n = 790, mean = 1277568 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1169408, 1187840, 1318912, 1463808, 2737234, 8617984, 8617984, 8617984 ns/op
Iteration   2: n = 816, mean = 1224942 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1169408, 1175552, 1310720, 1318912, 2364006, 8331264, 8331264, 8331264 ns/op
Iteration   3: n = 826, mean = 1210794 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1167360, 1175552, 1215078, 1310720, 2220728, 8929280, 8929280, 8929280 ns/op
Iteration   4: n = 830, mean = 1204493 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1167360, 1175552, 1222451, 1318912, 1723290, 3174400, 3174400, 3174400 ns/op
Iteration   5: n = 833, mean = 1199526 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1167360, 1175552, 1223885, 1312768, 1806213, 2355200, 2355200, 2355200 ns/op
Iteration   6: n = 826, mean = 1210061 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1165312, 1177600, 1220608, 1245184, 2312806, 4423680, 4423680, 4423680 ns/op
Iteration   7: n = 834, mean = 1199281 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1165312, 1179648, 1200128, 1220608, 2071450, 2650112, 2650112, 2650112 ns/op
Iteration   8: n = 836, mean = 1196203 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1171456, 1175552, 1204838, 1226752, 1847828, 2400256, 2400256, 2400256 ns/op
Iteration   9: n = 836, mean = 1195341 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1167360, 1175552, 1200128, 1216512, 1941238, 2469888, 2469888, 2469888 ns/op
Iteration  10: n = 833, mean = 1200160 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1169408, 1175552, 1210368, 1231462, 2193654, 3366912, 3366912, 3366912 ns/op


Result "deserialization_site_2k":
  N = 8260
  mean = 1211459.688 ±(99.9%) 8666.743 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 8104 
    [1500000.000, 2000000.000) = 61 
    [2000000.000, 2500000.000) = 66 
    [2500000.000, 3000000.000) = 16 
    [3000000.000, 3500000.000) = 4 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 1 
    [4500000.000, 5000000.000) = 1 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 1 
    [6000000.000, 6500000.000) = 0 
    [6500000.000, 7000000.000) = 0 
    [7000000.000, 7500000.000) = 0 
    [7500000.000, 8000000.000) = 0 
    [8000000.000, 8500000.000) = 3 

  Percentiles, ns/op:
      p(0.0000) = 1165312.000 ns/op
     p(50.0000) = 1177600.000 ns/op
     p(90.0000) = 1218560.000 ns/op
     p(95.0000) = 1312768.000 ns/op
     p(99.0000) = 2210938.880 ns/op
     p(99.9000) = 4225904.640 ns/op
     p(99.9900) = 8929280.000 ns/op
     p(99.9990) = 8929280.000 ns/op
     p(99.9999) = 8929280.000 ns/op
    p(100.0000) = 8929280.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_site_4k

# Run progress: 79.72% complete, ETA 00:14:28
# Fork: 1 of 1
# Warmup Iteration   1: n = 85, mean = 11767374 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3252224, 9961472, 15309210, 20031078, 114425856, 114425856, 114425856, 114425856 ns/op
Iteration   1: n = 420, mean = 2381366 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2187264, 2215936, 2428518, 2682061, 6343311, 12533760, 12533760, 12533760 ns/op
Iteration   2: n = 443, mean = 2259753 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2166784, 2195456, 2334720, 2358477, 2933883, 9453568, 9453568, 9453568 ns/op
Iteration   3: n = 442, mean = 2276662 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2166784, 2191360, 2318336, 2362163, 4614062, 10731520, 10731520, 10731520 ns/op
Iteration   4: n = 450, mean = 2220651 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2158592, 2183168, 2314240, 2344755, 2916270, 4358144, 4358144, 4358144 ns/op
Iteration   5: n = 450, mean = 2222690 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2166784, 2187264, 2305229, 2334720, 3160023, 4100096, 4100096, 4100096 ns/op
Iteration   6: n = 449, mean = 2226518 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2162688, 2183168, 2220032, 2297856, 3823616, 4448256, 4448256, 4448256 ns/op
Iteration   7: n = 452, mean = 2213063 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2166784, 2183168, 2251571, 2273280, 2808259, 4341760, 4341760, 4341760 ns/op
Iteration   8: n = 454, mean = 2201140 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2166784, 2183168, 2222080, 2266112, 2426266, 4124672, 4124672, 4124672 ns/op
Iteration   9: n = 449, mean = 2229446 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2166784, 2183168, 2224128, 2269184, 4071424, 6750208, 6750208, 6750208 ns/op
Iteration  10: n = 452, mean = 2213607 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2162688, 2183168, 2244608, 2282906, 2716099, 4308992, 4308992, 4308992 ns/op


Result "deserialization_site_4k":
  N = 4461
  mean = 2243428.139 ±(99.9%) 18491.858 ns/op

  Histogram, ns/op:
    [       0.000,  1250000.000) = 0 
    [ 1250000.000,  2500000.000) = 4363 
    [ 2500000.000,  3750000.000) = 60 
    [ 3750000.000,  5000000.000) = 27 
    [ 5000000.000,  6250000.000) = 2 
    [ 6250000.000,  7500000.000) = 3 
    [ 7500000.000,  8750000.000) = 0 
    [ 8750000.000, 10000000.000) = 4 
    [10000000.000, 11250000.000) = 1 
    [11250000.000, 12500000.000) = 0 
    [12500000.000, 13750000.000) = 1 
    [13750000.000, 15000000.000) = 0 
    [15000000.000, 16250000.000) = 0 
    [16250000.000, 17500000.000) = 0 
    [17500000.000, 18750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 2158592.000 ns/op
     p(50.0000) = 2187264.000 ns/op
     p(90.0000) = 2301952.000 ns/op
     p(95.0000) = 2347008.000 ns/op
     p(99.0000) = 3398696.960 ns/op
     p(99.9000) = 9541713.920 ns/op
     p(99.9900) = 12533760.000 ns/op
     p(99.9990) = 12533760.000 ns/op
     p(99.9999) = 12533760.000 ns/op
    p(100.0000) = 12533760.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_site_64k

# Run progress: 80.00% complete, ETA 00:14:16
# Fork: 1 of 1
# Warmup Iteration   1: n = 9, mean = 111942770 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 34144256, 73007104, 250347520, 250347520, 250347520, 250347520, 250347520, 250347520 ns/op
Iteration   1: n = 29, mean = 35674183 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 34013184, 34340864, 42205184, 43057152, 43188224, 43188224, 43188224, 43188224 ns/op
Iteration   2: n = 28, mean = 35813083 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 34078720, 34799616, 40088371, 43722342, 45875200, 45875200, 45875200, 45875200 ns/op
Iteration   3: n = 29, mean = 34946507 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33816576, 34144256, 36306944, 41287680, 46202880, 46202880, 46202880, 46202880 ns/op
Iteration   4: n = 29, mean = 34607528 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33882112, 33947648, 37027840, 40828928, 40828928, 40828928, 40828928, 40828928 ns/op
Iteration   5: n = 30, mean = 34146441 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33882112, 33947648, 34989670, 36061184, 36962304, 36962304, 36962304, 36962304 ns/op
Iteration   6: n = 30, mean = 34430430 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33816576, 33947648, 34734080, 39780352, 45547520, 45547520, 45547520, 45547520 ns/op
Iteration   7: n = 30, mean = 34229453 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33816576, 33947648, 34583347, 36719821, 38666240, 38666240, 38666240, 38666240 ns/op
Iteration   8: n = 30, mean = 34233822 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33816576, 33947648, 36064461, 36962304, 36962304, 36962304, 36962304, 36962304 ns/op
Iteration   9: n = 30, mean = 34447906 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33816576, 33914880, 35343565, 39043072, 42467328, 42467328, 42467328, 42467328 ns/op
Iteration  10: n = 30, mean = 34281882 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33816576, 33947648, 34983117, 37522637, 40370176, 40370176, 40370176, 40370176 ns/op


Result "deserialization_site_64k":
  N = 295
  mean = 34669432.624 ±(99.9%) 366628.387 ns/op

  Histogram, ns/op:
    [30000000.000, 31250000.000) = 0 
    [31250000.000, 32500000.000) = 0 
    [32500000.000, 33750000.000) = 0 
    [33750000.000, 35000000.000) = 247 
    [35000000.000, 36250000.000) = 25 
    [36250000.000, 37500000.000) = 9 
    [37500000.000, 38750000.000) = 1 
    [38750000.000, 40000000.000) = 1 
    [40000000.000, 41250000.000) = 4 
    [41250000.000, 42500000.000) = 3 
    [42500000.000, 43750000.000) = 2 
    [43750000.000, 45000000.000) = 0 
    [45000000.000, 46250000.000) = 3 
    [46250000.000, 47500000.000) = 0 
    [47500000.000, 48750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 33816576.000 ns/op
     p(50.0000) = 34013184.000 ns/op
     p(90.0000) = 36005478.400 ns/op
     p(95.0000) = 37512806.400 ns/op
     p(99.0000) = 45560627.200 ns/op
     p(99.9000) = 46202880.000 ns/op
     p(99.9900) = 46202880.000 ns/op
     p(99.9990) = 46202880.000 ns/op
     p(99.9999) = 46202880.000 ns/op
    p(100.0000) = 46202880.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.deserialization_site_8k

# Run progress: 80.28% complete, ETA 00:14:04
# Fork: 1 of 1
# Warmup Iteration   1: n = 73, mean = 13700727 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4751360, 11075584, 25873613, 27695514, 112197632, 112197632, 112197632, 112197632 ns/op
Iteration   1: n = 209, mean = 4791693 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4505600, 4554752, 4816896, 5234688, 11976704, 12632064, 12632064, 12632064 ns/op
Iteration   2: n = 211, mean = 4743595 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4505600, 4579328, 4808704, 4841472, 12060590, 12255232, 12255232, 12255232 ns/op
Iteration   3: n = 217, mean = 4608321 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4489216, 4521984, 4615373, 4694835, 8711700, 9338880, 9338880, 9338880 ns/op
Iteration   4: n = 216, mean = 4629201 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4521984, 4554752, 4808704, 4842701, 5796413, 6324224, 6324224, 6324224 ns/op
Iteration   5: n = 216, mean = 4646988 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4497408, 4546560, 4666163, 4841882, 8841134, 8945664, 8945664, 8945664 ns/op
Iteration   6: n = 220, mean = 4556651 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4489216, 4513792, 4587520, 4660838, 5384438, 8749056, 8749056, 8749056 ns/op
Iteration   7: n = 220, mean = 4548198 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4489216, 4513792, 4554752, 4676813, 5558600, 6856704, 6856704, 6856704 ns/op
Iteration   8: n = 217, mean = 4605905 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4489216, 4513792, 4682547, 4932403, 8327987, 8814592, 8814592, 8814592 ns/op
Iteration   9: n = 219, mean = 4567470 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4481024, 4513792, 4636672, 4661248, 7618560, 8355840, 8355840, 8355840 ns/op
Iteration  10: n = 220, mean = 4546150 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4489216, 4513792, 4570317, 4660838, 5740134, 6537216, 6537216, 6537216 ns/op


Result "deserialization_site_8k":
  N = 2165
  mean = 4623095.605 ±(99.9%) 38101.575 ns/op

  Histogram, ns/op:
    [ 4000000.000,  4500000.000) = 376 
    [ 4500000.000,  5000000.000) = 1730 
    [ 5000000.000,  5500000.000) = 22 
    [ 5500000.000,  6000000.000) = 10 
    [ 6000000.000,  6500000.000) = 4 
    [ 6500000.000,  7000000.000) = 3 
    [ 7000000.000,  7500000.000) = 1 
    [ 7500000.000,  8000000.000) = 1 
    [ 8000000.000,  8500000.000) = 2 
    [ 8500000.000,  9000000.000) = 7 
    [ 9000000.000,  9500000.000) = 1 
    [ 9500000.000, 10000000.000) = 2 
    [10000000.000, 10500000.000) = 1 
    [10500000.000, 11000000.000) = 0 
    [11000000.000, 11500000.000) = 0 
    [11500000.000, 12000000.000) = 1 
    [12000000.000, 12500000.000) = 3 

  Percentiles, ns/op:
      p(0.0000) = 4481024.000 ns/op
     p(50.0000) = 4530176.000 ns/op
     p(90.0000) = 4702208.000 ns/op
     p(95.0000) = 4816896.000 ns/op
     p(99.0000) = 6791823.360 ns/op
     p(99.9000) = 12244353.024 ns/op
     p(99.9900) = 12632064.000 ns/op
     p(99.9990) = 12632064.000 ns/op
     p(99.9999) = 12632064.000 ns/op
    p(100.0000) = 12632064.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_events_1k

# Run progress: 80.56% complete, ETA 00:13:52
# Fork: 1 of 1
# Warmup Iteration   1: n = 449, mean = 2223152 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 831488, 912384, 4497408, 4685824, 7675904, 30867456, 30867456, 30867456 ns/op
Iteration   1: n = 1117, mean = 895291 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 830464, 844800, 990208, 999526, 1233101, 7969800, 7987200, 7987200 ns/op
Iteration   2: n = 1162, mean = 860416 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 823296, 839680, 883098, 978790, 1105613, 4364845, 4784128, 4784128 ns/op
Iteration   3: n = 1174, mean = 851295 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 829440, 834560, 861696, 872704, 1111552, 2813440, 2895872, 2895872 ns/op
Iteration   4: n = 1178, mean = 848991 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 829440, 834560, 857088, 864256, 1462047, 1838107, 1857536, 1857536 ns/op
Iteration   5: n = 1174, mean = 851628 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 828416, 834560, 857088, 878592, 1501696, 2614579, 2686976, 2686976 ns/op
Iteration   6: n = 1185, mean = 843868 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 828416, 834560, 856064, 867328, 971162, 1922367, 1961984, 1961984 ns/op
Iteration   7: n = 1177, mean = 849361 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 828416, 834560, 857088, 868352, 1066742, 4558754, 5144576, 5144576 ns/op
Iteration   8: n = 1178, mean = 848926 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 829440, 835584, 860160, 870400, 1239327, 1866070, 1875968, 1875968 ns/op
Iteration   9: n = 1178, mean = 848903 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 829440, 834560, 856064, 869376, 1058161, 4653400, 5242880, 5242880 ns/op
Iteration  10: n = 1180, mean = 847284 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 828416, 834560, 858112, 866304, 945142, 4884009, 5562368, 5562368 ns/op


Result "serialization_events_1k":
  N = 11703
  mean = 854371.071 ±(99.9%) 4801.747 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 11494 
    [1000000.000, 1500000.000) = 152 
    [1500000.000, 2000000.000) = 44 
    [2000000.000, 2500000.000) = 3 
    [2500000.000, 3000000.000) = 3 
    [3000000.000, 3500000.000) = 0 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 1 
    [5000000.000, 5500000.000) = 2 
    [5500000.000, 6000000.000) = 1 
    [6000000.000, 6500000.000) = 0 
    [6500000.000, 7000000.000) = 0 
    [7000000.000, 7500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 823296.000 ns/op
     p(50.0000) = 835584.000 ns/op
     p(90.0000) = 862208.000 ns/op
     p(95.0000) = 893747.200 ns/op
     p(99.0000) = 1091420.160 ns/op
     p(99.9000) = 2318139.392 ns/op
     p(99.9900) = 7962073.498 ns/op
     p(99.9990) = 7987200.000 ns/op
     p(99.9999) = 7987200.000 ns/op
    p(100.0000) = 7987200.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_events_2k

# Run progress: 80.83% complete, ETA 00:13:40
# Fork: 1 of 1
# Warmup Iteration   1: n = 263, mean = 3797599 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1587200, 1871872, 8205107, 8522957, 14029947, 36438016, 36438016, 36438016 ns/op
Iteration   1: n = 595, mean = 1679935 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1558528, 1581056, 1744896, 1759232, 3023667, 8962048, 8962048, 8962048 ns/op
Iteration   2: n = 623, mean = 1604879 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1554432, 1566720, 1701888, 1720320, 2146304, 4177920, 4177920, 4177920 ns/op
Iteration   3: n = 629, mean = 1590111 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1552384, 1560576, 1593344, 1686528, 2444902, 3624960, 3624960, 3624960 ns/op
Iteration   4: n = 633, mean = 1580762 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1552384, 1560576, 1597440, 1626726, 1997660, 3764224, 3764224, 3764224 ns/op
Iteration   5: n = 629, mean = 1589232 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1550336, 1558528, 1609728, 1624064, 2390835, 6086656, 6086656, 6086656 ns/op
Iteration   6: n = 628, mean = 1592793 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1552384, 1564672, 1630208, 1657958, 2520392, 3063808, 3063808, 3063808 ns/op
Iteration   7: n = 634, mean = 1576702 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1550336, 1560576, 1586176, 1611776, 1984512, 2867200, 2867200, 2867200 ns/op
Iteration   8: n = 633, mean = 1579956 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1552384, 1560576, 1589248, 1608294, 2254275, 2990080, 2990080, 2990080 ns/op
Iteration   9: n = 612, mean = 1633374 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1552384, 1567744, 1723802, 1985331, 2669363, 3051520, 3051520, 3051520 ns/op
Iteration  10: n = 596, mean = 1679710 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1550336, 1609728, 1823744, 2030490, 2984100, 4374528, 4374528, 4374528 ns/op


Result "serialization_events_2k":
  N = 6212
  mean = 1609880.314 ±(99.9%) 9688.639 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 0 
    [1500000.000, 2000000.000) = 6087 
    [2000000.000, 2500000.000) = 59 
    [2500000.000, 3000000.000) = 45 
    [3000000.000, 3500000.000) = 12 
    [3500000.000, 4000000.000) = 2 
    [4000000.000, 4500000.000) = 3 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 1 
    [6500000.000, 7000000.000) = 0 
    [7000000.000, 7500000.000) = 0 
    [7500000.000, 8000000.000) = 0 
    [8000000.000, 8500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 1550336.000 ns/op
     p(50.0000) = 1562624.000 ns/op
     p(90.0000) = 1671168.000 ns/op
     p(95.0000) = 1742848.000 ns/op
     p(99.0000) = 2533294.080 ns/op
     p(99.9000) = 4332650.496 ns/op
     p(99.9900) = 8962048.000 ns/op
     p(99.9990) = 8962048.000 ns/op
     p(99.9999) = 8962048.000 ns/op
    p(100.0000) = 8962048.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_events_4k

# Run progress: 81.11% complete, ETA 00:13:29
# Fork: 1 of 1
# Warmup Iteration   1: n = 58, mean = 17217465 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4636672, 16326656, 30769152, 34350694, 104333312, 104333312, 104333312, 104333312 ns/op
Iteration   1: n = 238, mean = 4196197 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3153920, 3538944, 6384026, 6727680, 10592256, 12943360, 12943360, 12943360 ns/op
Iteration   2: n = 255, mean = 3925703 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3325952, 3502080, 5128192, 6184960, 7043809, 13271040, 13271040, 13271040 ns/op
Iteration   3: n = 295, mean = 3397278 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3170304, 3227648, 3688038, 4197581, 6123028, 9404416, 9404416, 9404416 ns/op
Iteration   4: n = 306, mean = 3269505 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3170304, 3198976, 3309568, 3376333, 5012029, 9109504, 9109504, 9109504 ns/op
Iteration   5: n = 310, mean = 3225626 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3166208, 3190784, 3317350, 3360563, 3757957, 5390336, 5390336, 5390336 ns/op
Iteration   6: n = 309, mean = 3244403 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3166208, 3190784, 3239936, 3338240, 4598989, 7176192, 7176192, 7176192 ns/op
Iteration   7: n = 304, mean = 3294787 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3166208, 3194880, 3293184, 3635200, 6360678, 8814592, 8814592, 8814592 ns/op
Iteration   8: n = 309, mean = 3236715 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3170304, 3194880, 3244032, 3297280, 4184064, 8503296, 8503296, 8503296 ns/op
Iteration   9: n = 308, mean = 3248913 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3166208, 3194880, 3260416, 3315917, 4521411, 8060928, 8060928, 8060928 ns/op
Iteration  10: n = 307, mean = 3261537 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3166208, 3194880, 3293184, 3373466, 4485612, 10223616, 10223616, 10223616 ns/op


Result "serialization_events_4k":
  N = 2941
  mean = 3403126.991 ±(99.9%) 41998.176 ns/op

  Histogram, ns/op:
    [       0.000,  1250000.000) = 0 
    [ 1250000.000,  2500000.000) = 0 
    [ 2500000.000,  3750000.000) = 2681 
    [ 3750000.000,  5000000.000) = 163 
    [ 5000000.000,  6250000.000) = 49 
    [ 6250000.000,  7500000.000) = 36 
    [ 7500000.000,  8750000.000) = 4 
    [ 8750000.000, 10000000.000) = 3 
    [10000000.000, 11250000.000) = 3 
    [11250000.000, 12500000.000) = 0 
    [12500000.000, 13750000.000) = 2 
    [13750000.000, 15000000.000) = 0 
    [15000000.000, 16250000.000) = 0 
    [16250000.000, 17500000.000) = 0 
    [17500000.000, 18750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 3153920.000 ns/op
     p(50.0000) = 3203072.000 ns/op
     p(90.0000) = 3629056.000 ns/op
     p(95.0000) = 4308992.000 ns/op
     p(99.0000) = 6566543.360 ns/op
     p(99.9000) = 11029577.728 ns/op
     p(99.9900) = 13271040.000 ns/op
     p(99.9990) = 13271040.000 ns/op
     p(99.9999) = 13271040.000 ns/op
    p(100.0000) = 13271040.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_events_64k

# Run progress: 81.39% complete, ETA 00:13:17
# Fork: 1 of 1
# Warmup Iteration   1: n = 5, mean = 200409088 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 76152832, 212336640, 295174144, 295174144, 295174144, 295174144, 295174144, 295174144 ns/op
Iteration   1: n = 15, mean = 69026884 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 64421888, 69468160, 75313971, 76021760, 76021760, 76021760, 76021760, 76021760 ns/op
Iteration   2: n = 16, mean = 66318336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 64487424, 65175552, 70071091, 71172096, 71172096, 71172096, 71172096, 71172096 ns/op
Iteration   3: n = 16, mean = 65368064 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 64421888, 64782336, 68511334, 70254592, 70254592, 70254592, 70254592, 70254592 ns/op
Iteration   4: n = 16, mean = 65474560 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 64421888, 64815104, 68603085, 73007104, 73007104, 73007104, 73007104, 73007104 ns/op
Iteration   5: n = 16, mean = 65355776 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 64421888, 65142784, 66945024, 67633152, 67633152, 67633152, 67633152, 67633152 ns/op
Iteration   6: n = 16, mean = 65540096 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 64421888, 64684032, 69297766, 73793536, 73793536, 73793536, 73793536, 73793536 ns/op
Iteration   7: n = 16, mean = 65396736 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 64487424, 64749568, 67488973, 69599232, 69599232, 69599232, 69599232, 69599232 ns/op
Iteration   8: n = 16, mean = 65560576 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 64487424, 64913408, 67829760, 68288512, 68288512, 68288512, 68288512, 68288512 ns/op
Iteration   9: n = 16, mean = 65495040 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 64356352, 64847872, 68668621, 71696384, 71696384, 71696384, 71696384, 71696384 ns/op
Iteration  10: n = 16, mean = 65626112 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 64421888, 64880640, 69455053, 72482816, 72482816, 72482816, 72482816, 72482816 ns/op


Result "serialization_events_64k":
  N = 159
  mean = 65896654.088 ±(99.9%) 617714.911 ns/op

  Histogram, ns/op:
    [60000000.000, 61250000.000) = 0 
    [61250000.000, 62500000.000) = 0 
    [62500000.000, 63750000.000) = 0 
    [63750000.000, 65000000.000) = 84 
    [65000000.000, 66250000.000) = 38 
    [66250000.000, 67500000.000) = 12 
    [67500000.000, 68750000.000) = 8 
    [68750000.000, 70000000.000) = 6 
    [70000000.000, 71250000.000) = 2 
    [71250000.000, 72500000.000) = 4 
    [72500000.000, 73750000.000) = 1 
    [73750000.000, 75000000.000) = 3 
    [75000000.000, 76250000.000) = 1 
    [76250000.000, 77500000.000) = 0 
    [77500000.000, 78750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 64356352.000 ns/op
     p(50.0000) = 64880640.000 ns/op
     p(90.0000) = 69468160.000 ns/op
     p(95.0000) = 72220672.000 ns/op
     p(99.0000) = 75313971.200 ns/op
     p(99.9000) = 76021760.000 ns/op
     p(99.9900) = 76021760.000 ns/op
     p(99.9990) = 76021760.000 ns/op
     p(99.9999) = 76021760.000 ns/op
    p(100.0000) = 76021760.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_events_8k

# Run progress: 81.67% complete, ETA 00:13:05
# Fork: 1 of 1
# Warmup Iteration   1: n = 73, mean = 13735066 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7200768, 7905280, 33017037, 36254515, 68681728, 68681728, 68681728, 68681728 ns/op
Iteration   1: n = 134, mean = 7473121 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7012352, 7163904, 7634944, 7768064, 14530970, 14794752, 14794752, 14794752 ns/op
Iteration   2: n = 137, mean = 7301404 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7053312, 7135232, 7652966, 7800422, 11305288, 11747328, 11747328, 11747328 ns/op
Iteration   3: n = 139, mean = 7228291 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7045120, 7086080, 7323648, 8044544, 12402688, 13287424, 13287424, 13287424 ns/op
Iteration   4: n = 139, mean = 7237072 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7053312, 7102464, 7364608, 7815168, 12740198, 13369344, 13369344, 13369344 ns/op
Iteration   5: n = 140, mean = 7174905 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7045120, 7077888, 7247462, 7597670, 10544906, 11075584, 11075584, 11075584 ns/op
Iteration   6: n = 137, mean = 7319821 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7045120, 7094272, 7330202, 8404992, 11930829, 11993088, 11993088, 11993088 ns/op
Iteration   7: n = 139, mean = 7194816 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7053312, 7086080, 7217152, 7659520, 10819994, 11763712, 11763712, 11763712 ns/op
Iteration   8: n = 140, mean = 7189533 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7028736, 7094272, 7239270, 7869235, 10684989, 12189696, 12189696, 12189696 ns/op
Iteration   9: n = 139, mean = 7219627 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7045120, 7077888, 7315456, 7847936, 13054771, 15532032, 15532032, 15532032 ns/op
Iteration  10: n = 139, mean = 7196996 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7045120, 7077888, 7282688, 7913472, 11567104, 12943360, 12943360, 12943360 ns/op


Result "serialization_events_8k":
  N = 1383
  mean = 7252496.659 ±(99.9%) 62184.828 ns/op

  Histogram, ns/op:
    [ 7000000.000,  7500000.000) = 1250 
    [ 7500000.000,  8000000.000) = 74 
    [ 8000000.000,  8500000.000) = 29 
    [ 8500000.000,  9000000.000) = 4 
    [ 9000000.000,  9500000.000) = 2 
    [ 9500000.000, 10000000.000) = 4 
    [10000000.000, 10500000.000) = 0 
    [10500000.000, 11000000.000) = 1 
    [11000000.000, 11500000.000) = 3 
    [11500000.000, 12000000.000) = 7 
    [12000000.000, 12500000.000) = 2 
    [12500000.000, 13000000.000) = 1 
    [13000000.000, 13500000.000) = 2 
    [13500000.000, 14000000.000) = 1 
    [14000000.000, 14500000.000) = 1 
    [14500000.000, 15000000.000) = 1 
    [15000000.000, 15500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 7012352.000 ns/op
     p(50.0000) = 7086080.000 ns/op
     p(90.0000) = 7471104.000 ns/op
     p(95.0000) = 7793868.800 ns/op
     p(99.0000) = 11768954.880 ns/op
     p(99.9000) = 15248916.480 ns/op
     p(99.9900) = 15532032.000 ns/op
     p(99.9990) = 15532032.000 ns/op
     p(99.9999) = 15532032.000 ns/op
    p(100.0000) = 15532032.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_site_1k

# Run progress: 81.94% complete, ETA 00:12:53
# Fork: 1 of 1
# Warmup Iteration   1: n = 1477, mean = 675794 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 361984, 369664, 1717862, 1966899, 3001385, 23371710, 35651584, 35651584 ns/op
Iteration   1: n = 2567, mean = 390369 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 367104, 371712, 393728, 487424, 551936, 5914493, 7512064, 7512064 ns/op
Iteration   2: n = 2579, mean = 387561 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 367104, 371712, 389632, 403968, 605184, 1969971, 11042816, 11042816 ns/op
Iteration   3: n = 2606, mean = 383478 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 369152, 371712, 386048, 400896, 543242, 1332528, 5070848, 5070848 ns/op
Iteration   4: n = 2639, mean = 378722 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 369664, 372224, 388096, 393728, 506573, 833249, 1263616, 1263616 ns/op
Iteration   5: n = 2653, mean = 376689 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 369152, 371712, 376320, 390810, 434565, 888791, 3641344, 3641344 ns/op
Iteration   6: n = 2626, mean = 380522 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 369152, 371712, 382464, 395264, 730583, 1261826, 1421312, 1421312 ns/op
Iteration   7: n = 2643, mean = 378182 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 368640, 371712, 379904, 392704, 602972, 831971, 2670592, 2670592 ns/op
Iteration   8: n = 2648, mean = 377465 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 369152, 371712, 378880, 392192, 514570, 926418, 1409024, 1409024 ns/op
Iteration   9: n = 2639, mean = 378665 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 369152, 371712, 376832, 392704, 696320, 916603, 1185792, 1185792 ns/op
Iteration  10: n = 2639, mean = 378631 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 369152, 371712, 384512, 393728, 519885, 1331528, 1374208, 1374208 ns/op


Result "serialization_site_1k":
  N = 26239
  mean = 380981.036 ±(99.9%) 2266.386 ns/op

  Histogram, ns/op:
    [       0.000,  1250000.000) = 26220 
    [ 1250000.000,  2500000.000) = 12 
    [ 2500000.000,  3750000.000) = 2 
    [ 3750000.000,  5000000.000) = 1 
    [ 5000000.000,  6250000.000) = 1 
    [ 6250000.000,  7500000.000) = 1 
    [ 7500000.000,  8750000.000) = 1 
    [ 8750000.000, 10000000.000) = 0 
    [10000000.000, 11250000.000) = 1 
    [11250000.000, 12500000.000) = 0 
    [12500000.000, 13750000.000) = 0 
    [13750000.000, 15000000.000) = 0 
    [15000000.000, 16250000.000) = 0 
    [16250000.000, 17500000.000) = 0 
    [17500000.000, 18750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 367104.000 ns/op
     p(50.0000) = 371712.000 ns/op
     p(90.0000) = 384512.000 ns/op
     p(95.0000) = 395776.000 ns/op
     p(99.0000) = 551936.000 ns/op
     p(99.9000) = 1020805.120 ns/op
     p(99.9900) = 7348486.144 ns/op
     p(99.9990) = 11042816.000 ns/op
     p(99.9999) = 11042816.000 ns/op
    p(100.0000) = 11042816.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_site_2k

# Run progress: 82.22% complete, ETA 00:12:41
# Fork: 1 of 1
# Warmup Iteration   1: n = 390, mean = 2558608 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 816128, 2570240, 3256730, 4647731, 8474706, 35848192, 35848192, 35848192 ns/op
Iteration   1: n = 1210, mean = 827434 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 780288, 797696, 829338, 934912, 1327104, 7907238, 7995392, 7995392 ns/op
Iteration   2: n = 1191, mean = 840047 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 782336, 795648, 929792, 946176, 1524531, 8317698, 8503296, 8503296 ns/op
Iteration   3: n = 1215, mean = 822771 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 797696, 806912, 828416, 836813, 1534034, 1953202, 2027520, 2027520 ns/op
Iteration   4: n = 1213, mean = 824406 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 789504, 806912, 835584, 940032, 1013883, 2065375, 2150400, 2150400 ns/op
Iteration   5: n = 1217, mean = 821654 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 797696, 806912, 836813, 854016, 1083023, 1875816, 1961984, 1961984 ns/op
Iteration   6: n = 1217, mean = 821232 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 800768, 807936, 827392, 833536, 1371587, 2347442, 2510848, 2510848 ns/op
Iteration   7: n = 1217, mean = 821833 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 797696, 806912, 832512, 842854, 1548698, 1661006, 1665024, 1665024 ns/op
Iteration   8: n = 1211, mean = 825248 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 799744, 807936, 835584, 846234, 1232650, 2059092, 2138112, 2138112 ns/op
Iteration   9: n = 1215, mean = 822884 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 797696, 807936, 834560, 850125, 1152287, 3010413, 3305472, 3305472 ns/op
Iteration  10: n = 1223, mean = 817582 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 796672, 809984, 826982, 840704, 951706, 1789608, 1861632, 1861632 ns/op


Result "serialization_site_2k":
  N = 12129
  mean = 824470.869 ±(99.9%) 4732.093 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 11946 
    [1000000.000, 1500000.000) = 96 
    [1500000.000, 2000000.000) = 76 
    [2000000.000, 2500000.000) = 4 
    [2500000.000, 3000000.000) = 1 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 1 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 0 
    [6500000.000, 7000000.000) = 0 
    [7000000.000, 7500000.000) = 0 
    [7500000.000, 8000000.000) = 3 
    [8000000.000, 8500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 780288.000 ns/op
     p(50.0000) = 806912.000 ns/op
     p(90.0000) = 833536.000 ns/op
     p(95.0000) = 861184.000 ns/op
     p(99.0000) = 1259520.000 ns/op
     p(99.9000) = 1959055.360 ns/op
     p(99.9900) = 8395112.448 ns/op
     p(99.9990) = 8503296.000 ns/op
     p(99.9999) = 8503296.000 ns/op
    p(100.0000) = 8503296.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_site_4k

# Run progress: 82.50% complete, ETA 00:12:30
# Fork: 1 of 1
# Warmup Iteration   1: n = 293, mean = 3412338 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1562624, 2445312, 7548109, 8211661, 14451999, 63307776, 63307776, 63307776 ns/op
Iteration   1: n = 597, mean = 1675288 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1574912, 1595392, 1728512, 1742848, 3207086, 8634368, 8634368, 8634368 ns/op
Iteration   2: n = 599, mean = 1671855 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1566720, 1599488, 1736704, 1779712, 3198976, 8798208, 8798208, 8798208 ns/op
Iteration   3: n = 624, mean = 1602393 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1574912, 1585152, 1615872, 1644544, 1806336, 3158016, 3158016, 3158016 ns/op
Iteration   4: n = 614, mean = 1628217 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1566720, 1585152, 1718272, 1741312, 2756608, 3330048, 3330048, 3330048 ns/op
Iteration   5: n = 623, mean = 1605869 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1570816, 1585152, 1637990, 1668710, 2038252, 3039232, 3039232, 3039232 ns/op
Iteration   6: n = 624, mean = 1603807 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1574912, 1585152, 1622016, 1644544, 1936896, 3100672, 3100672, 3100672 ns/op
Iteration   7: n = 622, mean = 1608602 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1572864, 1583104, 1630208, 1638400, 2040033, 3477504, 3477504, 3477504 ns/op
Iteration   8: n = 625, mean = 1601362 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1568768, 1583104, 1626112, 1640448, 1814774, 5300224, 5300224, 5300224 ns/op
Iteration   9: n = 620, mean = 1612546 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1572864, 1585152, 1609728, 1631846, 2392064, 5693440, 5693440, 5693440 ns/op
Iteration  10: n = 620, mean = 1615291 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1572864, 1587200, 1615872, 1673011, 2434785, 3158016, 3158016, 3158016 ns/op


Result "serialization_site_4k":
  N = 6168
  mean = 1622097.681 ±(99.9%) 10157.214 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 0 
    [1500000.000, 2000000.000) = 6084 
    [2000000.000, 2500000.000) = 29 
    [2500000.000, 3000000.000) = 14 
    [3000000.000, 3500000.000) = 33 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 1 
    [4500000.000, 5000000.000) = 1 
    [5000000.000, 5500000.000) = 1 
    [5500000.000, 6000000.000) = 1 
    [6000000.000, 6500000.000) = 0 
    [6500000.000, 7000000.000) = 0 
    [7000000.000, 7500000.000) = 0 
    [7500000.000, 8000000.000) = 0 
    [8000000.000, 8500000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 1566720.000 ns/op
     p(50.0000) = 1587200.000 ns/op
     p(90.0000) = 1642496.000 ns/op
     p(95.0000) = 1724416.000 ns/op
     p(99.0000) = 2351800.320 ns/op
     p(99.9000) = 5181161.472 ns/op
     p(99.9900) = 8798208.000 ns/op
     p(99.9990) = 8798208.000 ns/op
     p(99.9999) = 8798208.000 ns/op
    p(100.0000) = 8798208.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_site_64k

# Run progress: 82.78% complete, ETA 00:12:18
# Fork: 1 of 1
# Warmup Iteration   1: n = 25, mean = 40361001 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26247168, 29130752, 81998643, 145122918, 171704320, 171704320, 171704320, 171704320 ns/op
Iteration   1: n = 36, mean = 27942002 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26279936, 26607616, 32322355, 34412954, 35192832, 35192832, 35192832, 35192832 ns/op
Iteration   2: n = 38, mean = 26849064 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26116096, 26247168, 27964211, 31434342, 34734080, 34734080, 34734080, 34734080 ns/op
Iteration   3: n = 38, mean = 26830956 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26050560, 26214400, 27626701, 28624486, 37683200, 37683200, 37683200, 37683200 ns/op
Iteration   4: n = 38, mean = 26798188 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26017792, 26132480, 27266253, 35166618, 35913728, 35913728, 35913728, 35913728 ns/op
Iteration   5: n = 38, mean = 26456711 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26083328, 26116096, 27220378, 28753920, 29687808, 29687808, 29687808, 29687808 ns/op
Iteration   6: n = 38, mean = 26468783 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26083328, 26148864, 26617446, 28621210, 33882112, 33882112, 33882112, 33882112 ns/op
Iteration   7: n = 38, mean = 26636935 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26050560, 26214400, 27344896, 28899738, 35717120, 35717120, 35717120, 35717120 ns/op
Iteration   8: n = 38, mean = 26396349 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26083328, 26165248, 27282637, 27942912, 28409856, 28409856, 28409856, 28409856 ns/op
Iteration   9: n = 38, mean = 26518797 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26083328, 26198016, 27479245, 27834778, 30605312, 30605312, 30605312, 30605312 ns/op
Iteration  10: n = 38, mean = 26566225 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 26050560, 26148864, 27177779, 27911782, 37748736, 37748736, 37748736, 37748736 ns/op


Result "serialization_site_64k":
  N = 378
  mean = 26740075.005 ±(99.9%) 279041.815 ns/op

  Histogram, ns/op:
    [20000000.000, 21250000.000) = 0 
    [21250000.000, 22500000.000) = 0 
    [22500000.000, 23750000.000) = 0 
    [23750000.000, 25000000.000) = 0 
    [25000000.000, 26250000.000) = 229 
    [26250000.000, 27500000.000) = 111 
    [27500000.000, 28750000.000) = 17 
    [28750000.000, 30000000.000) = 8 
    [30000000.000, 31250000.000) = 1 
    [31250000.000, 32500000.000) = 2 
    [32500000.000, 33750000.000) = 1 
    [33750000.000, 35000000.000) = 3 
    [35000000.000, 36250000.000) = 4 
    [36250000.000, 37500000.000) = 0 
    [37500000.000, 38750000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 26017792.000 ns/op
     p(50.0000) = 26214400.000 ns/op
     p(90.0000) = 27528396.800 ns/op
     p(95.0000) = 29035724.800 ns/op
     p(99.0000) = 35758407.680 ns/op
     p(99.9000) = 37748736.000 ns/op
     p(99.9900) = 37748736.000 ns/op
     p(99.9990) = 37748736.000 ns/op
     p(99.9999) = 37748736.000 ns/op
    p(100.0000) = 37748736.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.JsonBenchmark.serialization_site_8k

# Run progress: 83.06% complete, ETA 00:12:06
# Fork: 1 of 1
# Warmup Iteration   1: n = 158, mean = 6332623 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3330048, 3864576, 11716198, 14019789, 38975570, 65732608, 65732608, 65732608 ns/op
Iteration   1: n = 288, mean = 3477234 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3313664, 3354624, 3510272, 3630899, 7535411, 10780672, 10780672, 10780672 ns/op
Iteration   2: n = 286, mean = 3496981 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3313664, 3387392, 3592192, 3637248, 6833848, 10682368, 10682368, 10682368 ns/op
Iteration   3: n = 296, mean = 3380224 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3313664, 3346432, 3384525, 3441254, 4918886, 7479296, 7479296, 7479296 ns/op
Iteration   4: n = 290, mean = 3447702 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3317760, 3358720, 3485696, 3551027, 6333727, 6602752, 6602752, 6602752 ns/op
Iteration   5: n = 296, mean = 3378550 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3301376, 3334144, 3428352, 3495731, 5059133, 6553600, 6553600, 6553600 ns/op
Iteration   6: n = 298, mean = 3362555 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3305472, 3334144, 3375104, 3449446, 4325376, 6193152, 6193152, 6193152 ns/op
Iteration   7: n = 296, mean = 3383199 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3309568, 3334144, 3375104, 3478118, 5649449, 6815744, 6815744, 6815744 ns/op
Iteration   8: n = 299, mean = 3352254 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3301376, 3330048, 3395584, 3461120, 3899392, 4218880, 4218880, 4218880 ns/op
Iteration   9: n = 297, mean = 3367808 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3301376, 3325952, 3371008, 3400090, 4272456, 8192000, 8192000, 8192000 ns/op
Iteration  10: n = 297, mean = 3367836 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3305472, 3334144, 3404595, 3458253, 4226253, 5783552, 5783552, 5783552 ns/op


Result "serialization_site_8k":
  N = 2943
  mean = 3400709.915 ±(99.9%) 22306.652 ns/op

  Histogram, ns/op:
    [ 3000000.000,  3500000.000) = 2746 
    [ 3500000.000,  4000000.000) = 151 
    [ 4000000.000,  4500000.000) = 14 
    [ 4500000.000,  5000000.000) = 5 
    [ 5000000.000,  5500000.000) = 4 
    [ 5500000.000,  6000000.000) = 6 
    [ 6000000.000,  6500000.000) = 4 
    [ 6500000.000,  7000000.000) = 7 
    [ 7000000.000,  7500000.000) = 2 
    [ 7500000.000,  8000000.000) = 0 
    [ 8000000.000,  8500000.000) = 1 
    [ 8500000.000,  9000000.000) = 0 
    [ 9000000.000,  9500000.000) = 0 
    [ 9500000.000, 10000000.000) = 1 
    [10000000.000, 10500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 3301376.000 ns/op
     p(50.0000) = 3342336.000 ns/op
     p(90.0000) = 3473408.000 ns/op
     p(95.0000) = 3518464.000 ns/op
     p(99.0000) = 4702208.000 ns/op
     p(99.9000) = 10017308.672 ns/op
     p(99.9900) = 10780672.000 ns/op
     p(99.9990) = 10780672.000 ns/op
     p(99.9999) = 10780672.000 ns/op
    p(100.0000) = 10780672.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_events_1k

# Run progress: 83.33% complete, ETA 00:11:54
# Fork: 1 of 1
# Warmup Iteration   1: n = 117, mean = 8540685 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3682304, 6103040, 16705126, 20512768, 58545930, 65470464, 65470464, 65470464 ns/op
Iteration   1: n = 295, mean = 3395417 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3022848, 3059712, 4959437, 5668864, 6585713, 8945664, 8945664, 8945664 ns/op
Iteration   2: n = 326, mean = 3071271 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2842624, 3047424, 3244442, 3342131, 6196756, 10780672, 10780672, 10780672 ns/op
Iteration   3: n = 336, mean = 2980693 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2834432, 2867200, 3110093, 3237069, 5392957, 13287424, 13287424, 13287424 ns/op
Iteration   4: n = 337, mean = 2968652 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2842624, 2879488, 3007283, 3203891, 6047826, 8167424, 8167424, 8167424 ns/op
Iteration   5: n = 344, mean = 2907624 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2826240, 2859008, 2899968, 3051520, 4830413, 6488064, 6488064, 6488064 ns/op
Iteration   6: n = 346, mean = 2895931 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2826240, 2854912, 2904064, 2992742, 4025917, 6127616, 6127616, 6127616 ns/op
Iteration   7: n = 346, mean = 2893741 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2830336, 2859008, 2908160, 2987213, 4083712, 4571136, 4571136, 4571136 ns/op
Iteration   8: n = 346, mean = 2891622 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2834432, 2859008, 2927002, 3005030, 3930030, 4382720, 4382720, 4382720 ns/op
Iteration   9: n = 343, mean = 2914047 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2834432, 2859008, 2917171, 3132621, 4675994, 5095424, 5095424, 5095424 ns/op
Iteration  10: n = 345, mean = 2902366 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2834432, 2859008, 2920448, 3034317, 4107551, 4874240, 4874240, 4874240 ns/op


Result "deserialization_events_1k":
  N = 3364
  mean = 2975510.221 ±(99.9%) 25983.717 ns/op

  Histogram, ns/op:
    [       0.000,  1250000.000) = 0 
    [ 1250000.000,  2500000.000) = 0 
    [ 2500000.000,  3750000.000) = 3274 
    [ 3750000.000,  5000000.000) = 47 
    [ 5000000.000,  6250000.000) = 27 
    [ 6250000.000,  7500000.000) = 12 
    [ 7500000.000,  8750000.000) = 1 
    [ 8750000.000, 10000000.000) = 1 
    [10000000.000, 11250000.000) = 1 
    [11250000.000, 12500000.000) = 0 
    [12500000.000, 13750000.000) = 1 
    [13750000.000, 15000000.000) = 0 
    [15000000.000, 16250000.000) = 0 
    [16250000.000, 17500000.000) = 0 
    [17500000.000, 18750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 2826240.000 ns/op
     p(50.0000) = 2867200.000 ns/op
     p(90.0000) = 3072000.000 ns/op
     p(95.0000) = 3289088.000 ns/op
     p(99.0000) = 5540659.200 ns/op
     p(99.9000) = 8661606.400 ns/op
     p(99.9900) = 13287424.000 ns/op
     p(99.9990) = 13287424.000 ns/op
     p(99.9999) = 13287424.000 ns/op
    p(100.0000) = 13287424.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_events_2k

# Run progress: 83.61% complete, ETA 00:11:42
# Fork: 1 of 1
# Warmup Iteration   1: n = 52, mean = 19260337 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6291456, 17793024, 37604557, 44630016, 86638592, 86638592, 86638592, 86638592 ns/op
Iteration   1: n = 128, mean = 7817472 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5226496, 6619136, 10556211, 11010867, 14297334, 14696448, 14696448, 14696448 ns/op
Iteration   2: n = 188, mean = 5335084 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4947968, 5242880, 5631181, 6214861, 9231401, 9289728, 9289728, 9289728 ns/op
Iteration   3: n = 195, mean = 5129326 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4956160, 4988928, 5347738, 5516493, 8699249, 9076736, 9076736, 9076736 ns/op
Iteration   4: n = 195, mean = 5127394 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4931584, 4980736, 5437850, 5488640, 8740536, 8929280, 8929280, 8929280 ns/op
Iteration   5: n = 189, mean = 5302868 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4915200, 4956160, 5898240, 8212480, 8706458, 8765440, 8765440, 8765440 ns/op
Iteration   6: n = 199, mean = 5025730 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4923392, 4964352, 5103616, 5275648, 6610944, 7151616, 7151616, 7151616 ns/op
Iteration   7: n = 196, mean = 5113313 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4915200, 4956160, 5163418, 5458739, 8564244, 12124160, 12124160, 12124160 ns/op
Iteration   8: n = 200, mean = 5013545 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4915200, 4947968, 5079040, 5248205, 6297764, 8536064, 8536064, 8536064 ns/op
Iteration   9: n = 198, mean = 5049085 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4915200, 4947968, 5021696, 5296128, 8411628, 11501568, 11501568, 11501568 ns/op
Iteration  10: n = 200, mean = 5017600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4915200, 4956160, 5062656, 5225267, 6402949, 8388608, 8388608, 8388608 ns/op


Result "deserialization_events_2k":
  N = 1888
  mean = 5304137.763 ±(99.9%) 79299.891 ns/op

  Histogram, ns/op:
    [ 4000000.000,  5000000.000) = 1245 
    [ 5000000.000,  6000000.000) = 474 
    [ 6000000.000,  7000000.000) = 68 
    [ 7000000.000,  8000000.000) = 11 
    [ 8000000.000,  9000000.000) = 34 
    [ 9000000.000, 10000000.000) = 26 
    [10000000.000, 11000000.000) = 22 
    [11000000.000, 12000000.000) = 4 
    [12000000.000, 13000000.000) = 2 
    [13000000.000, 14000000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 4915200.000 ns/op
     p(50.0000) = 4972544.000 ns/op
     p(90.0000) = 5768806.400 ns/op
     p(95.0000) = 7572684.800 ns/op
     p(99.0000) = 10371072.000 ns/op
     p(99.9000) = 13472956.416 ns/op
     p(99.9900) = 14696448.000 ns/op
     p(99.9990) = 14696448.000 ns/op
     p(99.9999) = 14696448.000 ns/op
    p(100.0000) = 14696448.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_events_4k

# Run progress: 83.89% complete, ETA 00:11:30
# Fork: 1 of 1
# Warmup Iteration   1: n = 22, mean = 46129897 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 16842752, 28114944, 125291725, 171599462, 179306496, 179306496, 179306496, 179306496 ns/op
Iteration   1: n = 54, mean = 18745420 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 15745024, 16572416, 26001408, 29007872, 32440320, 32440320, 32440320, 32440320 ns/op
Iteration   2: n = 65, mean = 15556230 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14139392, 15286272, 17668506, 19077530, 22183936, 22183936, 22183936, 22183936 ns/op
Iteration   3: n = 69, mean = 14556590 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14139392, 14221312, 15302656, 17776640, 18644992, 18644992, 18644992, 18644992 ns/op
Iteration   4: n = 70, mean = 14432432 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14204928, 14254080, 14855373, 15391949, 16662528, 16662528, 16662528, 16662528 ns/op
Iteration   5: n = 69, mean = 14653232 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14188544, 14254080, 15745024, 16637952, 22740992, 22740992, 22740992, 22740992 ns/op
Iteration   6: n = 70, mean = 14435708 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14172160, 14237696, 14776730, 15598387, 18415616, 18415616, 18415616, 18415616 ns/op
Iteration   7: n = 70, mean = 14446943 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14188544, 14237696, 14596506, 15518106, 20971520, 20971520, 20971520, 20971520 ns/op
Iteration   8: n = 68, mean = 14699098 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14204928, 14245888, 15935078, 18502451, 20905984, 20905984, 20905984, 20905984 ns/op
Iteration   9: n = 70, mean = 14462625 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14139392, 14237696, 14704640, 15688499, 19496960, 19496960, 19496960, 19496960 ns/op
Iteration  10: n = 70, mean = 14325233 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14123008, 14172160, 14709555, 14996275, 19267584, 19267584, 19267584, 19267584 ns/op


Result "deserialization_events_4k":
  N = 675
  mean = 14941674.003 ±(99.9%) 245976.866 ns/op

  Histogram, ns/op:
    [10000000.000, 12500000.000) = 0 
    [12500000.000, 15000000.000) = 538 
    [15000000.000, 17500000.000) = 91 
    [17500000.000, 20000000.000) = 27 
    [20000000.000, 22500000.000) = 9 
    [22500000.000, 25000000.000) = 4 
    [25000000.000, 27500000.000) = 2 
    [27500000.000, 30000000.000) = 2 
    [30000000.000, 32500000.000) = 2 
    [32500000.000, 35000000.000) = 0 
    [35000000.000, 37500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 14123008.000 ns/op
     p(50.0000) = 14254080.000 ns/op
     p(90.0000) = 16177561.600 ns/op
     p(95.0000) = 18389401.600 ns/op
     p(99.0000) = 23975690.240 ns/op
     p(99.9000) = 32440320.000 ns/op
     p(99.9900) = 32440320.000 ns/op
     p(99.9990) = 32440320.000 ns/op
     p(99.9999) = 32440320.000 ns/op
    p(100.0000) = 32440320.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_events_64k

# Run progress: 84.17% complete, ETA 00:11:19
# Fork: 1 of 1
# Warmup Iteration   1: n = 2, mean = 598736896 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 363855872, 598736896, 833617920, 833617920, 833617920, 833617920, 833617920, 833617920 ns/op
Iteration   1: n = 4, mean = 317587456 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 311427072, 319029248, 320864256, 320864256, 320864256, 320864256, 320864256, 320864256 ns/op
Iteration   2: n = 4, mean = 293863424 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 288358400, 290979840, 305135616, 305135616, 305135616, 305135616, 305135616, 305135616 ns/op
Iteration   3: n = 4, mean = 287178752 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 282591232, 287309824, 291504128, 291504128, 291504128, 291504128, 291504128, 291504128 ns/op
Iteration   4: n = 4, mean = 290324480 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 283115520, 288096256, 301989888, 301989888, 301989888, 301989888, 301989888, 301989888 ns/op
Iteration   5: n = 4, mean = 287571968 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 285212672, 287571968, 289931264, 289931264, 289931264, 289931264, 289931264, 289931264 ns/op
Iteration   6: n = 4, mean = 287440896 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 283639808, 286785536, 292552704, 292552704, 292552704, 292552704, 292552704, 292552704 ns/op
Iteration   7: n = 4, mean = 285999104 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 284164096, 285474816, 288882688, 288882688, 288882688, 288882688, 288882688, 288882688 ns/op
Iteration   8: n = 4, mean = 285999104 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 283115520, 286785536, 287309824, 287309824, 287309824, 287309824, 287309824, 287309824 ns/op
Iteration   9: n = 4, mean = 286916608 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 283639808, 284426240, 295174144, 295174144, 295174144, 295174144, 295174144, 295174144 ns/op
Iteration  10: n = 4, mean = 286785536 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 283115520, 286523392, 290979840, 290979840, 290979840, 290979840, 290979840, 290979840 ns/op


Result "deserialization_events_64k":
  N = 40
  mean = 290966732.800 ±(99.9%) 5751147.378 ns/op

  Histogram, ns/op:
    [280000000.000, 285000000.000) = 11 
    [285000000.000, 290000000.000) = 16 
    [290000000.000, 295000000.000) = 6 
    [295000000.000, 300000000.000) = 1 
    [300000000.000, 305000000.000) = 1 
    [305000000.000, 310000000.000) = 1 
    [310000000.000, 315000000.000) = 1 
    [315000000.000, 320000000.000) = 1 
    [320000000.000, 325000000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 282591232.000 ns/op
     p(50.0000) = 287047680.000 ns/op
     p(90.0000) = 310797926.400 ns/op
     p(95.0000) = 320680755.200 ns/op
     p(99.0000) = 320864256.000 ns/op
     p(99.9000) = 320864256.000 ns/op
     p(99.9900) = 320864256.000 ns/op
     p(99.9990) = 320864256.000 ns/op
     p(99.9999) = 320864256.000 ns/op
    p(100.0000) = 320864256.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_events_8k

# Run progress: 84.44% complete, ETA 00:11:07
# Fork: 1 of 1
# Warmup Iteration   1: n = 9, mean = 116129792 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 56033280, 70647808, 355467264, 355467264, 355467264, 355467264, 355467264, 355467264 ns/op
Iteration   1: n = 23, mean = 44835172 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40894464, 42139648, 52651622, 69586125, 73007104, 73007104, 73007104, 73007104 ns/op
Iteration   2: n = 24, mean = 42330795 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 37814272, 40861696, 47710208, 58294272, 61603840, 61603840, 61603840, 61603840 ns/op
Iteration   3: n = 25, mean = 41324380 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 37289984, 38141952, 53149696, 67213722, 68943872, 68943872, 68943872, 68943872 ns/op
Iteration   4: n = 27, mean = 38010880 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 37093376, 37289984, 40055603, 42493542, 43909120, 43909120, 43909120, 43909120 ns/op
Iteration   5: n = 27, mean = 37836117 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 37158912, 37224448, 39452672, 42703258, 43122688, 43122688, 43122688, 43122688 ns/op
Iteration   6: n = 27, mean = 37964762 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 37093376, 37224448, 39793459, 42598400, 43384832, 43384832, 43384832, 43384832 ns/op
Iteration   7: n = 27, mean = 37821554 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 37093376, 37355520, 40081818, 41444966, 41549824, 41549824, 41549824, 41549824 ns/op
Iteration   8: n = 27, mean = 38061852 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 37093376, 37289984, 40540570, 44747981, 47448064, 47448064, 47448064, 47448064 ns/op
Iteration   9: n = 27, mean = 37804563 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 37093376, 37224448, 39531315, 41313894, 41418752, 41418752, 41418752, 41418752 ns/op
Iteration  10: n = 27, mean = 37739027 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 37093376, 37224448, 39295386, 42087219, 43843584, 43843584, 43843584, 43843584 ns/op


Result "deserialization_events_8k":
  N = 261
  mean = 39240244.966 ±(99.9%) 909328.266 ns/op

  Histogram, ns/op:
    [30000000.000, 35000000.000) = 0 
    [35000000.000, 40000000.000) = 202 
    [40000000.000, 45000000.000) = 42 
    [45000000.000, 50000000.000) = 12 
    [50000000.000, 55000000.000) = 0 
    [55000000.000, 60000000.000) = 1 
    [60000000.000, 65000000.000) = 2 
    [65000000.000, 70000000.000) = 1 
    [70000000.000, 75000000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 37093376.000 ns/op
     p(50.0000) = 37486592.000 ns/op
     p(90.0000) = 43332403.200 ns/op
     p(95.0000) = 46458470.400 ns/op
     p(99.0000) = 65368227.840 ns/op
     p(99.9000) = 73007104.000 ns/op
     p(99.9900) = 73007104.000 ns/op
     p(99.9990) = 73007104.000 ns/op
     p(99.9999) = 73007104.000 ns/op
    p(100.0000) = 73007104.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_site_1k

# Run progress: 84.72% complete, ETA 00:10:55
# Fork: 1 of 1
# Warmup Iteration   1: n = 119, mean = 8405715 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3559424, 5947392, 16498688, 24608768, 54997811, 61210624, 61210624, 61210624 ns/op
Iteration   1: n = 242, mean = 4144136 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3264512, 3321856, 6352077, 6502810, 8690975, 10010624, 10010624, 10010624 ns/op
Iteration   2: n = 305, mean = 3284401 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3022848, 3272704, 3338240, 3479962, 6661243, 8699904, 8699904, 8699904 ns/op
Iteration   3: n = 321, mean = 3115295 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3031040, 3051520, 3205530, 3338240, 5280563, 6414336, 6414336, 6414336 ns/op
Iteration   4: n = 319, mean = 3136971 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3006464, 3039232, 3178496, 3448832, 5727846, 7069696, 7069696, 7069696 ns/op
Iteration   5: n = 325, mean = 3077117 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3010560, 3031040, 3112960, 3289088, 4381737, 5300224, 5300224, 5300224 ns/op
Iteration   6: n = 324, mean = 3086778 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3010560, 3031040, 3106816, 3293184, 5001216, 5398528, 5398528, 5398528 ns/op
Iteration   7: n = 326, mean = 3073784 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3010560, 3031040, 3089613, 3142451, 5029642, 5251072, 5251072, 5251072 ns/op
Iteration   8: n = 325, mean = 3080709 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3018752, 3035136, 3102310, 3253043, 4311613, 5152768, 5152768, 5152768 ns/op
Iteration   9: n = 324, mean = 3088498 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3010560, 3031040, 3125248, 3220480, 5083136, 7110656, 7110656, 7110656 ns/op
Iteration  10: n = 325, mean = 3079335 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3006464, 3031040, 3104768, 3244032, 4367483, 5898240, 5898240, 5898240 ns/op


Result "deserialization_site_1k":
  N = 3136
  mean = 3192043.102 ±(99.9%) 33379.874 ns/op

  Histogram, ns/op:
    [ 3000000.000,  3500000.000) = 2972 
    [ 3500000.000,  4000000.000) = 45 
    [ 4000000.000,  4500000.000) = 18 
    [ 4500000.000,  5000000.000) = 9 
    [ 5000000.000,  5500000.000) = 14 
    [ 5500000.000,  6000000.000) = 28 
    [ 6000000.000,  6500000.000) = 33 
    [ 6500000.000,  7000000.000) = 6 
    [ 7000000.000,  7500000.000) = 8 
    [ 7500000.000,  8000000.000) = 0 
    [ 8000000.000,  8500000.000) = 0 
    [ 8500000.000,  9000000.000) = 1 
    [ 9000000.000,  9500000.000) = 0 
    [ 9500000.000, 10000000.000) = 1 
    [10000000.000, 10500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 3006464.000 ns/op
     p(50.0000) = 3039232.000 ns/op
     p(90.0000) = 3305472.000 ns/op
     p(95.0000) = 3538534.400 ns/op
     p(99.0000) = 6356992.000 ns/op
     p(99.9000) = 8530436.096 ns/op
     p(99.9900) = 10010624.000 ns/op
     p(99.9990) = 10010624.000 ns/op
     p(99.9999) = 10010624.000 ns/op
    p(100.0000) = 10010624.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_site_2k

# Run progress: 85.00% complete, ETA 00:10:44
# Fork: 1 of 1
# Warmup Iteration   1: n = 53, mean = 18849328 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5611520, 17334272, 33049805, 40573338, 76414976, 76414976, 76414976, 76414976 ns/op
Iteration   1: n = 126, mean = 7965550 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5308416, 6631424, 10998579, 11683430, 13701939, 13746176, 13746176, 13746176 ns/op
Iteration   2: n = 183, mean = 5466660 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4947968, 5332992, 5978522, 7212237, 9476506, 9682944, 9682944, 9682944 ns/op
Iteration   3: n = 196, mean = 5105455 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4947968, 4997120, 5260902, 5440717, 8836383, 9011200, 9011200, 9011200 ns/op
Iteration   4: n = 192, mean = 5204267 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4923392, 4964352, 5476352, 6565888, 9159803, 9175040, 9175040, 9175040 ns/op
Iteration   5: n = 197, mean = 5074299 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4939776, 4972544, 5285478, 5441946, 7938703, 8372224, 8372224, 8372224 ns/op
Iteration   6: n = 198, mean = 5056905 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4939776, 4980736, 5161779, 5407130, 7976960, 8585216, 8585216, 8585216 ns/op
Iteration   7: n = 199, mean = 5027295 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4907008, 4939776, 5259264, 5390336, 6406144, 7585792, 7585792, 7585792 ns/op
Iteration   8: n = 200, mean = 4998799 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4907008, 4931584, 5084774, 5341184, 6605783, 7372800, 7372800, 7372800 ns/op
Iteration   9: n = 200, mean = 5012890 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4898816, 4931584, 5119181, 5348557, 6583583, 9142272, 9142272, 9142272 ns/op
Iteration  10: n = 200, mean = 5008835 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4907008, 4939776, 5061837, 5242470, 6925599, 7741440, 7741440, 7741440 ns/op


Result "deserialization_site_2k":
  N = 1891
  mean = 5293171.342 ±(99.9%) 79526.812 ns/op

  Histogram, ns/op:
    [ 4000000.000,  5000000.000) = 1266 
    [ 5000000.000,  6000000.000) = 466 
    [ 6000000.000,  7000000.000) = 67 
    [ 7000000.000,  8000000.000) = 14 
    [ 8000000.000,  9000000.000) = 17 
    [ 9000000.000, 10000000.000) = 30 
    [10000000.000, 11000000.000) = 19 
    [11000000.000, 12000000.000) = 8 
    [12000000.000, 13000000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 4898816.000 ns/op
     p(50.0000) = 4972544.000 ns/op
     p(90.0000) = 5618073.600 ns/op
     p(95.0000) = 6738739.200 ns/op
     p(99.0000) = 10570301.440 ns/op
     p(99.9000) = 13600030.720 ns/op
     p(99.9900) = 13746176.000 ns/op
     p(99.9990) = 13746176.000 ns/op
     p(99.9999) = 13746176.000 ns/op
    p(100.0000) = 13746176.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_site_4k

# Run progress: 85.28% complete, ETA 00:10:32
# Fork: 1 of 1
# Warmup Iteration   1: n = 17, mean = 58886024 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24903680, 41549824, 122735821, 164364288, 164364288, 164364288, 164364288, 164364288 ns/op
Iteration   1: n = 51, mean = 19717983 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14499840, 17072128, 29799219, 31214797, 35520512, 35520512, 35520512, 35520512 ns/op
Iteration   2: n = 63, mean = 15903923 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12730368, 12910592, 25165824, 25690112, 27361280, 27361280, 27361280, 27361280 ns/op
Iteration   3: n = 76, mean = 13247326 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12713984, 12795904, 13870694, 16650240, 20643840, 20643840, 20643840, 20643840 ns/op
Iteration   4: n = 76, mean = 13274920 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12746752, 12812288, 14617805, 16588800, 18579456, 18579456, 18579456, 18579456 ns/op
Iteration   5: n = 76, mean = 13161310 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12779520, 12861440, 13867418, 14409728, 19595264, 19595264, 19595264, 19595264 ns/op
Iteration   6: n = 77, mean = 13025918 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12763136, 12828672, 13582336, 14257357, 16662528, 16662528, 16662528, 16662528 ns/op
Iteration   7: n = 78, mean = 12949872 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12763136, 12812288, 13200589, 13677363, 16580608, 16580608, 16580608, 16580608 ns/op
Iteration   8: n = 77, mean = 13024429 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12779520, 12845056, 13192397, 13408666, 20545536, 20545536, 20545536, 20545536 ns/op
Iteration   9: n = 76, mean = 13305748 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12812288, 12926976, 13524992, 15814656, 20119552, 20119552, 20119552, 20119552 ns/op
Iteration  10: n = 77, mean = 13013364 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12763136, 12861440, 13703578, 13983744, 14680064, 14680064, 14680064, 14680064 ns/op


Result "deserialization_site_4k":
  N = 727
  mean = 13827712.880 ±(99.9%) 360603.355 ns/op

  Histogram, ns/op:
    [10000000.000, 12500000.000) = 0 
    [12500000.000, 15000000.000) = 654 
    [15000000.000, 17500000.000) = 26 
    [17500000.000, 20000000.000) = 14 
    [20000000.000, 22500000.000) = 7 
    [22500000.000, 25000000.000) = 3 
    [25000000.000, 27500000.000) = 15 
    [27500000.000, 30000000.000) = 4 
    [30000000.000, 32500000.000) = 3 
    [32500000.000, 35000000.000) = 0 
    [35000000.000, 37500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 12713984.000 ns/op
     p(50.0000) = 12845056.000 ns/op
     p(90.0000) = 15043788.800 ns/op
     p(95.0000) = 19247923.200 ns/op
     p(99.0000) = 28538306.560 ns/op
     p(99.9000) = 35520512.000 ns/op
     p(99.9900) = 35520512.000 ns/op
     p(99.9990) = 35520512.000 ns/op
     p(99.9999) = 35520512.000 ns/op
    p(100.0000) = 35520512.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_site_64k

# Run progress: 85.56% complete, ETA 00:10:20
# Fork: 1 of 1
# Warmup Iteration   1: n = 2, mean = 607911936 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 322437120, 607911936, 893386752, 893386752, 893386752, 893386752, 893386752, 893386752 ns/op
Iteration   1: n = 4, mean = 290979840 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 273678336, 285212672, 319815680, 319815680, 319815680, 319815680, 319815680, 319815680 ns/op
Iteration   2: n = 4, mean = 255852544 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 249036800, 253231104, 267911168, 267911168, 267911168, 267911168, 267911168, 267911168 ns/op
Iteration   3: n = 4, mean = 251461632 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 248512512, 251396096, 254541824, 254541824, 254541824, 254541824, 254541824, 254541824 ns/op
Iteration   4: n = 4, mean = 250150912 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 245891072, 248774656, 257163264, 257163264, 257163264, 257163264, 257163264, 257163264 ns/op
Iteration   5: n = 4, mean = 253165568 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 247988224, 250609664, 263454720, 263454720, 263454720, 263454720, 263454720, 263454720 ns/op
Iteration   6: n = 4, mean = 252706816 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 247726080, 250609664, 261881856, 261881856, 261881856, 261881856, 261881856, 261881856 ns/op
Iteration   7: n = 4, mean = 250740736 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 246677504, 249692160, 256901120, 256901120, 256901120, 256901120, 256901120, 256901120 ns/op
Iteration   8: n = 4, mean = 250544128 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 245891072, 250347520, 255590400, 255590400, 255590400, 255590400, 255590400, 255590400 ns/op
Iteration   9: n = 5, mean = 248722227 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 246677504, 247988224, 253493248, 253493248, 253493248, 253493248, 253493248, 253493248 ns/op
Iteration  10: n = 5, mean = 249561088 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 245366784, 250871808, 253493248, 253493248, 253493248, 253493248, 253493248, 253493248 ns/op


Result "deserialization_site_64k":
  N = 42
  mean = 255091078.095 ±(99.9%) 7667970.989 ns/op

  Histogram, ns/op:
    [240000000.000, 245000000.000) = 0 
    [245000000.000, 250000000.000) = 16 
    [250000000.000, 255000000.000) = 15 
    [255000000.000, 260000000.000) = 4 
    [260000000.000, 265000000.000) = 2 
    [265000000.000, 270000000.000) = 1 
    [270000000.000, 275000000.000) = 2 
    [275000000.000, 280000000.000) = 0 
    [280000000.000, 285000000.000) = 0 
    [285000000.000, 290000000.000) = 0 
    [290000000.000, 295000000.000) = 0 
    [295000000.000, 300000000.000) = 1 
    [300000000.000, 305000000.000) = 0 
    [305000000.000, 310000000.000) = 0 
    [310000000.000, 315000000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 245366784.000 ns/op
     p(50.0000) = 250609664.000 ns/op
     p(90.0000) = 271948185.600 ns/op
     p(95.0000) = 292919705.600 ns/op
     p(99.0000) = 319815680.000 ns/op
     p(99.9000) = 319815680.000 ns/op
     p(99.9900) = 319815680.000 ns/op
     p(99.9990) = 319815680.000 ns/op
     p(99.9999) = 319815680.000 ns/op
    p(100.0000) = 319815680.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.deserialization_site_8k

# Run progress: 85.83% complete, ETA 00:10:08
# Fork: 1 of 1
# Warmup Iteration   1: n = 11, mean = 92870470 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 41680896, 63176704, 259260416, 280494080, 280494080, 280494080, 280494080, 280494080 ns/op
Iteration   1: n = 25, mean = 40155218 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 37552128, 38404096, 46504346, 53444608, 55508992, 55508992, 55508992, 55508992 ns/op
Iteration   2: n = 27, mean = 37374938 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 34603008, 37486592, 42008576, 42047898, 42074112, 42074112, 42074112, 42074112 ns/op
Iteration   3: n = 28, mean = 35686693 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33882112, 34635776, 39367475, 44207309, 45416448, 45416448, 45416448, 45416448 ns/op
Iteration   4: n = 29, mean = 34716001 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33816576, 33947648, 36569088, 40894464, 41943040, 41943040, 41943040, 41943040 ns/op
Iteration   5: n = 30, mean = 34386739 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33751040, 33882112, 36215194, 37968282, 38797312, 38797312, 38797312, 38797312 ns/op
Iteration   6: n = 29, mean = 34562330 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33751040, 33947648, 36896768, 38436864, 38862848, 38862848, 38862848, 38862848 ns/op
Iteration   7: n = 30, mean = 34386739 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33751040, 33914880, 35284582, 38040371, 40960000, 40960000, 40960000, 40960000 ns/op
Iteration   8: n = 29, mean = 34548771 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33816576, 33947648, 37027840, 38862848, 40566784, 40566784, 40566784, 40566784 ns/op
Iteration   9: n = 30, mean = 34395477 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33816576, 33947648, 35297690, 38669517, 42598400, 42598400, 42598400, 42598400 ns/op
Iteration  10: n = 30, mean = 34187947 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33751040, 33914880, 34884813, 36824678, 37617664, 37617664, 37617664, 37617664 ns/op


Result "deserialization_site_8k":
  N = 287
  mean = 35344683.707 ±(99.9%) 527478.612 ns/op

  Histogram, ns/op:
    [30000000.000, 32500000.000) = 0 
    [32500000.000, 35000000.000) = 201 
    [35000000.000, 37500000.000) = 36 
    [37500000.000, 40000000.000) = 32 
    [40000000.000, 42500000.000) = 10 
    [42500000.000, 45000000.000) = 4 
    [45000000.000, 47500000.000) = 2 
    [47500000.000, 50000000.000) = 1 
    [50000000.000, 52500000.000) = 0 
    [52500000.000, 55000000.000) = 0 
    [55000000.000, 57500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 33751040.000 ns/op
     p(50.0000) = 34013184.000 ns/op
     p(90.0000) = 38692454.400 ns/op
     p(95.0000) = 41156608.000 ns/op
     p(99.0000) = 45801799.680 ns/op
     p(99.9000) = 55508992.000 ns/op
     p(99.9900) = 55508992.000 ns/op
     p(99.9990) = 55508992.000 ns/op
     p(99.9999) = 55508992.000 ns/op
    p(100.0000) = 55508992.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_events_1k

# Run progress: 86.11% complete, ETA 00:09:57
# Fork: 1 of 1
# Warmup Iteration   1: n = 63, mean = 15895601 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 6889472, 11730944, 31109939, 35481190, 42074112, 42074112, 42074112, 42074112 ns/op
Iteration   1: n = 164, mean = 6113230 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4882432, 5242880, 8642560, 9334784, 12013568, 12812288, 12812288, 12812288 ns/op
Iteration   2: n = 213, mean = 4698747 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4268032, 4751360, 5095424, 5255987, 7387709, 7970816, 7970816, 7970816 ns/op
Iteration   3: n = 229, mean = 4373347 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4235264, 4308992, 4497408, 4612096, 6346342, 6905856, 6905856, 6905856 ns/op
Iteration   4: n = 230, mean = 4354333 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4243456, 4268032, 4511334, 4827546, 6403195, 6578176, 6578176, 6578176 ns/op
Iteration   5: n = 229, mean = 4371738 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4235264, 4276224, 4415488, 4763648, 7162266, 7610368, 7610368, 7610368 ns/op
Iteration   6: n = 230, mean = 4361136 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4243456, 4276224, 4430234, 4736205, 6664684, 7168000, 7168000, 7168000 ns/op
Iteration   7: n = 229, mean = 4376281 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4243456, 4276224, 4358144, 4616192, 7404749, 9814016, 9814016, 9814016 ns/op
Iteration   8: n = 231, mean = 4338923 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4235264, 4276224, 4389274, 4916838, 5665587, 6217728, 6217728, 6217728 ns/op
Iteration   9: n = 231, mean = 4340909 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4243456, 4276224, 4397466, 4541645, 6298337, 6758400, 6758400, 6758400 ns/op
Iteration  10: n = 224, mean = 4462299 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4235264, 4280320, 4448256, 5775360, 8339456, 9011200, 9011200, 9011200 ns/op


Result "serialization_events_1k":
  N = 2210
  mean = 4532737.390 ±(99.9%) 52779.991 ns/op

  Histogram, ns/op:
    [ 4000000.000,  4500000.000) = 1775 
    [ 4500000.000,  5000000.000) = 201 
    [ 5000000.000,  5500000.000) = 119 
    [ 5500000.000,  6000000.000) = 34 
    [ 6000000.000,  6500000.000) = 10 
    [ 6500000.000,  7000000.000) = 13 
    [ 7000000.000,  7500000.000) = 13 
    [ 7500000.000,  8000000.000) = 10 
    [ 8000000.000,  8500000.000) = 11 
    [ 8500000.000,  9000000.000) = 9 
    [ 9000000.000,  9500000.000) = 8 
    [ 9500000.000, 10000000.000) = 3 
    [10000000.000, 10500000.000) = 2 
    [10500000.000, 11000000.000) = 0 
    [11000000.000, 11500000.000) = 0 
    [11500000.000, 12000000.000) = 1 
    [12000000.000, 12500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 4235264.000 ns/op
     p(50.0000) = 4284416.000 ns/op
     p(90.0000) = 5054464.000 ns/op
     p(95.0000) = 5561548.800 ns/op
     p(99.0000) = 8536064.000 ns/op
     p(99.9000) = 11265441.792 ns/op
     p(99.9900) = 12812288.000 ns/op
     p(99.9990) = 12812288.000 ns/op
     p(99.9999) = 12812288.000 ns/op
    p(100.0000) = 12812288.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_events_2k

# Run progress: 86.39% complete, ETA 00:09:45
# Fork: 1 of 1
# Warmup Iteration   1: n = 22, mean = 46146281 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 33161216, 46661632, 52566426, 57694618, 58589184, 58589184, 58589184, 58589184 ns/op
Iteration   1: n = 74, mean = 13630602 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 8978432, 9543680, 22888448, 31416320, 37224448, 37224448, 37224448, 37224448 ns/op
Iteration   2: n = 110, mean = 9102950 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7585792, 7720960, 13497139, 15120794, 18194596, 18481152, 18481152, 18481152 ns/op
Iteration   3: n = 129, mean = 7786083 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7561216, 7634944, 8216576, 8552448, 10377626, 10485760, 10485760, 10485760 ns/op
Iteration   4: n = 129, mean = 7802023 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7569408, 7618560, 8077312, 9232384, 11968512, 12042240, 12042240, 12042240 ns/op
Iteration   5: n = 130, mean = 7735706 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7577600, 7618560, 8065024, 8638464, 10061414, 10518528, 10518528, 10518528 ns/op
Iteration   6: n = 132, mean = 7621353 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7446528, 7503872, 7883981, 8418509, 10503946, 11223040, 11223040, 11223040 ns/op
Iteration   7: n = 132, mean = 7626814 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7454720, 7512064, 7795507, 8164966, 11283333, 12386304, 12386304, 12386304 ns/op
Iteration   8: n = 131, mean = 7637008 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7454720, 7503872, 7779123, 8198554, 12194284, 13746176, 13746176, 13746176 ns/op
Iteration   9: n = 131, mean = 7656518 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7438336, 7503872, 7780762, 8329626, 13868073, 16007168, 16007168, 16007168 ns/op
Iteration  10: n = 130, mean = 7706151 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7520256, 7569408, 7831552, 8056832, 13694403, 14893056, 14893056, 14893056 ns/op


Result "serialization_events_2k":
  N = 1228
  mean = 8179565.238 ±(99.9%) 226198.722 ns/op

  Histogram, ns/op:
    [       0.000,  2500000.000) = 0 
    [ 2500000.000,  5000000.000) = 0 
    [ 5000000.000,  7500000.000) = 239 
    [ 7500000.000, 10000000.000) = 923 
    [10000000.000, 12500000.000) = 23 
    [12500000.000, 15000000.000) = 13 
    [15000000.000, 17500000.000) = 13 
    [17500000.000, 20000000.000) = 4 
    [20000000.000, 22500000.000) = 5 
    [22500000.000, 25000000.000) = 3 
    [25000000.000, 27500000.000) = 0 
    [27500000.000, 30000000.000) = 0 
    [30000000.000, 32500000.000) = 2 
    [32500000.000, 35000000.000) = 1 
    [35000000.000, 37500000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 7438336.000 ns/op
     p(50.0000) = 7602176.000 ns/op
     p(90.0000) = 9043968.000 ns/op
     p(95.0000) = 10246553.600 ns/op
     p(99.0000) = 21316239.360 ns/op
     p(99.9000) = 36774215.680 ns/op
     p(99.9900) = 37224448.000 ns/op
     p(99.9990) = 37224448.000 ns/op
     p(99.9999) = 37224448.000 ns/op
    p(100.0000) = 37224448.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_events_4k

# Run progress: 86.67% complete, ETA 00:09:33
# Fork: 1 of 1
# Warmup Iteration   1: n = 15, mean = 67222460 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 38404096, 64749568, 122211533, 150994944, 150994944, 150994944, 150994944, 150994944 ns/op
Iteration   1: n = 33, mean = 31076973 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24444928, 28246016, 42847437, 48503194, 53411840, 53411840, 53411840, 53411840 ns/op
Iteration   2: n = 42, mean = 24043130 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21856256, 24018944, 25988301, 27820032, 33161216, 33161216, 33161216, 33161216 ns/op
Iteration   3: n = 42, mean = 23862906 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21463040, 21725184, 34275328, 37060608, 43450368, 43450368, 43450368, 43450368 ns/op
Iteration   4: n = 46, mean = 21896147 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21463040, 21561344, 22878618, 23283302, 26148864, 26148864, 26148864, 26148864 ns/op
Iteration   5: n = 46, mean = 21913244 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21430272, 21561344, 22586982, 23384883, 27426816, 27426816, 27426816, 27426816 ns/op
Iteration   6: n = 46, mean = 21938888 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21430272, 21561344, 22953984, 23411098, 29851648, 29851648, 29851648, 29851648 ns/op
Iteration   7: n = 46, mean = 21928203 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21430272, 21528576, 22849126, 24638259, 26935296, 26935296, 26935296, 26935296 ns/op
Iteration   8: n = 46, mean = 21784309 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21463040, 21528576, 22449357, 23034266, 26836992, 26836992, 26836992, 26836992 ns/op
Iteration   9: n = 46, mean = 21967382 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21495808, 21594112, 22757376, 24993792, 28147712, 28147712, 28147712, 28147712 ns/op
Iteration  10: n = 46, mean = 21911819 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21495808, 21561344, 22364160, 25673728, 28049408, 28049408, 28049408, 28049408 ns/op


Result "serialization_events_4k":
  N = 439
  mean = 22986863.964 ±(99.9%) 590709.018 ns/op

  Histogram, ns/op:
    [20000000.000, 22500000.000) = 326 
    [22500000.000, 25000000.000) = 61 
    [25000000.000, 27500000.000) = 24 
    [27500000.000, 30000000.000) = 8 
    [30000000.000, 32500000.000) = 3 
    [32500000.000, 35000000.000) = 6 
    [35000000.000, 37500000.000) = 3 
    [37500000.000, 40000000.000) = 2 
    [40000000.000, 42500000.000) = 2 
    [42500000.000, 45000000.000) = 2 
    [45000000.000, 47500000.000) = 1 
    [47500000.000, 50000000.000) = 0 
    [50000000.000, 52500000.000) = 0 
    [52500000.000, 55000000.000) = 1 
    [55000000.000, 57500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 21430272.000 ns/op
     p(50.0000) = 21594112.000 ns/op
     p(90.0000) = 25493504.000 ns/op
     p(95.0000) = 28573696.000 ns/op
     p(99.0000) = 42847436.800 ns/op
     p(99.9000) = 53411840.000 ns/op
     p(99.9900) = 53411840.000 ns/op
     p(99.9990) = 53411840.000 ns/op
     p(99.9999) = 53411840.000 ns/op
    p(100.0000) = 53411840.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_events_64k

# Run progress: 86.94% complete, ETA 00:09:21
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 1039138816 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1039138816, 1039138816, 1039138816, 1039138816, 1039138816, 1039138816, 1039138816, 1039138816 ns/op
Iteration   1: n = 2, mean = 562298880 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 516423680, 562298880, 608174080, 608174080, 608174080, 608174080, 608174080, 608174080 ns/op
Iteration   2: n = 3, mean = 470111573 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 448266240, 459800576, 502267904, 502267904, 502267904, 502267904, 502267904, 502267904 ns/op
Iteration   3: n = 3, mean = 447217664 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 441974784, 446693376, 452984832, 452984832, 452984832, 452984832, 452984832, 452984832 ns/op
Iteration   4: n = 3, mean = 449314816 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 444596224, 445120512, 458227712, 458227712, 458227712, 458227712, 458227712, 458227712 ns/op
Iteration   5: n = 3, mean = 452635307 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 448266240, 449314816, 460324864, 460324864, 460324864, 460324864, 460324864, 460324864 ns/op
Iteration   6: n = 3, mean = 446169088 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 441450496, 447741952, 449314816, 449314816, 449314816, 449314816, 449314816, 449314816 ns/op
Iteration   7: n = 3, mean = 443023360 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 440926208, 441450496, 446693376, 446693376, 446693376, 446693376, 446693376, 446693376 ns/op
Iteration   8: n = 3, mean = 448441003 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 441974784, 449314816, 454033408, 454033408, 454033408, 454033408, 454033408, 454033408 ns/op
Iteration   9: n = 3, mean = 447217664 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 444071936, 445120512, 452460544, 452460544, 452460544, 452460544, 452460544, 452460544 ns/op
Iteration  10: n = 3, mean = 443897173 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 439877632, 440401920, 451411968, 451411968, 451411968, 451411968, 451411968, 451411968 ns/op


Result "serialization_events_64k":
  N = 29
  mean = 457540713.931 ±(99.9%) 22888376.458 ns/op

  Histogram, ns/op:
    [400000000.000, 425000000.000) = 0 
    [425000000.000, 450000000.000) = 19 
    [450000000.000, 475000000.000) = 7 
    [475000000.000, 500000000.000) = 0 
    [500000000.000, 525000000.000) = 2 
    [525000000.000, 550000000.000) = 0 
    [550000000.000, 575000000.000) = 0 
    [575000000.000, 600000000.000) = 0 
    [600000000.000, 625000000.000) = 1 
    [625000000.000, 650000000.000) = 0 
    [650000000.000, 675000000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 439877632.000 ns/op
     p(50.0000) = 448266240.000 ns/op
     p(90.0000) = 502267904.000 ns/op
     p(95.0000) = 562298880.000 ns/op
     p(99.0000) = 608174080.000 ns/op
     p(99.9000) = 608174080.000 ns/op
     p(99.9900) = 608174080.000 ns/op
     p(99.9990) = 608174080.000 ns/op
     p(99.9999) = 608174080.000 ns/op
    p(100.0000) = 608174080.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_events_8k

# Run progress: 87.22% complete, ETA 00:09:10
# Fork: 1 of 1
# Warmup Iteration   1: n = 8, mean = 130138112 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 72744960, 86114304, 338690048, 338690048, 338690048, 338690048, 338690048, 338690048 ns/op
Iteration   1: n = 14, mean = 73067959 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 65404928, 71368704, 86573056, 87556096, 87556096, 87556096, 87556096, 87556096 ns/op
Iteration   2: n = 16, mean = 64323584 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 59703296, 65503232, 71853670, 74055680, 74055680, 74055680, 74055680, 74055680 ns/op
Iteration   3: n = 17, mean = 61260740 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 59506688, 59965440, 65588429, 67633152, 67633152, 67633152, 67633152, 67633152 ns/op
Iteration   4: n = 16, mean = 63082496 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58589184, 60358656, 73701786, 79298560, 79298560, 79298560, 79298560, 79298560 ns/op
Iteration   5: n = 17, mean = 61919955 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58589184, 59834368, 71276954, 72220672, 72220672, 72220672, 72220672, 72220672 ns/op
Iteration   6: n = 17, mean = 59753412 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58261504, 59113472, 62783488, 65142784, 65142784, 65142784, 65142784, 65142784 ns/op
Iteration   7: n = 17, mean = 60516713 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58130432, 58523648, 65903002, 81788928, 81788928, 81788928, 81788928, 81788928 ns/op
Iteration   8: n = 17, mean = 59051791 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58130432, 58261504, 61210624, 63045632, 63045632, 63045632, 63045632, 63045632 ns/op
Iteration   9: n = 17, mean = 59248399 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58130432, 58392576, 61433446, 65470464, 65470464, 65470464, 65470464, 65470464 ns/op
Iteration  10: n = 17, mean = 59086487 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 58130432, 58654720, 61158195, 63045632, 63045632, 63045632, 63045632, 63045632 ns/op


Result "serialization_events_8k":
  N = 165
  mean = 61913249.358 ±(99.9%) 1433095.398 ns/op

  Histogram, ns/op:
    [50000000.000, 52500000.000) = 0 
    [52500000.000, 55000000.000) = 0 
    [55000000.000, 57500000.000) = 0 
    [57500000.000, 60000000.000) = 95 
    [60000000.000, 62500000.000) = 28 
    [62500000.000, 65000000.000) = 5 
    [65000000.000, 67500000.000) = 14 
    [67500000.000, 70000000.000) = 7 
    [70000000.000, 72500000.000) = 8 
    [72500000.000, 75000000.000) = 3 
    [75000000.000, 77500000.000) = 0 
    [77500000.000, 80000000.000) = 1 
    [80000000.000, 82500000.000) = 2 
    [82500000.000, 85000000.000) = 0 
    [85000000.000, 87500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 58130432.000 ns/op
     p(50.0000) = 59703296.000 ns/op
     p(90.0000) = 69651660.800 ns/op
     p(95.0000) = 72587673.600 ns/op
     p(99.0000) = 86258483.200 ns/op
     p(99.9000) = 87556096.000 ns/op
     p(99.9900) = 87556096.000 ns/op
     p(99.9990) = 87556096.000 ns/op
     p(99.9999) = 87556096.000 ns/op
    p(100.0000) = 87556096.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_site_1k

# Run progress: 87.50% complete, ETA 00:08:58
# Fork: 1 of 1
# Warmup Iteration   1: n = 80, mean = 12498125 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5677056, 6893568, 30467686, 36723098, 45547520, 45547520, 45547520, 45547520 ns/op
Iteration   1: n = 159, mean = 6298618 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 5308416, 5677056, 9306112, 10321920, 11685069, 12648448, 12648448, 12648448 ns/op
Iteration   2: n = 191, mean = 5234173 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4800512, 5324800, 5544346, 5721293, 8415805, 9764864, 9764864, 9764864 ns/op
Iteration   3: n = 195, mean = 5147433 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4792320, 4841472, 6298010, 7772570, 7905608, 7913472, 7913472, 7913472 ns/op
Iteration   4: n = 202, mean = 4961392 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4792320, 4833280, 5087232, 5329306, 8706212, 8732672, 8732672, 8732672 ns/op
Iteration   5: n = 205, mean = 4889345 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4792320, 4825088, 4907008, 5197005, 6426952, 7897088, 7897088, 7897088 ns/op
Iteration   6: n = 205, mean = 4891343 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4775936, 4816896, 4967629, 5097062, 6663700, 8503296, 8503296, 8503296 ns/op
Iteration   7: n = 205, mean = 4893661 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4775936, 4816896, 5008589, 5187174, 7560233, 7938048, 7938048, 7938048 ns/op
Iteration   8: n = 206, mean = 4860560 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4784128, 4816896, 4879155, 5043405, 6031196, 7749632, 7749632, 7749632 ns/op
Iteration   9: n = 206, mean = 4870542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4775936, 4808704, 4939776, 5067981, 6228951, 8503296, 8503296, 8503296 ns/op
Iteration  10: n = 205, mean = 4886628 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 4784128, 4808704, 4943053, 5096243, 7051346, 8814592, 8814592, 8814592 ns/op


Result "serialization_site_1k":
  N = 1979
  mean = 5064055.139 ±(99.9%) 53324.822 ns/op

  Histogram, ns/op:
    [ 4000000.000,  4500000.000) = 0 
    [ 4500000.000,  5000000.000) = 1540 
    [ 5000000.000,  5500000.000) = 253 
    [ 5500000.000,  6000000.000) = 91 
    [ 6000000.000,  6500000.000) = 30 
    [ 6500000.000,  7000000.000) = 11 
    [ 7000000.000,  7500000.000) = 3 
    [ 7500000.000,  8000000.000) = 21 
    [ 8000000.000,  8500000.000) = 5 
    [ 8500000.000,  9000000.000) = 5 
    [ 9000000.000,  9500000.000) = 4 
    [ 9500000.000, 10000000.000) = 5 
    [10000000.000, 10500000.000) = 9 
    [10500000.000, 11000000.000) = 0 
    [11000000.000, 11500000.000) = 1 
    [11500000.000, 12000000.000) = 0 
    [12000000.000, 12500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 4775936.000 ns/op
     p(50.0000) = 4833280.000 ns/op
     p(90.0000) = 5439488.000 ns/op
     p(95.0000) = 5955584.000 ns/op
     p(99.0000) = 9047244.800 ns/op
     p(99.9000) = 11074928.640 ns/op
     p(99.9900) = 12648448.000 ns/op
     p(99.9990) = 12648448.000 ns/op
     p(99.9999) = 12648448.000 ns/op
    p(100.0000) = 12648448.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_site_2k

# Run progress: 87.78% complete, ETA 00:08:46
# Fork: 1 of 1
# Warmup Iteration   1: n = 56, mean = 17955109 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 9175040, 16637952, 24448205, 41251635, 70647808, 70647808, 70647808, 70647808 ns/op
Iteration   1: n = 93, mean = 10766931 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 8683520, 9601024, 16056320, 16629760, 16973824, 16973824, 16973824, 16973824 ns/op
Iteration   2: n = 118, mean = 8468792 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7757824, 8708096, 9212723, 9840230, 12534415, 12795904, 12795904, 12795904 ns/op
Iteration   3: n = 126, mean = 7960153 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7749632, 7806976, 8152678, 8535245, 10873405, 11059200, 11059200, 11059200 ns/op
Iteration   4: n = 126, mean = 7969386 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7749632, 7790592, 8477082, 9020211, 11752243, 12238848, 12238848, 12238848 ns/op
Iteration   5: n = 126, mean = 7941559 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7749632, 7782400, 8219034, 8654848, 13621494, 15138816, 15138816, 15138816 ns/op
Iteration   6: n = 126, mean = 7946240 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7774208, 7815168, 8073216, 8495923, 12343050, 12926976, 12926976, 12926976 ns/op
Iteration   7: n = 127, mean = 7911021 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7774208, 7806976, 8064205, 8252621, 10639770, 10731520, 10731520, 10731520 ns/op
Iteration   8: n = 127, mean = 7905990 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7774208, 7815168, 8095334, 8542618, 9519759, 9551872, 9551872, 9551872 ns/op
Iteration   9: n = 127, mean = 7920890 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7741440, 7798784, 7921664, 8617984, 12194284, 12304384, 12304384, 12304384 ns/op
Iteration  10: n = 126, mean = 7941559 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 7757824, 7794688, 8006042, 8986624, 11534500, 11698176, 11698176, 11698176 ns/op


Result "serialization_site_2k":
  N = 1222
  mean = 8203744.995 ±(99.9%) 109779.635 ns/op

  Histogram, ns/op:
    [ 7000000.000,  8000000.000) = 923 
    [ 8000000.000,  9000000.000) = 169 
    [ 9000000.000, 10000000.000) = 81 
    [10000000.000, 11000000.000) = 16 
    [11000000.000, 12000000.000) = 6 
    [12000000.000, 13000000.000) = 7 
    [13000000.000, 14000000.000) = 5 
    [14000000.000, 15000000.000) = 1 
    [15000000.000, 16000000.000) = 4 

  Percentiles, ns/op:
      p(0.0000) = 7741440.000 ns/op
     p(50.0000) = 7815168.000 ns/op
     p(90.0000) = 9039052.800 ns/op
     p(95.0000) = 9762406.400 ns/op
     p(99.0000) = 15528263.680 ns/op
     p(99.9000) = 16937287.680 ns/op
     p(99.9900) = 16973824.000 ns/op
     p(99.9990) = 16973824.000 ns/op
     p(99.9999) = 16973824.000 ns/op
    p(100.0000) = 16973824.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_site_4k

# Run progress: 88.06% complete, ETA 00:08:34
# Fork: 1 of 1
# Warmup Iteration   1: n = 22, mean = 45779875 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24281088, 30081024, 111044198, 150392013, 155975680, 155975680, 155975680, 155975680 ns/op
Iteration   1: n = 41, mean = 24699080 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23068672, 23822336, 27027046, 32397722, 33292288, 33292288, 33292288, 33292288 ns/op
Iteration   2: n = 43, mean = 23525138 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20611072, 23068672, 27590656, 32309248, 36241408, 36241408, 36241408, 36241408 ns/op
Iteration   3: n = 48, mean = 21295104 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20381696, 20512768, 23009690, 26779648, 29655040, 29655040, 29655040, 29655040 ns/op
Iteration   4: n = 49, mean = 20773575 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20348928, 20447232, 21856256, 23183360, 25034752, 25034752, 25034752, 25034752 ns/op
Iteration   5: n = 49, mean = 20653871 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20348928, 20414464, 21200896, 21626880, 24805376, 24805376, 24805376, 24805376 ns/op
Iteration   6: n = 49, mean = 20797649 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20348928, 20414464, 21463040, 23609344, 26673152, 26673152, 26673152, 26673152 ns/op
Iteration   7: n = 49, mean = 20788287 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20348928, 20447232, 21463040, 23052288, 27066368, 27066368, 27066368, 27066368 ns/op
Iteration   8: n = 48, mean = 20868437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20348928, 20447232, 21361459, 24736563, 26476544, 26476544, 26476544, 26476544 ns/op
Iteration   9: n = 49, mean = 20735457 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20348928, 20447232, 21397504, 22380544, 26345472, 26345472, 26345472, 26345472 ns/op
Iteration  10: n = 49, mean = 20729438 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20348928, 20447232, 21168128, 21659648, 28409856, 28409856, 28409856, 28409856 ns/op


Result "serialization_site_4k":
  N = 474
  mean = 21408288.405 ±(99.9%) 309197.378 ns/op

  Histogram, ns/op:
    [20000000.000, 21250000.000) = 360 
    [21250000.000, 22500000.000) = 22 
    [22500000.000, 23750000.000) = 45 
    [23750000.000, 25000000.000) = 21 
    [25000000.000, 26250000.000) = 9 
    [26250000.000, 27500000.000) = 7 
    [27500000.000, 28750000.000) = 2 
    [28750000.000, 30000000.000) = 3 
    [30000000.000, 31250000.000) = 1 
    [31250000.000, 32500000.000) = 0 
    [32500000.000, 33750000.000) = 3 
    [33750000.000, 35000000.000) = 0 
    [35000000.000, 36250000.000) = 1 
    [36250000.000, 37500000.000) = 0 
    [37500000.000, 38750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 20348928.000 ns/op
     p(50.0000) = 20480000.000 ns/op
     p(90.0000) = 23740416.000 ns/op
     p(95.0000) = 25108480.000 ns/op
     p(99.0000) = 31047680.000 ns/op
     p(99.9000) = 36241408.000 ns/op
     p(99.9900) = 36241408.000 ns/op
     p(99.9990) = 36241408.000 ns/op
     p(99.9999) = 36241408.000 ns/op
    p(100.0000) = 36241408.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_site_64k

# Run progress: 88.33% complete, ETA 00:08:22
# Fork: 1 of 1
# Warmup Iteration   1: n = 1, mean = 1291845632 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1291845632, 1291845632, 1291845632, 1291845632, 1291845632, 1291845632, 1291845632, 1291845632 ns/op
Iteration   1: n = 2, mean = 525598720 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 447217664, 525598720, 603979776, 603979776, 603979776, 603979776, 603979776, 603979776 ns/op
Iteration   2: n = 3, mean = 412265131 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 395313152, 405274624, 436207616, 436207616, 436207616, 436207616, 436207616, 436207616 ns/op
Iteration   3: n = 3, mean = 397235541 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 389545984, 397410304, 404750336, 404750336, 404750336, 404750336, 404750336, 404750336 ns/op
Iteration   4: n = 3, mean = 395662677 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 391643136, 393740288, 401604608, 401604608, 401604608, 401604608, 401604608, 401604608 ns/op
Iteration   5: n = 3, mean = 392167424 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 388497408, 392167424, 395837440, 395837440, 395837440, 395837440, 395837440, 395837440 ns/op
Iteration   6: n = 3, mean = 391992661 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 388497408, 389545984, 397934592, 397934592, 397934592, 397934592, 397934592, 397934592 ns/op
Iteration   7: n = 3, mean = 391468373 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 387973120, 390594560, 395837440, 395837440, 395837440, 395837440, 395837440, 395837440 ns/op
Iteration   8: n = 3, mean = 390944085 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 387448832, 388497408, 396886016, 396886016, 396886016, 396886016, 396886016, 396886016 ns/op
Iteration   9: n = 3, mean = 393390763 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 389021696, 393740288, 397410304, 397410304, 397410304, 397410304, 397410304, 397410304 ns/op
Iteration  10: n = 3, mean = 390419797 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 389021696, 390594560, 391643136, 391643136, 391643136, 391643136, 391643136, 391643136 ns/op


Result "serialization_site_64k":
  N = 29
  mean = 404063337.931 ±(99.9%) 27778536.850 ns/op

  Histogram, ns/op:
    [300000000.000, 325000000.000) = 0 
    [325000000.000, 350000000.000) = 0 
    [350000000.000, 375000000.000) = 0 
    [375000000.000, 400000000.000) = 23 
    [400000000.000, 425000000.000) = 3 
    [425000000.000, 450000000.000) = 2 
    [450000000.000, 475000000.000) = 0 
    [475000000.000, 500000000.000) = 0 
    [500000000.000, 525000000.000) = 0 
    [525000000.000, 550000000.000) = 0 
    [550000000.000, 575000000.000) = 0 
    [575000000.000, 600000000.000) = 0 
    [600000000.000, 625000000.000) = 1 
    [625000000.000, 650000000.000) = 0 
    [650000000.000, 675000000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 387448832.000 ns/op
     p(50.0000) = 393740288.000 ns/op
     p(90.0000) = 436207616.000 ns/op
     p(95.0000) = 525598720.000 ns/op
     p(99.0000) = 603979776.000 ns/op
     p(99.9000) = 603979776.000 ns/op
     p(99.9900) = 603979776.000 ns/op
     p(99.9990) = 603979776.000 ns/op
     p(99.9999) = 603979776.000 ns/op
    p(100.0000) = 603979776.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.PicklingBenchmark.serialization_site_8k

# Run progress: 88.61% complete, ETA 00:08:11
# Fork: 1 of 1
# Warmup Iteration   1: n = 6, mean = 171879083 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 70516736, 133890048, 350748672, 350748672, 350748672, 350748672, 350748672, 350748672 ns/op
Iteration   1: n = 15, mean = 69538065 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 60751872, 69337088, 82758861, 89522176, 89522176, 89522176, 89522176, 89522176 ns/op
Iteration   2: n = 17, mean = 59838223 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55967744, 59310080, 66610790, 69861376, 69861376, 69861376, 69861376, 69861376 ns/op
Iteration   3: n = 17, mean = 59167443 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55443456, 59375616, 64684032, 65208320, 65208320, 65208320, 65208320, 65208320 ns/op
Iteration   4: n = 18, mean = 56699563 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55050240, 55312384, 58929971, 71434240, 71434240, 71434240, 71434240, 71434240 ns/op
Iteration   5: n = 18, mean = 56364601 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 55050240, 55803904, 58104218, 65536000, 65536000, 65536000, 65536000, 65536000 ns/op
Iteration   6: n = 18, mean = 56000512 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54722560, 55115776, 58064896, 63373312, 63373312, 63373312, 63373312, 63373312 ns/op
Iteration   7: n = 18, mean = 55618219 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54657024, 54788096, 56878694, 65077248, 65077248, 65077248, 65077248, 65077248 ns/op
Iteration   8: n = 19, mean = 55778035 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54591488, 54788096, 61341696, 62914560, 62914560, 62914560, 62914560, 62914560 ns/op
Iteration   9: n = 18, mean = 55534478 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54657024, 54788096, 57291571, 62128128, 62128128, 62128128, 62128128, 62128128 ns/op
Iteration  10: n = 19, mean = 55491746 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 54657024, 54984704, 57016320, 57933824, 57933824, 57933824, 57933824, 57933824 ns/op


Result "serialization_site_8k":
  N = 177
  mean = 57763874.712 ±(99.9%) 1290253.240 ns/op

  Histogram, ns/op:
    [50000000.000, 52500000.000) = 0 
    [52500000.000, 55000000.000) = 55 
    [55000000.000, 57500000.000) = 79 
    [57500000.000, 60000000.000) = 6 
    [60000000.000, 62500000.000) = 15 
    [62500000.000, 65000000.000) = 6 
    [65000000.000, 67500000.000) = 6 
    [67500000.000, 70000000.000) = 2 
    [70000000.000, 72500000.000) = 3 
    [72500000.000, 75000000.000) = 2 
    [75000000.000, 77500000.000) = 1 
    [77500000.000, 80000000.000) = 1 
    [80000000.000, 82500000.000) = 0 
    [82500000.000, 85000000.000) = 0 
    [85000000.000, 87500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 54591488.000 ns/op
     p(50.0000) = 55902208.000 ns/op
     p(90.0000) = 64500531.200 ns/op
     p(95.0000) = 69913804.800 ns/op
     p(99.0000) = 80729866.240 ns/op
     p(99.9000) = 89522176.000 ns/op
     p(99.9900) = 89522176.000 ns/op
     p(99.9990) = 89522176.000 ns/op
     p(99.9999) = 89522176.000 ns/op
    p(100.0000) = 89522176.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_events_1k

# Run progress: 88.89% complete, ETA 00:07:59
# Fork: 1 of 1
# Warmup Iteration   1: n = 2662, mean = 374824 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 271360, 281088, 635904, 707584, 1021532, 7682875, 20119552, 20119552 ns/op
Iteration   1: n = 3476, mean = 288052 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 270336, 275968, 289280, 318541, 491638, 1624500, 2023424, 2023424 ns/op
Iteration   2: n = 3554, mean = 281103 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 270336, 273920, 283136, 294912, 424115, 1731942, 2074624, 2074624 ns/op
Iteration   3: n = 3549, mean = 281698 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 270848, 274432, 284672, 296960, 467456, 1154355, 2183168, 2183168 ns/op
Iteration   4: n = 3498, mean = 285602 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 272384, 274944, 287232, 342042, 415744, 1075981, 5513216, 5513216 ns/op
Iteration   5: n = 3551, mean = 281367 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 272384, 274944, 282624, 293888, 414700, 1321796, 5013504, 5013504 ns/op
Iteration   6: n = 3550, mean = 281464 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 271872, 274944, 284160, 295424, 471281, 642974, 1495040, 1495040 ns/op
Iteration   7: n = 3570, mean = 279836 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 272384, 274944, 283136, 292070, 367252, 1078531, 1286144, 1286144 ns/op
Iteration   8: n = 3552, mean = 281270 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 272384, 274944, 284160, 295424, 457124, 789902, 1845248, 1845248 ns/op
Iteration   9: n = 3581, mean = 279013 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 272384, 274944, 281088, 289280, 319857, 1241674, 3264512, 3264512 ns/op
Iteration  10: n = 3563, mean = 280435 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 272384, 274944, 281600, 294400, 471388, 900317, 2125824, 2125824 ns/op


Result "deserialization_events_1k":
  N = 35444
  mean = 281961.379 ±(99.9%) 1085.536 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 35364 
    [ 500000.000, 1000000.000) = 45 
    [1000000.000, 1500000.000) = 17 
    [1500000.000, 2000000.000) = 10 
    [2000000.000, 2500000.000) = 5 
    [2500000.000, 3000000.000) = 0 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 270336.000 ns/op
     p(50.0000) = 274944.000 ns/op
     p(90.0000) = 284160.000 ns/op
     p(95.0000) = 295424.000 ns/op
     p(99.0000) = 434176.000 ns/op
     p(99.9000) = 1061017.600 ns/op
     p(99.9900) = 2675720.192 ns/op
     p(99.9990) = 5513216.000 ns/op
     p(99.9999) = 5513216.000 ns/op
    p(100.0000) = 5513216.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_events_2k

# Run progress: 89.17% complete, ETA 00:07:47
# Fork: 1 of 1
# Warmup Iteration   1: n = 1395, mean = 715647 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 538624, 552960, 927334, 1426227, 2786591, 19688718, 26345472, 26345472 ns/op
Iteration   1: n = 1760, mean = 568853 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 530432, 543744, 573440, 683008, 984187, 3084661, 4546560, 4546560 ns/op
Iteration   2: n = 1783, mean = 560477 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 530432, 543744, 564224, 640205, 905380, 2887352, 4075520, 4075520 ns/op
Iteration   3: n = 1795, mean = 556763 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 529408, 542720, 563200, 593920, 714752, 2902671, 5070848, 5070848 ns/op
Iteration   4: n = 1813, mean = 551101 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 529408, 540672, 557056, 567296, 774779, 2399519, 3633152, 3633152 ns/op
Iteration   5: n = 1812, mean = 551429 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 530432, 541696, 558080, 572416, 707942, 1864331, 2054144, 2054144 ns/op
Iteration   6: n = 1812, mean = 551380 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 536576, 541696, 560128, 566272, 698726, 2444102, 4620288, 4620288 ns/op
Iteration   7: n = 1809, mean = 552569 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 535552, 541696, 561152, 569344, 762573, 1952870, 4018176, 4018176 ns/op
Iteration   8: n = 1813, mean = 551101 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 535552, 541696, 556032, 567296, 830218, 1941664, 3313664, 3313664 ns/op
Iteration   9: n = 1822, mean = 548587 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 536576, 540672, 556749, 566272, 663081, 1588855, 2101248, 2101248 ns/op
Iteration  10: n = 1800, mean = 555044 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 536576, 541696, 559104, 569293, 900014, 2845569, 4423680, 4423680 ns/op


Result "deserialization_events_2k":
  N = 18019
  mean = 554674.698 ±(99.9%) 2574.813 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 17968 
    [1000000.000, 1500000.000) = 20 
    [1500000.000, 2000000.000) = 12 
    [2000000.000, 2500000.000) = 9 
    [2500000.000, 3000000.000) = 2 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 3 
    [4500000.000, 5000000.000) = 2 
    [5000000.000, 5500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 529408.000 ns/op
     p(50.0000) = 541696.000 ns/op
     p(90.0000) = 561152.000 ns/op
     p(95.0000) = 574464.000 ns/op
     p(99.0000) = 818585.600 ns/op
     p(99.9000) = 2100305.920 ns/op
     p(99.9900) = 4709498.880 ns/op
     p(99.9990) = 5070848.000 ns/op
     p(99.9999) = 5070848.000 ns/op
    p(100.0000) = 5070848.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_events_4k

# Run progress: 89.44% complete, ETA 00:07:35
# Fork: 1 of 1
# Warmup Iteration   1: n = 635, mean = 1572483 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1043456, 1067008, 2745958, 2992538, 7566459, 36765696, 36765696, 36765696 ns/op
Iteration   1: n = 920, mean = 1086584 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1024000, 1050624, 1169408, 1189786, 1801810, 6340608, 6340608, 6340608 ns/op
Iteration   2: n = 926, mean = 1080056 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1022976, 1042432, 1163264, 1183027, 1781596, 4620288, 4620288, 4620288 ns/op
Iteration   3: n = 941, mean = 1062118 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1020928, 1038336, 1074790, 1163264, 1715937, 3121152, 3121152, 3121152 ns/op
Iteration   4: n = 929, mean = 1076504 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1019904, 1036288, 1099776, 1425408, 1621402, 2613248, 2613248, 2613248 ns/op
Iteration   5: n = 951, mean = 1051579 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1030144, 1036288, 1062502, 1082163, 1316536, 2875392, 2875392, 2875392 ns/op
Iteration   6: n = 946, mean = 1056974 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1030144, 1038336, 1064960, 1089536, 1734779, 3928064, 3928064, 3928064 ns/op
Iteration   7: n = 951, mean = 1051952 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1030144, 1036288, 1058816, 1077248, 1285325, 4661248, 4661248, 4661248 ns/op
Iteration   8: n = 948, mean = 1054949 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1030144, 1036288, 1060864, 1081344, 1736827, 2637824, 2637824, 2637824 ns/op
Iteration   9: n = 951, mean = 1051065 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1030144, 1036288, 1058816, 1073971, 1388380, 3211264, 3211264, 3211264 ns/op
Iteration  10: n = 952, mean = 1050387 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1029120, 1036288, 1058816, 1075917, 1346232, 2314240, 2314240, 2314240 ns/op


Result "deserialization_events_4k":
  N = 9415
  mean = 1062059.736 ±(99.9%) 4662.755 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 9281 
    [1500000.000, 2000000.000) = 102 
    [2000000.000, 2500000.000) = 14 
    [2500000.000, 3000000.000) = 12 
    [3000000.000, 3500000.000) = 2 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 2 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 1019904.000 ns/op
     p(50.0000) = 1038336.000 ns/op
     p(90.0000) = 1071104.000 ns/op
     p(95.0000) = 1155072.000 ns/op
     p(99.0000) = 1559592.960 ns/op
     p(99.9000) = 2919792.640 ns/op
     p(99.9900) = 6340608.000 ns/op
     p(99.9990) = 6340608.000 ns/op
     p(99.9999) = 6340608.000 ns/op
    p(100.0000) = 6340608.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_events_64k

# Run progress: 89.72% complete, ETA 00:07:23
# Fork: 1 of 1
# Warmup Iteration   1: n = 33, mean = 30382887 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23396352, 24313856, 50620006, 79580365, 117702656, 117702656, 117702656, 117702656 ns/op
Iteration   1: n = 41, mean = 24608768 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23396352, 23789568, 27177779, 29166797, 29753344, 29753344, 29753344, 29753344 ns/op
Iteration   2: n = 42, mean = 24225694 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23199744, 23363584, 26833715, 29324083, 30081024, 30081024, 30081024, 30081024 ns/op
Iteration   3: n = 43, mean = 23727842 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23134208, 23232512, 24766054, 27184333, 30801920, 30801920, 30801920, 30801920 ns/op
Iteration   4: n = 42, mean = 23791909 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23134208, 23232512, 24982323, 27852800, 30900224, 30900224, 30900224, 30900224 ns/op
Iteration   5: n = 43, mean = 23791854 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23134208, 23232512, 25604915, 27983872, 28803072, 28803072, 28803072, 28803072 ns/op
Iteration   6: n = 43, mean = 23508373 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23134208, 23232512, 24313856, 25185485, 27983872, 27983872, 27983872, 27983872 ns/op
Iteration   7: n = 43, mean = 23513707 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23134208, 23232512, 24549786, 25775309, 26607616, 26607616, 26607616, 26607616 ns/op
Iteration   8: n = 43, mean = 23585340 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23134208, 23232512, 24464589, 24943002, 29392896, 29392896, 29392896, 29392896 ns/op
Iteration   9: n = 43, mean = 23615821 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23134208, 23232512, 24274534, 24490803, 32538624, 32538624, 32538624, 32538624 ns/op
Iteration  10: n = 43, mean = 23463412 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23134208, 23232512, 24156570, 24536678, 27492352, 27492352, 27492352, 27492352 ns/op


Result "deserialization_events_64k":
  N = 426
  mean = 23778337.653 ±(99.9%) 210007.519 ns/op

  Histogram, ns/op:
    [23000000.000, 24000000.000) = 345 
    [24000000.000, 25000000.000) = 40 
    [25000000.000, 26000000.000) = 17 
    [26000000.000, 27000000.000) = 7 
    [27000000.000, 28000000.000) = 5 
    [28000000.000, 29000000.000) = 4 
    [29000000.000, 30000000.000) = 4 
    [30000000.000, 31000000.000) = 3 
    [31000000.000, 32000000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 23134208.000 ns/op
     p(50.0000) = 23265280.000 ns/op
     p(90.0000) = 24913510.400 ns/op
     p(95.0000) = 26650214.400 ns/op
     p(99.0000) = 29992550.400 ns/op
     p(99.9000) = 32538624.000 ns/op
     p(99.9900) = 32538624.000 ns/op
     p(99.9990) = 32538624.000 ns/op
     p(99.9999) = 32538624.000 ns/op
    p(100.0000) = 32538624.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_events_8k

# Run progress: 90.00% complete, ETA 00:07:11
# Fork: 1 of 1
# Warmup Iteration   1: n = 308, mean = 3242955 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2232320, 2437120, 5391155, 6837862, 10228204, 52232192, 52232192, 52232192 ns/op
Iteration   1: n = 433, mean = 2312386 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2228224, 2252800, 2502656, 2529690, 3948626, 4595712, 4595712, 4595712 ns/op
Iteration   2: n = 434, mean = 2305765 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2207744, 2252800, 2428928, 2544640, 3903078, 4407296, 4407296, 4407296 ns/op
Iteration   3: n = 388, mean = 2580607 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2207744, 2244608, 3223552, 3238093, 3972997, 4481024, 4481024, 4481024 ns/op
Iteration   4: n = 439, mean = 2276732 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2215936, 2232320, 2289664, 2494464, 3779789, 4710400, 4710400, 4710400 ns/op
Iteration   5: n = 443, mean = 2256572 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2215936, 2232320, 2259354, 2310144, 2956329, 4284416, 4284416, 4284416 ns/op
Iteration   6: n = 442, mean = 2261817 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2211840, 2232320, 2284339, 2378547, 3319357, 3796992, 3796992, 3796992 ns/op
Iteration   7: n = 443, mean = 2258736 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2211840, 2228224, 2265088, 2321613, 3219292, 4866048, 4866048, 4866048 ns/op
Iteration   8: n = 419, mean = 2386433 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2211840, 2244608, 3211264, 3231744, 3754394, 5799936, 5799936, 5799936 ns/op
Iteration   9: n = 441, mean = 2266881 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2211840, 2232320, 2289664, 2326528, 3134996, 8069120, 8069120, 8069120 ns/op
Iteration  10: n = 443, mean = 2255823 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2211840, 2232320, 2259354, 2305229, 3249275, 4128768, 4128768, 4128768 ns/op


Result "deserialization_events_8k":
  N = 4325
  mean = 2312524.889 ±(99.9%) 13982.931 ns/op

  Histogram, ns/op:
    [2000000.000, 2500000.000) = 3985 
    [2500000.000, 3000000.000) = 123 
    [3000000.000, 3500000.000) = 174 
    [3500000.000, 4000000.000) = 26 
    [4000000.000, 4500000.000) = 12 
    [4500000.000, 5000000.000) = 3 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 1 
    [6000000.000, 6500000.000) = 0 
    [6500000.000, 7000000.000) = 0 
    [7000000.000, 7500000.000) = 0 
    [7500000.000, 8000000.000) = 0 
    [8000000.000, 8500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 2207744.000 ns/op
     p(50.0000) = 2236416.000 ns/op
     p(90.0000) = 2371584.000 ns/op
     p(95.0000) = 3033088.000 ns/op
     p(99.0000) = 3507650.560 ns/op
     p(99.9000) = 4673011.712 ns/op
     p(99.9900) = 8069120.000 ns/op
     p(99.9990) = 8069120.000 ns/op
     p(99.9999) = 8069120.000 ns/op
    p(100.0000) = 8069120.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_site_1k

# Run progress: 90.28% complete, ETA 00:06:59
# Fork: 1 of 1
# Warmup Iteration   1: n = 2272, mean = 439456 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 199168, 214016, 694272, 1231565, 1804943, 7426638, 27754496, 27754496 ns/op
Iteration   1: n = 4564, mean = 218920 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 199424, 207616, 219648, 270208, 383334, 1975009, 2818048, 2818048 ns/op
Iteration   2: n = 4679, mean = 213531 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 201216, 207360, 214784, 223488, 345600, 1545994, 2666496, 2666496 ns/op
Iteration   3: n = 4645, mean = 215474 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 204032, 207616, 214374, 228352, 392192, 1329701, 3997696, 3997696 ns/op
Iteration   4: n = 4682, mean = 213416 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 204288, 207616, 214784, 228096, 389806, 1037932, 1439744, 1439744 ns/op
Iteration   5: n = 4710, mean = 212161 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 204288, 207104, 214272, 225536, 305608, 1215648, 2772992, 2772992 ns/op
Iteration   6: n = 4701, mean = 212562 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 204288, 207616, 213760, 226022, 348662, 1132380, 2068480, 2068480 ns/op
Iteration   7: n = 4721, mean = 211637 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 203264, 207360, 214016, 223488, 327455, 684843, 1189888, 1189888 ns/op
Iteration   8: n = 4697, mean = 212735 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 203520, 207360, 213760, 222490, 380979, 1091199, 1933312, 1933312 ns/op
Iteration   9: n = 4701, mean = 212554 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 203776, 207360, 216064, 225024, 298926, 1097822, 2961408, 2961408 ns/op
Iteration  10: n = 4685, mean = 213591 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 203776, 207360, 214272, 221440, 287304, 1360216, 3923968, 3923968 ns/op


Result "deserialization_site_1k":
  N = 46785
  mean = 213639.707 ±(99.9%) 915.407 ns/op

  Histogram, ns/op:
    [      0.000,  250000.000) = 45677 
    [ 250000.000,  500000.000) = 1034 
    [ 500000.000,  750000.000) = 13 
    [ 750000.000, 1000000.000) = 1 
    [1000000.000, 1250000.000) = 31 
    [1250000.000, 1500000.000) = 6 
    [1500000.000, 1750000.000) = 6 
    [1750000.000, 2000000.000) = 3 
    [2000000.000, 2250000.000) = 5 
    [2250000.000, 2500000.000) = 1 
    [2500000.000, 2750000.000) = 2 
    [2750000.000, 3000000.000) = 4 
    [3000000.000, 3250000.000) = 0 
    [3250000.000, 3500000.000) = 0 
    [3500000.000, 3750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 199424.000 ns/op
     p(50.0000) = 207360.000 ns/op
     p(90.0000) = 214784.000 ns/op
     p(95.0000) = 226560.000 ns/op
     p(99.0000) = 360960.000 ns/op
     p(99.9000) = 1102700.544 ns/op
     p(99.9900) = 2864123.904 ns/op
     p(99.9990) = 3997696.000 ns/op
     p(99.9999) = 3997696.000 ns/op
    p(100.0000) = 3997696.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_site_2k

# Run progress: 90.56% complete, ETA 00:06:47
# Fork: 1 of 1
# Warmup Iteration   1: n = 1380, mean = 723369 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 363008, 401152, 1325056, 1523712, 2538004, 24731009, 32964608, 32964608 ns/op
Iteration   1: n = 2503, mean = 399313 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 362496, 380416, 398336, 508314, 762880, 2193293, 3371008, 3371008 ns/op
Iteration   2: n = 2549, mean = 392083 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 362496, 379392, 394752, 425728, 585216, 2323456, 3268608, 3268608 ns/op
Iteration   3: n = 2560, mean = 390450 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 366080, 379392, 388608, 404966, 750940, 1567414, 1818624, 1818624 ns/op
Iteration   4: n = 2567, mean = 389281 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 372736, 378880, 391168, 408883, 734986, 1388134, 1783808, 1783808 ns/op
Iteration   5: n = 2587, mean = 386314 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 372736, 377856, 386560, 397824, 708321, 1364484, 2228224, 2228224 ns/op
Iteration   6: n = 2589, mean = 385991 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 373248, 378880, 388608, 401920, 541184, 1309860, 1755136, 1755136 ns/op
Iteration   7: n = 2579, mean = 387431 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 373248, 379392, 393728, 404480, 552346, 1406812, 1642496, 1642496 ns/op
Iteration   8: n = 2587, mean = 386284 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 373248, 378368, 388608, 401408, 544604, 1352163, 2256896, 2256896 ns/op
Iteration   9: n = 2580, mean = 387662 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 373248, 379392, 388608, 402432, 683100, 1610476, 2179072, 2179072 ns/op
Iteration  10: n = 2580, mean = 387316 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 373760, 380416, 390656, 400896, 537549, 1323454, 1411072, 1411072 ns/op


Result "deserialization_site_2k":
  N = 25681
  mean = 389175.106 ±(99.9%) 1487.663 ns/op

  Histogram, ns/op:
    [      0.000,  250000.000) = 0 
    [ 250000.000,  500000.000) = 25096 
    [ 500000.000,  750000.000) = 442 
    [ 750000.000, 1000000.000) = 89 
    [1000000.000, 1250000.000) = 10 
    [1250000.000, 1500000.000) = 23 
    [1500000.000, 1750000.000) = 2 
    [1750000.000, 2000000.000) = 6 
    [2000000.000, 2250000.000) = 8 
    [2250000.000, 2500000.000) = 3 
    [2500000.000, 2750000.000) = 0 
    [2750000.000, 3000000.000) = 0 
    [3000000.000, 3250000.000) = 0 
    [3250000.000, 3500000.000) = 2 
    [3500000.000, 3750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 362496.000 ns/op
     p(50.0000) = 379392.000 ns/op
     p(90.0000) = 390656.000 ns/op
     p(95.0000) = 404480.000 ns/op
     p(99.0000) = 684216.320 ns/op
     p(99.9000) = 1413025.792 ns/op
     p(99.9900) = 2763573.658 ns/op
     p(99.9990) = 3371008.000 ns/op
     p(99.9999) = 3371008.000 ns/op
    p(100.0000) = 3371008.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_site_4k

# Run progress: 90.83% complete, ETA 00:06:35
# Fork: 1 of 1
# Warmup Iteration   1: n = 547, mean = 1824922 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 719872, 1484800, 2809856, 3074458, 7961969, 46530560, 46530560, 46530560 ns/op
Iteration   1: n = 1310, mean = 763160 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 702464, 729088, 792474, 871885, 1437696, 3507921, 3551232, 3551232 ns/op
Iteration   2: n = 1314, mean = 760450 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 703488, 727040, 782336, 857088, 1310618, 3521290, 3874816, 3874816 ns/op
Iteration   3: n = 1338, mean = 748193 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 703488, 726016, 751616, 845875, 1463521, 2476333, 2703360, 2703360 ns/op
Iteration   4: n = 1343, mean = 744367 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 706560, 726016, 751616, 801382, 1248870, 2350891, 2555904, 2555904 ns/op
Iteration   5: n = 1356, mean = 737088 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 716800, 724992, 744448, 752794, 967875, 2366075, 2490368, 2490368 ns/op
Iteration   6: n = 1352, mean = 739179 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 716800, 726016, 745472, 755712, 1100206, 3221248, 4034560, 4034560 ns/op
Iteration   7: n = 1354, mean = 738191 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 716800, 724992, 747520, 760832, 1057485, 2120929, 2134016, 2134016 ns/op
Iteration   8: n = 1354, mean = 738252 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 716800, 726016, 746496, 766208, 963584, 2126490, 2260992, 2260992 ns/op
Iteration   9: n = 1356, mean = 737325 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 716800, 726016, 747520, 753664, 898355, 2918085, 3592192, 3592192 ns/op
Iteration  10: n = 1255, mean = 796508 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 715776, 727040, 1212416, 1218560, 1359380, 1964425, 2013184, 2013184 ns/op


Result "deserialization_site_4k":
  N = 13332
  mean = 749860.023 ±(99.9%) 3556.724 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 12987 
    [1000000.000, 1500000.000) = 292 
    [1500000.000, 2000000.000) = 28 
    [2000000.000, 2500000.000) = 12 
    [2500000.000, 3000000.000) = 8 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 3 
    [4000000.000, 4500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 702464.000 ns/op
     p(50.0000) = 726016.000 ns/op
     p(90.0000) = 751616.000 ns/op
     p(95.0000) = 843776.000 ns/op
     p(99.0000) = 1240412.160 ns/op
     p(99.9000) = 2534080.512 ns/op
     p(99.9900) = 3981317.325 ns/op
     p(99.9990) = 4034560.000 ns/op
     p(99.9999) = 4034560.000 ns/op
    p(100.0000) = 4034560.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_site_64k

# Run progress: 91.11% complete, ETA 00:06:23
# Fork: 1 of 1
# Warmup Iteration   1: n = 38, mean = 26559326 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12599296, 23298048, 50364416, 69697536, 121372672, 121372672, 121372672, 121372672 ns/op
Iteration   1: n = 77, mean = 13067198 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12337152, 12582912, 14581760, 15990784, 18284544, 18284544, 18284544, 18284544 ns/op
Iteration   2: n = 79, mean = 12820584 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12337152, 12386304, 14221312, 15040512, 22315008, 22315008, 22315008, 22315008 ns/op
Iteration   3: n = 79, mean = 12658403 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12337152, 12402688, 13385728, 14368768, 15171584, 15171584, 15171584, 15171584 ns/op
Iteration   4: n = 80, mean = 12551782 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12353536, 12386304, 12935168, 13566771, 14729216, 14729216, 14729216, 14729216 ns/op
Iteration   5: n = 80, mean = 12547072 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12337152, 12386304, 12990874, 13461094, 15073280, 15073280, 15073280, 15073280 ns/op
Iteration   6: n = 80, mean = 12618342 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12337152, 12386304, 13300531, 13890355, 18644992, 18644992, 18644992, 18644992 ns/op
Iteration   7: n = 80, mean = 12546867 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12337152, 12402688, 12884378, 13430784, 14991360, 14991360, 14991360, 14991360 ns/op
Iteration   8: n = 80, mean = 12613632 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12320768, 12369920, 13126861, 13516800, 21299200, 21299200, 21299200, 21299200 ns/op
Iteration   9: n = 80, mean = 12614451 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12320768, 12369920, 13118669, 13433242, 18022400, 18022400, 18022400, 18022400 ns/op
Iteration  10: n = 80, mean = 12515738 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 12320768, 12369920, 12794266, 13586432, 15220736, 15220736, 15220736, 15220736 ns/op


Result "deserialization_site_64k":
  N = 795
  mean = 12653641.419 ±(99.9%) 97538.525 ns/op

  Histogram, ns/op:
    [12000000.000, 13000000.000) = 700 
    [13000000.000, 14000000.000) = 55 
    [14000000.000, 15000000.000) = 21 
    [15000000.000, 16000000.000) = 10 
    [16000000.000, 17000000.000) = 3 
    [17000000.000, 18000000.000) = 1 
    [18000000.000, 19000000.000) = 3 
    [19000000.000, 20000000.000) = 0 
    [20000000.000, 21000000.000) = 0 
    [21000000.000, 22000000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 12320768.000 ns/op
     p(50.0000) = 12386304.000 ns/op
     p(90.0000) = 13271040.000 ns/op
     p(95.0000) = 14067302.400 ns/op
     p(99.0000) = 16471162.880 ns/op
     p(99.9000) = 22315008.000 ns/op
     p(99.9900) = 22315008.000 ns/op
     p(99.9990) = 22315008.000 ns/op
     p(99.9999) = 22315008.000 ns/op
    p(100.0000) = 22315008.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.deserialization_site_8k

# Run progress: 91.39% complete, ETA 00:06:11
# Fork: 1 of 1
# Warmup Iteration   1: n = 272, mean = 3672493 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1456128, 1930240, 8339456, 9901670, 13666222, 62259200, 62259200, 62259200 ns/op
Iteration   1: n = 650, mean = 1538445 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1449984, 1468416, 1709875, 1741517, 3440230, 4374528, 4374528, 4374528 ns/op
Iteration   2: n = 661, mean = 1513494 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1449984, 1460224, 1525760, 1716224, 2875392, 3391488, 3391488, 3391488 ns/op
Iteration   3: n = 670, mean = 1493258 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1447936, 1460224, 1500979, 1690624, 2570568, 3002368, 3002368, 3002368 ns/op
Iteration   4: n = 669, mean = 1494930 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1449984, 1462272, 1497088, 1638400, 2498560, 2916352, 2916352, 2916352 ns/op
Iteration   5: n = 673, mean = 1486045 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1449984, 1460224, 1513472, 1546240, 2342339, 3067904, 3067904, 3067904 ns/op
Iteration   6: n = 641, mean = 1559113 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1449984, 1462272, 1738752, 2228224, 2755543, 5259264, 5259264, 5259264 ns/op
Iteration   7: n = 627, mean = 1594628 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1449984, 1490944, 1876787, 2134835, 2644705, 3682304, 3682304, 3682304 ns/op
Iteration   8: n = 565, mean = 1771969 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1449984, 1574912, 2432205, 2813133, 3123937, 4235264, 4235264, 4235264 ns/op
Iteration   9: n = 540, mean = 1853315 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1449984, 1607680, 2772582, 2924339, 3213476, 6152192, 6152192, 6152192 ns/op
Iteration  10: n = 602, mean = 1661683 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1452032, 1517568, 2045338, 2414797, 2924298, 4116480, 4116480, 4116480 ns/op


Result "deserialization_site_8k":
  N = 6298
  mean = 1588221.073 ±(99.9%) 13062.099 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 4188 
    [1500000.000, 2000000.000) = 1656 
    [2000000.000, 2500000.000) = 211 
    [2500000.000, 3000000.000) = 197 
    [3000000.000, 3500000.000) = 33 
    [3500000.000, 4000000.000) = 7 
    [4000000.000, 4500000.000) = 4 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 1 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 1447936.000 ns/op
     p(50.0000) = 1470464.000 ns/op
     p(90.0000) = 1843404.800 ns/op
     p(95.0000) = 2211840.000 ns/op
     p(99.0000) = 2940968.960 ns/op
     p(99.9000) = 4041773.056 ns/op
     p(99.9900) = 6152192.000 ns/op
     p(99.9990) = 6152192.000 ns/op
     p(99.9999) = 6152192.000 ns/op
    p(100.0000) = 6152192.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_events_1k

# Run progress: 91.67% complete, ETA 00:05:59
# Fork: 1 of 1
# Warmup Iteration   1: n = 2624, mean = 379784 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 158976, 170752, 781312, 1012480, 3722240, 12105728, 16154624, 16154624 ns/op
Iteration   1: n = 5816, mean = 171756 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 158208, 162048, 175949, 193869, 341504, 1165885, 2924544, 2924544 ns/op
Iteration   2: n = 5963, mean = 167534 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 158208, 162304, 169216, 179200, 311296, 358633, 1558528, 1558528 ns/op
Iteration   3: n = 5969, mean = 167493 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 158720, 162560, 167424, 175872, 299162, 769925, 4440064, 4440064 ns/op
Iteration   4: n = 5899, mean = 169374 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 158720, 162048, 168960, 182784, 324096, 355430, 1734656, 1734656 ns/op
Iteration   5: n = 5965, mean = 167485 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 158208, 162048, 168448, 181760, 328192, 615737, 1550336, 1550336 ns/op
Iteration   6: n = 6040, mean = 165411 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 158464, 162048, 166656, 173824, 267727, 338944, 1533952, 1533952 ns/op
Iteration   7: n = 6022, mean = 165912 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 158464, 162048, 165888, 171994, 303498, 371576, 1562624, 1562624 ns/op
Iteration   8: n = 5981, mean = 167019 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 158208, 162304, 171008, 178918, 303196, 343105, 1462272, 1462272 ns/op
Iteration   9: n = 6048, mean = 165187 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 158464, 162048, 165888, 172544, 225196, 335696, 2486272, 2486272 ns/op
Iteration  10: n = 6064, mean = 164843 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 158464, 162048, 166400, 172800, 220083, 343864, 1288192, 1288192 ns/op


Result "serialization_events_1k":
  N = 59767
  mean = 167177.346 ±(99.9%) 580.836 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 59725 
    [ 500000.000, 1000000.000) = 8 
    [1000000.000, 1500000.000) = 19 
    [1500000.000, 2000000.000) = 10 
    [2000000.000, 2500000.000) = 2 
    [2500000.000, 3000000.000) = 2 
    [3000000.000, 3500000.000) = 0 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 158208.000 ns/op
     p(50.0000) = 162304.000 ns/op
     p(90.0000) = 168448.000 ns/op
     p(95.0000) = 178688.000 ns/op
     p(99.0000) = 310272.000 ns/op
     p(99.9000) = 372936.704 ns/op
     p(99.9900) = 1743160.934 ns/op
     p(99.9990) = 4440064.000 ns/op
     p(99.9999) = 4440064.000 ns/op
    p(100.0000) = 4440064.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_events_2k

# Run progress: 91.94% complete, ETA 00:05:48
# Fork: 1 of 1
# Warmup Iteration   1: n = 1585, mean = 629092 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 352768, 364032, 1212416, 1731994, 3012362, 9867624, 11288576, 11288576 ns/op
Iteration   1: n = 2726, mean = 369441 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 348160, 356352, 377344, 395264, 569068, 1876199, 2330624, 2330624 ns/op
Iteration   2: n = 2740, mean = 364779 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 349696, 356352, 368128, 377856, 522506, 1868075, 2609152, 2609152 ns/op
Iteration   3: n = 2709, mean = 369195 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 349184, 355840, 373760, 386304, 720794, 1825853, 2330624, 2330624 ns/op
Iteration   4: n = 2770, mean = 360977 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 348160, 354816, 366592, 374784, 497664, 1095873, 2207744, 2207744 ns/op
Iteration   5: n = 2731, mean = 366035 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 349696, 356352, 370176, 380109, 682762, 1208099, 2609152, 2609152 ns/op
Iteration   6: n = 2769, mean = 360935 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 349184, 355328, 362496, 374784, 429824, 1454367, 4009984, 4009984 ns/op
Iteration   7: n = 2759, mean = 362169 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 350208, 356352, 361984, 376320, 498688, 1362493, 2981888, 2981888 ns/op
Iteration   8: n = 2743, mean = 364353 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 350208, 356352, 368128, 376832, 642212, 1451590, 2015232, 2015232 ns/op
Iteration   9: n = 2759, mean = 362184 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 348672, 355328, 367104, 375808, 526643, 999752, 1564672, 1564672 ns/op
Iteration  10: n = 2744, mean = 364137 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 349184, 355328, 369408, 376832, 622643, 1300818, 1839104, 1839104 ns/op


Result "serialization_events_2k":
  N = 27450
  mean = 364401.405 ±(99.9%) 1294.964 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 27047 
    [ 500000.000, 1000000.000) = 374 
    [1000000.000, 1500000.000) = 8 
    [1500000.000, 2000000.000) = 10 
    [2000000.000, 2500000.000) = 7 
    [2500000.000, 3000000.000) = 3 
    [3000000.000, 3500000.000) = 0 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 348160.000 ns/op
     p(50.0000) = 355840.000 ns/op
     p(90.0000) = 368640.000 ns/op
     p(95.0000) = 378368.000 ns/op
     p(99.0000) = 565749.760 ns/op
     p(99.9000) = 1243215.872 ns/op
     p(99.9900) = 2704162.406 ns/op
     p(99.9990) = 4009984.000 ns/op
     p(99.9999) = 4009984.000 ns/op
    p(100.0000) = 4009984.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_events_4k

# Run progress: 92.22% complete, ETA 00:05:36
# Fork: 1 of 1
# Warmup Iteration   1: n = 872, mean = 1145108 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 724992, 833024, 1825587, 2138317, 5856543, 20086784, 20086784, 20086784 ns/op
Iteration   1: n = 1332, mean = 750249 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 716800, 728064, 759808, 822426, 1261609, 2910941, 2961408, 2961408 ns/op
Iteration   2: n = 1314, mean = 760600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 709632, 726016, 764416, 879616, 1376256, 2890670, 2965504, 2965504 ns/op
Iteration   3: n = 1321, mean = 756764 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 708608, 729088, 757760, 788480, 1390387, 6021767, 7553024, 7553024 ns/op
Iteration   4: n = 1347, mean = 742209 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 716800, 723968, 749568, 775168, 1091666, 3843342, 4816896, 4816896 ns/op
Iteration   5: n = 1350, mean = 740542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 706560, 724992, 750592, 768461, 1206579, 2208719, 2297856, 2297856 ns/op
Iteration   6: n = 1360, mean = 735276 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 709632, 723968, 747520, 759808, 888207, 1945412, 2072576, 2072576 ns/op
Iteration   7: n = 1352, mean = 739378 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 708608, 724992, 752640, 765952, 964475, 2593219, 2781184, 2781184 ns/op
Iteration   8: n = 1340, mean = 745816 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 715776, 724992, 750592, 764877, 1021850, 7909183, 11075584, 11075584 ns/op
Iteration   9: n = 1350, mean = 740476 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 717824, 723968, 744448, 753664, 1371116, 1980836, 2013184, 2013184 ns/op
Iteration  10: n = 1357, mean = 736658 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 708608, 723968, 745472, 752640, 898314, 3897893, 4890624, 4890624 ns/op


Result "serialization_events_4k":
  N = 13423
  mean = 744708.901 ±(99.9%) 4361.010 ns/op

  Histogram, ns/op:
    [       0.000,  1250000.000) = 13310 
    [ 1250000.000,  2500000.000) = 99 
    [ 2500000.000,  3750000.000) = 10 
    [ 3750000.000,  5000000.000) = 2 
    [ 5000000.000,  6250000.000) = 0 
    [ 6250000.000,  7500000.000) = 0 
    [ 7500000.000,  8750000.000) = 1 
    [ 8750000.000, 10000000.000) = 0 
    [10000000.000, 11250000.000) = 1 
    [11250000.000, 12500000.000) = 0 
    [12500000.000, 13750000.000) = 0 
    [13750000.000, 15000000.000) = 0 
    [15000000.000, 16250000.000) = 0 
    [16250000.000, 17500000.000) = 0 
    [17500000.000, 18750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 706560.000 ns/op
     p(50.0000) = 724992.000 ns/op
     p(90.0000) = 751616.000 ns/op
     p(95.0000) = 774144.000 ns/op
     p(99.0000) = 1218068.480 ns/op
     p(99.9000) = 2555904.000 ns/op
     p(99.9900) = 9869459.456 ns/op
     p(99.9990) = 11075584.000 ns/op
     p(99.9999) = 11075584.000 ns/op
    p(100.0000) = 11075584.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_events_64k

# Run progress: 92.50% complete, ETA 00:05:24
# Fork: 1 of 1
# Warmup Iteration   1: n = 45, mean = 22361975 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14467072, 14925824, 31175475, 80583066, 157286400, 157286400, 157286400, 157286400 ns/op
Iteration   1: n = 68, mean = 14871853 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14172160, 14663680, 16038298, 16615014, 19628032, 19628032, 19628032, 19628032 ns/op
Iteration   2: n = 70, mean = 14481115 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14106624, 14180352, 15425536, 16353690, 19234816, 19234816, 19234816, 19234816 ns/op
Iteration   3: n = 70, mean = 14467306 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14123008, 14204928, 15279718, 16284877, 17825792, 17825792, 17825792, 17825792 ns/op
Iteration   4: n = 70, mean = 14500776 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14106624, 14188544, 15037235, 16418406, 22151168, 22151168, 22151168, 22151168 ns/op
Iteration   5: n = 70, mean = 14442028 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14106624, 14172160, 15002829, 16080896, 19824640, 19824640, 19824640, 19824640 ns/op
Iteration   6: n = 69, mean = 14505776 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14106624, 14221312, 14811136, 16015360, 21594112, 21594112, 21594112, 21594112 ns/op
Iteration   7: n = 69, mean = 14629012 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14106624, 14204928, 14630912, 16146432, 27394048, 27394048, 27394048, 27394048 ns/op
Iteration   8: n = 70, mean = 14417218 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14090240, 14204928, 15251866, 15621325, 16498688, 16498688, 16498688, 16498688 ns/op
Iteration   9: n = 69, mean = 14496991 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14188544, 14319616, 15056896, 15687680, 18448384, 18448384, 18448384, 18448384 ns/op
Iteration  10: n = 68, mean = 14856192 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 14188544, 14262272, 14948762, 20913357, 24903680, 24903680, 24903680, 24903680 ns/op


Result "serialization_events_64k":
  N = 693
  mean = 14565210.505 ±(99.9%) 148188.136 ns/op

  Histogram, ns/op:
    [10000000.000, 11250000.000) = 0 
    [11250000.000, 12500000.000) = 0 
    [12500000.000, 13750000.000) = 0 
    [13750000.000, 15000000.000) = 611 
    [15000000.000, 16250000.000) = 53 
    [16250000.000, 17500000.000) = 15 
    [17500000.000, 18750000.000) = 4 
    [18750000.000, 20000000.000) = 3 
    [20000000.000, 21250000.000) = 0 
    [21250000.000, 22500000.000) = 2 
    [22500000.000, 23750000.000) = 1 
    [23750000.000, 25000000.000) = 3 
    [25000000.000, 26250000.000) = 0 
    [26250000.000, 27500000.000) = 1 
    [27500000.000, 28750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 14090240.000 ns/op
     p(50.0000) = 14237696.000 ns/op
     p(90.0000) = 15073280.000 ns/op
     p(95.0000) = 16043212.800 ns/op
     p(99.0000) = 21627535.360 ns/op
     p(99.9000) = 27394048.000 ns/op
     p(99.9900) = 27394048.000 ns/op
     p(99.9990) = 27394048.000 ns/op
     p(99.9999) = 27394048.000 ns/op
    p(100.0000) = 27394048.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_events_8k

# Run progress: 92.78% complete, ETA 00:05:12
# Fork: 1 of 1
# Warmup Iteration   1: n = 427, mean = 2339233 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1417216, 1538048, 3712614, 4223795, 9631171, 41549824, 41549824, 41549824 ns/op
Iteration   1: n = 681, mean = 1468795 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1411072, 1443840, 1543373, 1578803, 1771889, 3571712, 3571712, 3571712 ns/op
Iteration   2: n = 659, mean = 1517425 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1417216, 1449984, 1579008, 1619968, 2942566, 5054464, 5054464, 5054464 ns/op
Iteration   3: n = 685, mean = 1463761 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1413120, 1435648, 1474560, 1568768, 2463089, 3567616, 3567616, 3567616 ns/op
Iteration   4: n = 658, mean = 1519087 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1411072, 1425408, 1609933, 2293760, 2334925, 2658304, 2658304, 2658304 ns/op
Iteration   5: n = 692, mean = 1445974 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1406976, 1423360, 1465754, 1532928, 2103849, 2973696, 2973696, 2973696 ns/op
Iteration   6: n = 691, mean = 1446848 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1409024, 1423360, 1466368, 1547059, 1945600, 2994176, 2994176, 2994176 ns/op
Iteration   7: n = 655, mean = 1527214 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1411072, 1425408, 1514291, 2660762, 2848358, 4538368, 4538368, 4538368 ns/op
Iteration   8: n = 675, mean = 1481290 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1413120, 1427456, 1474560, 1588838, 2587525, 2793472, 2793472, 2793472 ns/op
Iteration   9: n = 689, mean = 1452237 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1413120, 1427456, 1468416, 1508352, 2443264, 3166208, 3166208, 3166208 ns/op
Iteration  10: n = 687, mean = 1456566 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1411072, 1429504, 1462682, 1504461, 2010317, 6062080, 6062080, 6062080 ns/op


Result "serialization_events_8k":
  N = 6772
  mean = 1477303.872 ±(99.9%) 8722.557 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 6167 
    [1500000.000, 2000000.000) = 410 
    [2000000.000, 2500000.000) = 86 
    [2500000.000, 3000000.000) = 93 
    [3000000.000, 3500000.000) = 8 
    [3500000.000, 4000000.000) = 4 
    [4000000.000, 4500000.000) = 1 
    [4500000.000, 5000000.000) = 1 
    [5000000.000, 5500000.000) = 1 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 1406976.000 ns/op
     p(50.0000) = 1429504.000 ns/op
     p(90.0000) = 1488896.000 ns/op
     p(95.0000) = 1583104.000 ns/op
     p(99.0000) = 2711552.000 ns/op
     p(99.9000) = 3599605.760 ns/op
     p(99.9900) = 6062080.000 ns/op
     p(99.9990) = 6062080.000 ns/op
     p(99.9999) = 6062080.000 ns/op
    p(100.0000) = 6062080.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_site_1k

# Run progress: 93.06% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: n = 2364, mean = 422219 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 198144, 202496, 790016, 1246208, 2041344, 9197650, 13582336, 13582336 ns/op
Iteration   1: n = 4844, mean = 207348 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 197888, 200448, 205824, 220416, 354355, 628516, 3350528, 3350528 ns/op
Iteration   2: n = 4894, mean = 205115 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 198144, 199936, 203264, 209472, 338432, 686607, 5570560, 5570560 ns/op
Iteration   3: n = 4868, mean = 207795 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 198144, 199936, 204288, 220672, 385695, 1153222, 2416640, 2416640 ns/op
Iteration   4: n = 4875, mean = 204968 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 198144, 200704, 203520, 209408, 308060, 432294, 5136384, 5136384 ns/op
Iteration   5: n = 4870, mean = 207048 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 198400, 200192, 206336, 225139, 360448, 423340, 2043904, 2043904 ns/op
Iteration   6: n = 4903, mean = 203796 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 198144, 200448, 203776, 211968, 268124, 397074, 1513472, 1513472 ns/op
Iteration   7: n = 4902, mean = 203851 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 198144, 200192, 204544, 213248, 313825, 401977, 1558528, 1558528 ns/op
Iteration   8: n = 4907, mean = 203642 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 198144, 199936, 203520, 211456, 338432, 573829, 1280000, 1280000 ns/op
Iteration   9: n = 4885, mean = 204561 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 198144, 200448, 205056, 217011, 345866, 403353, 1169408, 1169408 ns/op
Iteration  10: n = 4873, mean = 205246 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 197632, 200960, 211968, 218624, 280084, 401619, 1492992, 1492992 ns/op


Result "serialization_site_1k":
  N = 48821
  mean = 205332.031 ±(99.9%) 817.799 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 48775 
    [ 500000.000, 1000000.000) = 16 
    [1000000.000, 1500000.000) = 11 
    [1500000.000, 2000000.000) = 9 
    [2000000.000, 2500000.000) = 7 
    [2500000.000, 3000000.000) = 0 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 197632.000 ns/op
     p(50.0000) = 200192.000 ns/op
     p(90.0000) = 205056.000 ns/op
     p(95.0000) = 215552.000 ns/op
     p(99.0000) = 344064.000 ns/op
     p(99.9000) = 463169.536 ns/op
     p(99.9900) = 2418570.035 ns/op
     p(99.9990) = 5570560.000 ns/op
     p(99.9999) = 5570560.000 ns/op
    p(100.0000) = 5570560.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_site_2k

# Run progress: 93.33% complete, ETA 00:04:48
# Fork: 1 of 1
# Warmup Iteration   1: n = 719, mean = 1386629 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 379392, 1232896, 2105344, 2334720, 5441126, 17072128, 17072128, 17072128 ns/op
Iteration   1: n = 2540, mean = 396577 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 376832, 384000, 401408, 414694, 647537, 2285834, 2371584, 2371584 ns/op
Iteration   2: n = 2535, mean = 394305 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 376320, 382464, 399565, 415334, 679690, 2297266, 2342912, 2342912 ns/op
Iteration   3: n = 2493, mean = 401142 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 375808, 382976, 397312, 433459, 709632, 2869993, 3338240, 3338240 ns/op
Iteration   4: n = 2564, mean = 389709 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 378368, 382464, 390912, 403968, 522752, 1692334, 2220032, 2220032 ns/op
Iteration   5: n = 2556, mean = 391030 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 377344, 382976, 396954, 406528, 528835, 1320647, 1705984, 1705984 ns/op
Iteration   6: n = 2567, mean = 389277 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 378880, 382976, 394752, 407040, 490988, 1422361, 1646592, 1646592 ns/op
Iteration   7: n = 2565, mean = 389623 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 378368, 382464, 395776, 406016, 506245, 1526804, 2367488, 2367488 ns/op
Iteration   8: n = 2545, mean = 392743 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 378880, 382976, 401920, 410624, 664924, 1577075, 2220032, 2220032 ns/op
Iteration   9: n = 2551, mean = 391720 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 379392, 382976, 389120, 404992, 571802, 1448821, 6012928, 6012928 ns/op
Iteration  10: n = 2564, mean = 390056 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 378880, 382464, 394240, 406528, 532224, 1252598, 1533952, 1533952 ns/op


Result "serialization_site_2k":
  N = 25480
  mean = 392589.202 ±(99.9%) 1642.082 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 25010 
    [ 500000.000, 1000000.000) = 425 
    [1000000.000, 1500000.000) = 17 
    [1500000.000, 2000000.000) = 11 
    [2000000.000, 2500000.000) = 14 
    [2500000.000, 3000000.000) = 0 
    [3000000.000, 3500000.000) = 2 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 375808.000 ns/op
     p(50.0000) = 382976.000 ns/op
     p(90.0000) = 396288.000 ns/op
     p(95.0000) = 408576.000 ns/op
     p(99.0000) = 657408.000 ns/op
     p(99.9000) = 1526071.296 ns/op
     p(99.9900) = 3300074.701 ns/op
     p(99.9990) = 6012928.000 ns/op
     p(99.9999) = 6012928.000 ns/op
    p(100.0000) = 6012928.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_site_4k

# Run progress: 93.61% complete, ETA 00:04:36
# Fork: 1 of 1
# Warmup Iteration   1: n = 362, mean = 2755782 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1386496, 2621440, 3238707, 3411354, 11740447, 27885568, 27885568, 27885568 ns/op
Iteration   1: n = 732, mean = 1367237 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 672768, 1431552, 2580480, 2733670, 2927329, 6193152, 6193152, 6193152 ns/op
Iteration   2: n = 1429, mean = 699313 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 664576, 681984, 705536, 727552, 1269760, 2657116, 2662400, 2662400 ns/op
Iteration   3: n = 1428, mean = 700047 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 662528, 679936, 704512, 750131, 1323008, 2727170, 2908160, 2908160 ns/op
Iteration   4: n = 1440, mean = 694343 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 663552, 678912, 700416, 730061, 895191, 3101532, 3444736, 3444736 ns/op
Iteration   5: n = 1428, mean = 700084 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 665600, 683008, 709632, 730112, 996055, 2723815, 2748416, 2748416 ns/op
Iteration   6: n = 1445, mean = 691666 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 662528, 679936, 701850, 711066, 819528, 2729984, 3186688, 3186688 ns/op
Iteration   7: n = 1444, mean = 692365 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 668672, 680960, 700928, 710400, 835430, 3008963, 3559424, 3559424 ns/op
Iteration   8: n = 1440, mean = 694098 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 665600, 679936, 699392, 713677, 1037455, 2313763, 2777088, 2777088 ns/op
Iteration   9: n = 1445, mean = 692081 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 667648, 679936, 703488, 714445, 830546, 3550138, 5038080, 5038080 ns/op
Iteration  10: n = 1448, mean = 690292 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 670720, 677888, 702464, 717824, 979149, 2081853, 2109440, 2109440 ns/op


Result "serialization_site_4k":
  N = 13679
  mean = 730880.356 ±(99.9%) 7000.927 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 13166 
    [1000000.000, 1500000.000) = 161 
    [1500000.000, 2000000.000) = 183 
    [2000000.000, 2500000.000) = 79 
    [2500000.000, 3000000.000) = 82 
    [3000000.000, 3500000.000) = 4 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 1 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 1 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 662528.000 ns/op
     p(50.0000) = 680960.000 ns/op
     p(90.0000) = 710656.000 ns/op
     p(95.0000) = 818176.000 ns/op
     p(99.0000) = 2162688.000 ns/op
     p(99.9000) = 2908160.000 ns/op
     p(99.9900) = 5768085.504 ns/op
     p(99.9990) = 6193152.000 ns/op
     p(99.9999) = 6193152.000 ns/op
    p(100.0000) = 6193152.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_site_64k

# Run progress: 93.89% complete, ETA 00:04:24
# Fork: 1 of 1
# Warmup Iteration   1: n = 40, mean = 25109709 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11845632, 12722176, 65712947, 77420954, 139984896, 139984896, 139984896, 139984896 ns/op
Iteration   1: n = 81, mean = 12443749 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11386880, 12042240, 13831373, 15543501, 22642688, 22642688, 22642688, 22642688 ns/op
Iteration   2: n = 86, mean = 11721228 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11386880, 11436032, 12481331, 13579878, 18317312, 18317312, 18317312, 18317312 ns/op
Iteration   3: n = 85, mean = 11837922 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11386880, 11550720, 12291277, 13320192, 20283392, 20283392, 20283392, 20283392 ns/op
Iteration   4: n = 85, mean = 11841006 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11436032, 11501568, 12215910, 13746176, 21364736, 21364736, 21364736, 21364736 ns/op
Iteration   5: n = 86, mean = 11748662 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11468800, 11534336, 12171674, 12943360, 17760256, 17760256, 17760256, 17760256 ns/op
Iteration   6: n = 86, mean = 11706368 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11468800, 11517952, 11981619, 12827034, 14860288, 14860288, 14860288, 14860288 ns/op
Iteration   7: n = 85, mean = 11811707 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11485184, 11583488, 12202803, 12918784, 19628032, 19628032, 19628032, 19628032 ns/op
Iteration   8: n = 86, mean = 11745042 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11468800, 11517952, 12176589, 12691866, 17104896, 17104896, 17104896, 17104896 ns/op
Iteration   9: n = 86, mean = 11647309 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11468800, 11517952, 11862016, 12582093, 14516224, 14516224, 14516224, 14516224 ns/op
Iteration  10: n = 86, mean = 11728658 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 11468800, 11517952, 11855462, 12507546, 18251776, 18251776, 18251776, 18251776 ns/op


Result "serialization_site_64k":
  N = 852
  mean = 11819498.366 ±(99.9%) 113500.384 ns/op

  Histogram, ns/op:
    [10000000.000, 11250000.000) = 0 
    [11250000.000, 12500000.000) = 784 
    [12500000.000, 13750000.000) = 40 
    [13750000.000, 15000000.000) = 14 
    [15000000.000, 16250000.000) = 2 
    [16250000.000, 17500000.000) = 3 
    [17500000.000, 18750000.000) = 5 
    [18750000.000, 20000000.000) = 1 
    [20000000.000, 21250000.000) = 1 
    [21250000.000, 22500000.000) = 1 
    [22500000.000, 23750000.000) = 1 
    [23750000.000, 25000000.000) = 0 
    [25000000.000, 26250000.000) = 0 
    [26250000.000, 27500000.000) = 0 
    [27500000.000, 28750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 11386880.000 ns/op
     p(50.0000) = 11534336.000 ns/op
     p(90.0000) = 12315852.800 ns/op
     p(95.0000) = 13069516.800 ns/op
     p(99.0000) = 17806458.880 ns/op
     p(99.9000) = 22642688.000 ns/op
     p(99.9900) = 22642688.000 ns/op
     p(99.9990) = 22642688.000 ns/op
     p(99.9999) = 22642688.000 ns/op
    p(100.0000) = 22642688.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScalaPbBenchmark.serialization_site_8k

# Run progress: 94.17% complete, ETA 00:04:12
# Fork: 1 of 1
# Warmup Iteration   1: n = 159, mean = 6281435 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2580480, 6840320, 8470528, 10584064, 28540928, 40435712, 40435712, 40435712 ns/op
Iteration   1: n = 515, mean = 1943425 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1429504, 1873920, 2613248, 3266150, 3680338, 4284416, 4284416, 4284416 ns/op
Iteration   2: n = 672, mean = 1488536 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1419264, 1447936, 1508147, 1579008, 2947236, 5038080, 5038080, 5038080 ns/op
Iteration   3: n = 677, mean = 1476735 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1417216, 1445888, 1493402, 1534157, 2782003, 3928064, 3928064, 3928064 ns/op
Iteration   4: n = 676, mean = 1479844 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1421312, 1447936, 1478656, 1589248, 2482463, 3989504, 3989504, 3989504 ns/op
Iteration   5: n = 656, mean = 1525195 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1425408, 1441792, 1532518, 2392474, 2893537, 4018176, 4018176, 4018176 ns/op
Iteration   6: n = 678, mean = 1474977 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1417216, 1441792, 1476608, 1522074, 2096763, 6266880, 6266880, 6266880 ns/op
Iteration   7: n = 681, mean = 1467980 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1417216, 1443840, 1474150, 1512653, 1697710, 5595136, 5595136, 5595136 ns/op
Iteration   8: n = 649, mean = 1541062 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1429504, 1443840, 1642496, 2453504, 2492416, 3866624, 3866624, 3866624 ns/op
Iteration   9: n = 683, mean = 1463591 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1425408, 1439744, 1482752, 1558118, 2218885, 2658304, 2658304, 2658304 ns/op
Iteration  10: n = 684, mean = 1462458 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1425408, 1437696, 1466368, 1511424, 2303386, 2760704, 2760704, 2760704 ns/op


Result "serialization_site_8k":
  N = 6571
  mean = 1522088.498 ±(99.9%) 11466.548 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 5633 
    [1500000.000, 2000000.000) = 634 
    [2000000.000, 2500000.000) = 175 
    [2500000.000, 3000000.000) = 72 
    [3000000.000, 3500000.000) = 35 
    [3500000.000, 4000000.000) = 13 
    [4000000.000, 4500000.000) = 5 
    [4500000.000, 5000000.000) = 1 
    [5000000.000, 5500000.000) = 1 
    [5500000.000, 6000000.000) = 1 
    [6000000.000, 6500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 1417216.000 ns/op
     p(50.0000) = 1443840.000 ns/op
     p(90.0000) = 1599488.000 ns/op
     p(95.0000) = 1918566.400 ns/op
     p(99.0000) = 2929786.880 ns/op
     p(99.9000) = 4155654.144 ns/op
     p(99.9900) = 6266880.000 ns/op
     p(99.9990) = 6266880.000 ns/op
     p(99.9999) = 6266880.000 ns/op
    p(100.0000) = 6266880.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_events_1k

# Run progress: 94.44% complete, ETA 00:04:00
# Fork: 1 of 1
# Warmup Iteration   1: n = 2495, mean = 399939 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 288768, 296960, 533709, 946790, 1968456, 6212354, 13910016, 13910016 ns/op
Iteration   1: n = 3275, mean = 305071 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 283136, 292352, 309248, 346726, 520950, 1963819, 2095104, 2095104 ns/op
Iteration   2: n = 3299, mean = 302891 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 286720, 294400, 305152, 318976, 436736, 1589043, 2392064, 2392064 ns/op
Iteration   3: n = 3328, mean = 300480 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 291328, 294400, 302592, 312832, 437596, 1324515, 1746944, 1746944 ns/op
Iteration   4: n = 3320, mean = 301151 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 291328, 294400, 302592, 317440, 473979, 1146223, 1544192, 1544192 ns/op
Iteration   5: n = 3331, mean = 299953 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 291328, 294912, 304128, 313856, 363213, 1221296, 1658880, 1658880 ns/op
Iteration   6: n = 3324, mean = 300578 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 291328, 294912, 304128, 315904, 407680, 1227981, 1775616, 1775616 ns/op
Iteration   7: n = 3313, mean = 301533 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 291840, 294912, 304640, 314880, 506163, 1228227, 1376256, 1376256 ns/op
Iteration   8: n = 3319, mean = 301005 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 291840, 294912, 305152, 316928, 390144, 1229701, 1837056, 1837056 ns/op
Iteration   9: n = 3324, mean = 300627 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 291328, 294912, 303104, 313856, 399744, 1308262, 2674688, 2674688 ns/op
Iteration  10: n = 3318, mean = 301383 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 291840, 294400, 302080, 314880, 475064, 1148025, 5398528, 5398528 ns/op


Result "deserialization_events_1k":
  N = 33151
  mean = 301460.615 ±(99.9%) 1058.384 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 32941 
    [ 500000.000, 1000000.000) = 162 
    [1000000.000, 1500000.000) = 32 
    [1500000.000, 2000000.000) = 11 
    [2000000.000, 2500000.000) = 3 
    [2500000.000, 3000000.000) = 1 
    [3000000.000, 3500000.000) = 0 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 283136.000 ns/op
     p(50.0000) = 294912.000 ns/op
     p(90.0000) = 304128.000 ns/op
     p(95.0000) = 315392.000 ns/op
     p(99.0000) = 444395.520 ns/op
     p(99.9000) = 1229602.816 ns/op
     p(99.9900) = 2298462.208 ns/op
     p(99.9990) = 5398528.000 ns/op
     p(99.9999) = 5398528.000 ns/op
    p(100.0000) = 5398528.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_events_2k

# Run progress: 94.72% complete, ETA 00:03:48
# Fork: 1 of 1
# Warmup Iteration   1: n = 1038, mean = 961586 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 578560, 611328, 1716838, 2306048, 5235098, 21506179, 21987328, 21987328 ns/op
Iteration   1: n = 1620, mean = 617048 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 569344, 589824, 624538, 726989, 1055048, 2728890, 2797568, 2797568 ns/op
Iteration   2: n = 1633, mean = 611860 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 571392, 591872, 620544, 720896, 1006572, 2766561, 3039232, 3039232 ns/op
Iteration   3: n = 1660, mean = 602027 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 574464, 585728, 607232, 625664, 858808, 2804470, 3928064, 3928064 ns/op
Iteration   4: n = 1654, mean = 604301 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 579584, 585728, 606208, 630784, 1071104, 1848003, 1849344, 1849344 ns/op
Iteration   5: n = 1666, mean = 599881 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 579584, 585728, 606208, 618138, 1034240, 2061533, 2301952, 2301952 ns/op
Iteration   6: n = 1681, mean = 594619 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 579584, 584704, 604160, 613376, 727777, 1818399, 2314240, 2314240 ns/op
Iteration   7: n = 1670, mean = 598633 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 579584, 585728, 605184, 618496, 943432, 1831797, 2117632, 2117632 ns/op
Iteration   8: n = 1674, mean = 597169 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 579584, 585728, 607232, 624640, 838656, 1581005, 1585152, 1585152 ns/op
Iteration   9: n = 1662, mean = 601425 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 579584, 588800, 609280, 624486, 972145, 1762474, 1978368, 1978368 ns/op
Iteration  10: n = 1665, mean = 600145 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 579584, 585728, 608256, 626688, 1003561, 2119623, 2744320, 2744320 ns/op


Result "deserialization_events_2k":
  N = 16585
  mean = 602641.442 ±(99.9%) 2356.456 ns/op

  Histogram, ns/op:
    [      0.000,  250000.000) = 0 
    [ 250000.000,  500000.000) = 0 
    [ 500000.000,  750000.000) = 16268 
    [ 750000.000, 1000000.000) = 129 
    [1000000.000, 1250000.000) = 139 
    [1250000.000, 1500000.000) = 8 
    [1500000.000, 1750000.000) = 20 
    [1750000.000, 2000000.000) = 6 
    [2000000.000, 2250000.000) = 3 
    [2250000.000, 2500000.000) = 6 
    [2500000.000, 2750000.000) = 3 
    [2750000.000, 3000000.000) = 1 
    [3000000.000, 3250000.000) = 1 
    [3250000.000, 3500000.000) = 0 
    [3500000.000, 3750000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 569344.000 ns/op
     p(50.0000) = 585728.000 ns/op
     p(90.0000) = 608256.000 ns/op
     p(95.0000) = 629760.000 ns/op
     p(99.0000) = 1008783.360 ns/op
     p(99.9000) = 1956765.696 ns/op
     p(99.9900) = 3342679.245 ns/op
     p(99.9990) = 3928064.000 ns/op
     p(99.9999) = 3928064.000 ns/op
    p(100.0000) = 3928064.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_events_4k

# Run progress: 95.00% complete, ETA 00:03:36
# Fork: 1 of 1
# Warmup Iteration   1: n = 575, mean = 1736490 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1124352, 1177600, 2930278, 3783066, 9262858, 31490048, 31490048, 31490048 ns/op
Iteration   1: n = 846, mean = 1181497 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1112064, 1140736, 1244365, 1352909, 2087055, 3076096, 3076096, 3076096 ns/op
Iteration   2: n = 846, mean = 1183616 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1107968, 1144832, 1206272, 1376870, 2103419, 3354624, 3354624, 3354624 ns/op
Iteration   3: n = 865, mean = 1155479 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1110016, 1122304, 1163264, 1268531, 2019328, 4308992, 4308992, 4308992 ns/op
Iteration   4: n = 865, mean = 1156914 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1107968, 1122304, 1151795, 1229005, 1504379, 10207232, 10207232, 10207232 ns/op
Iteration   5: n = 865, mean = 1156284 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1110016, 1124352, 1161216, 1255424, 1957888, 5472256, 5472256, 5472256 ns/op
Iteration   6: n = 873, mean = 1145085 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1112064, 1120256, 1146880, 1170022, 1639752, 7233536, 7233536, 7233536 ns/op
Iteration   7: n = 871, mean = 1147987 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1112064, 1124352, 1163264, 1186202, 1731953, 3420160, 3420160, 3420160 ns/op
Iteration   8: n = 872, mean = 1146117 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1112064, 1122304, 1153024, 1175552, 1996964, 3969024, 3969024, 3969024 ns/op
Iteration   9: n = 876, mean = 1140946 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1112064, 1122304, 1150976, 1177600, 1525903, 5226496, 5226496, 5226496 ns/op
Iteration  10: n = 875, mean = 1142150 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1112064, 1122304, 1146880, 1167770, 1902264, 2134016, 2134016, 2134016 ns/op


Result "deserialization_events_4k":
  N = 8654
  mean = 1155432.423 ±(99.9%) 6978.922 ns/op

  Histogram, ns/op:
    [ 1000000.000,  2000000.000) = 8585 
    [ 2000000.000,  3000000.000) = 57 
    [ 3000000.000,  4000000.000) = 6 
    [ 4000000.000,  5000000.000) = 1 
    [ 5000000.000,  6000000.000) = 3 
    [ 6000000.000,  7000000.000) = 0 
    [ 7000000.000,  8000000.000) = 1 
    [ 8000000.000,  9000000.000) = 0 
    [ 9000000.000, 10000000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 1107968.000 ns/op
     p(50.0000) = 1124352.000 ns/op
     p(90.0000) = 1165312.000 ns/op
     p(95.0000) = 1239552.000 ns/op
     p(99.0000) = 1959731.200 ns/op
     p(99.9000) = 3377233.920 ns/op
     p(99.9900) = 10207232.000 ns/op
     p(99.9990) = 10207232.000 ns/op
     p(99.9999) = 10207232.000 ns/op
    p(100.0000) = 10207232.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_events_64k

# Run progress: 95.28% complete, ETA 00:03:24
# Fork: 1 of 1
# Warmup Iteration   1: n = 32, mean = 31916032 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 24248320, 25542656, 42264166, 103199539, 133955584, 133955584, 133955584, 133955584 ns/op
Iteration   1: n = 39, mean = 25877478 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23691264, 24281088, 31850496, 32473088, 33095680, 33095680, 33095680, 33095680 ns/op
Iteration   2: n = 42, mean = 24250661 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23494656, 23805952, 26080051, 26691174, 27820032, 27820032, 27820032, 27820032 ns/op
Iteration   3: n = 42, mean = 24031427 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23494656, 23592960, 25516442, 26591232, 27033600, 27033600, 27033600, 27033600 ns/op
Iteration   4: n = 42, mean = 24016603 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23461888, 23592960, 25280512, 26488013, 29261824, 29261824, 29261824, 29261824 ns/op
Iteration   5: n = 42, mean = 23950287 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23461888, 23592960, 24667750, 24861082, 30703616, 30703616, 30703616, 30703616 ns/op
Iteration   6: n = 42, mean = 23942485 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23461888, 23560192, 25165824, 26065306, 29523968, 29523968, 29523968, 29523968 ns/op
Iteration   7: n = 42, mean = 23816094 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23461888, 23560192, 24576000, 24818483, 27131904, 27131904, 27131904, 27131904 ns/op
Iteration   8: n = 42, mean = 23951067 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23461888, 23576576, 24566170, 25223168, 29818880, 29818880, 29818880, 29818880 ns/op
Iteration   9: n = 42, mean = 23998659 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23429120, 23560192, 24946278, 25658982, 28377088, 28377088, 28377088, 28377088 ns/op
Iteration  10: n = 42, mean = 23944826 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 23461888, 23625728, 24654643, 24879104, 30310400, 30310400, 30310400, 30310400 ns/op


Result "deserialization_events_64k":
  N = 417
  mean = 24165732.067 ±(99.9%) 228172.519 ns/op

  Histogram, ns/op:
    [23000000.000, 24000000.000) = 289 
    [24000000.000, 25000000.000) = 86 
    [25000000.000, 26000000.000) = 13 
    [26000000.000, 27000000.000) = 11 
    [27000000.000, 28000000.000) = 4 
    [28000000.000, 29000000.000) = 3 
    [29000000.000, 30000000.000) = 3 
    [30000000.000, 31000000.000) = 2 
    [31000000.000, 32000000.000) = 3 
    [32000000.000, 33000000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 23429120.000 ns/op
     p(50.0000) = 23625728.000 ns/op
     p(90.0000) = 25034752.000 ns/op
     p(95.0000) = 26610892.800 ns/op
     p(99.0000) = 31826903.040 ns/op
     p(99.9000) = 33095680.000 ns/op
     p(99.9900) = 33095680.000 ns/op
     p(99.9990) = 33095680.000 ns/op
     p(99.9999) = 33095680.000 ns/op
    p(100.0000) = 33095680.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_events_8k

# Run progress: 95.56% complete, ETA 00:03:12
# Fork: 1 of 1
# Warmup Iteration   1: n = 298, mean = 3355572 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2367488, 2664448, 4786586, 5514035, 12454134, 52101120, 52101120, 52101120 ns/op
Iteration   1: n = 406, mean = 2466498 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2347008, 2371584, 2723840, 2826035, 4247634, 5758976, 5758976, 5758976 ns/op
Iteration   2: n = 408, mean = 2452058 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2342912, 2375680, 2553037, 2775245, 4431954, 4587520, 4587520, 4587520 ns/op
Iteration   3: n = 409, mean = 2446894 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2351104, 2367488, 2473984, 2768896, 4068557, 8151040, 8151040, 8151040 ns/op
Iteration   4: n = 412, mean = 2436245 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2347008, 2367488, 2445312, 2640896, 4221420, 4677632, 4677632, 4677632 ns/op
Iteration   5: n = 415, mean = 2407876 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2347008, 2367488, 2418278, 2536243, 3535176, 4497408, 4497408, 4497408 ns/op
Iteration   6: n = 414, mean = 2417590 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2347008, 2371584, 2457600, 2541568, 3565978, 4182016, 4182016, 4182016 ns/op
Iteration   7: n = 416, mean = 2405819 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2342912, 2367488, 2412544, 2479309, 3576627, 4063232, 4063232, 4063232 ns/op
Iteration   8: n = 413, mean = 2419437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2342912, 2367488, 2424832, 2636186, 3419095, 4124672, 4124672, 4124672 ns/op
Iteration   9: n = 414, mean = 2417075 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2347008, 2363392, 2404352, 2487296, 3929088, 8912896, 8912896, 8912896 ns/op
Iteration  10: n = 417, mean = 2400718 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2342912, 2371584, 2428928, 2494874, 3231908, 4866048, 4866048, 4866048 ns/op


Result "deserialization_events_8k":
  N = 4124
  mean = 2426847.224 ±(99.9%) 13970.895 ns/op

  Histogram, ns/op:
    [2000000.000, 2500000.000) = 3837 
    [2500000.000, 3000000.000) = 175 
    [3000000.000, 3500000.000) = 53 
    [3500000.000, 4000000.000) = 22 
    [4000000.000, 4500000.000) = 29 
    [4500000.000, 5000000.000) = 5 
    [5000000.000, 5500000.000) = 0 
    [5500000.000, 6000000.000) = 1 
    [6000000.000, 6500000.000) = 0 
    [6500000.000, 7000000.000) = 0 
    [7000000.000, 7500000.000) = 0 
    [7500000.000, 8000000.000) = 0 
    [8000000.000, 8500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 2342912.000 ns/op
     p(50.0000) = 2367488.000 ns/op
     p(90.0000) = 2445312.000 ns/op
     p(95.0000) = 2654208.000 ns/op
     p(99.0000) = 3934208.000 ns/op
     p(99.9000) = 4842496.000 ns/op
     p(99.9900) = 8912896.000 ns/op
     p(99.9990) = 8912896.000 ns/op
     p(99.9999) = 8912896.000 ns/op
    p(100.0000) = 8912896.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_site_1k

# Run progress: 95.83% complete, ETA 00:03:00
# Fork: 1 of 1
# Warmup Iteration   1: n = 2393, mean = 416659 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 258304, 264704, 850944, 1313792, 2068972, 6086590, 15695872, 15695872 ns/op
Iteration   1: n = 3676, mean = 273987 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 258816, 263680, 274432, 290893, 467062, 1976263, 2625536, 2625536 ns/op
Iteration   2: n = 3673, mean = 272004 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 258816, 263168, 272384, 285850, 468613, 1821217, 2334720, 2334720 ns/op
Iteration   3: n = 3697, mean = 270199 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 259584, 263168, 269824, 282624, 406026, 1731846, 2641920, 2641920 ns/op
Iteration   4: n = 3726, mean = 268118 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 259328, 263168, 269312, 282624, 394849, 1300505, 1691648, 1691648 ns/op
Iteration   5: n = 3689, mean = 270792 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 258560, 263168, 273408, 287488, 406630, 1218683, 6995968, 6995968 ns/op
Iteration   6: n = 3727, mean = 268058 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 259328, 263168, 269312, 283648, 376627, 737501, 1695744, 1695744 ns/op
Iteration   7: n = 3722, mean = 268452 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 259584, 263168, 272384, 282035, 430909, 673478, 1953792, 1953792 ns/op
Iteration   8: n = 3718, mean = 268706 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 259328, 263168, 268800, 281600, 399386, 1316983, 4390912, 4390912 ns/op
Iteration   9: n = 3719, mean = 268640 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 259328, 263168, 269824, 283136, 344883, 1269187, 5218304, 5218304 ns/op
Iteration  10: n = 3729, mean = 267921 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 259584, 263168, 270336, 283136, 315085, 1227469, 3899392, 3899392 ns/op


Result "deserialization_site_1k":
  N = 37076
  mean = 269677.537 ±(99.9%) 1244.522 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 37013 
    [ 500000.000, 1000000.000) = 23 
    [1000000.000, 1500000.000) = 16 
    [1500000.000, 2000000.000) = 11 
    [2000000.000, 2500000.000) = 6 
    [2500000.000, 3000000.000) = 3 
    [3000000.000, 3500000.000) = 0 
    [3500000.000, 4000000.000) = 1 
    [4000000.000, 4500000.000) = 1 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 1 
    [5500000.000, 6000000.000) = 0 
    [6000000.000, 6500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 258560.000 ns/op
     p(50.0000) = 263168.000 ns/op
     p(90.0000) = 271360.000 ns/op
     p(95.0000) = 284160.000 ns/op
     p(99.0000) = 410112.000 ns/op
     p(99.9000) = 1222969.344 ns/op
     p(99.9900) = 4043063.296 ns/op
     p(99.9990) = 6995968.000 ns/op
     p(99.9999) = 6995968.000 ns/op
    p(100.0000) = 6995968.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_site_2k

# Run progress: 96.11% complete, ETA 00:02:48
# Fork: 1 of 1
# Warmup Iteration   1: n = 1199, mean = 832663 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 450560, 466432, 1593344, 2547712, 4546560, 18785894, 20938752, 20938752 ns/op
Iteration   1: n = 2088, mean = 478673 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 451072, 461312, 487424, 588544, 780513, 2350375, 2441216, 2441216 ns/op
Iteration   2: n = 2116, mean = 472293 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 450560, 460288, 480768, 501248, 633856, 2226944, 2727936, 2727936 ns/op
Iteration   3: n = 2109, mean = 474137 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 451072, 460288, 479744, 503296, 823296, 1789563, 2551808, 2551808 ns/op
Iteration   4: n = 2134, mean = 468651 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 451072, 459776, 473600, 485376, 618496, 1785559, 2084864, 2084864 ns/op
Iteration   5: n = 2131, mean = 469171 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 450560, 459776, 477082, 490701, 622961, 1719026, 1865728, 1865728 ns/op
Iteration   6: n = 2137, mean = 467686 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 451584, 459776, 470528, 486912, 663409, 1435927, 1638400, 1638400 ns/op
Iteration   7: n = 2133, mean = 468694 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 451584, 460288, 476672, 488960, 710513, 1417322, 1536000, 1536000 ns/op
Iteration   8: n = 2129, mean = 469520 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 452096, 460288, 477696, 487680, 626995, 1664471, 2682880, 2682880 ns/op
Iteration   9: n = 2135, mean = 468213 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 452096, 460288, 477184, 485888, 578314, 1520386, 5226496, 5226496 ns/op
Iteration  10: n = 2125, mean = 470447 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 450048, 459776, 476160, 491008, 805765, 1709015, 2244608, 2244608 ns/op


Result "deserialization_site_2k":
  N = 21237
  mean = 470726.103 ±(99.9%) 1771.043 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 20364 
    [ 500000.000, 1000000.000) = 830 
    [1000000.000, 1500000.000) = 14 
    [1500000.000, 2000000.000) = 16 
    [2000000.000, 2500000.000) = 9 
    [2500000.000, 3000000.000) = 3 
    [3000000.000, 3500000.000) = 0 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 450048.000 ns/op
     p(50.0000) = 460288.000 ns/op
     p(90.0000) = 477696.000 ns/op
     p(95.0000) = 492032.000 ns/op
     p(99.0000) = 695541.760 ns/op
     p(99.9000) = 1707352.064 ns/op
     p(99.9900) = 2722358.067 ns/op
     p(99.9990) = 5226496.000 ns/op
     p(99.9999) = 5226496.000 ns/op
    p(100.0000) = 5226496.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_site_4k

# Run progress: 96.39% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: n = 689, mean = 1448860 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 841728, 864256, 3289088, 3608576, 7742259, 32604160, 32604160, 32604160 ns/op
Iteration   1: n = 1120, mean = 893019 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 834560, 854016, 912282, 1011610, 1540424, 3092464, 3153920, 3153920 ns/op
Iteration   2: n = 1137, mean = 879282 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 836608, 852992, 884736, 979046, 1533174, 3589997, 3743744, 3743744 ns/op
Iteration   3: n = 1141, mean = 876227 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 836608, 852992, 878592, 930509, 1300972, 6798885, 7495680, 7495680 ns/op
Iteration   4: n = 1138, mean = 878314 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 836608, 852992, 880640, 954982, 1523712, 6261137, 6897664, 6897664 ns/op
Iteration   5: n = 1138, mean = 878898 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 835584, 852992, 878592, 967117, 1447588, 5691052, 6258688, 6258688 ns/op
Iteration   6: n = 1145, mean = 872878 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 838656, 851968, 877568, 902861, 1454244, 4753785, 5021696, 5021696 ns/op
Iteration   7: n = 1142, mean = 875410 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 836608, 851968, 879616, 931789, 1519903, 3638125, 3932160, 3932160 ns/op
Iteration   8: n = 1145, mean = 872898 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 836608, 851968, 880026, 931226, 1321124, 2072830, 2074624, 2074624 ns/op
Iteration   9: n = 1149, mean = 870277 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 837632, 851968, 879616, 912384, 1033216, 5109965, 5627904, 5627904 ns/op
Iteration  10: n = 1148, mean = 870722 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 836608, 851968, 880640, 904755, 1238180, 3218387, 3272704, 3272704 ns/op


Result "deserialization_site_4k":
  N = 11403
  mean = 876749.554 ±(99.9%) 4978.824 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 11074 
    [1000000.000, 1500000.000) = 226 
    [1500000.000, 2000000.000) = 72 
    [2000000.000, 2500000.000) = 15 
    [2500000.000, 3000000.000) = 6 
    [3000000.000, 3500000.000) = 3 
    [3500000.000, 4000000.000) = 2 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 1 
    [5500000.000, 6000000.000) = 1 
    [6000000.000, 6500000.000) = 1 
    [6500000.000, 7000000.000) = 1 
    [7000000.000, 7500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 834560.000 ns/op
     p(50.0000) = 852992.000 ns/op
     p(90.0000) = 881664.000 ns/op
     p(95.0000) = 946176.000 ns/op
     p(99.0000) = 1456046.080 ns/op
     p(99.9000) = 2802253.824 ns/op
     p(99.9900) = 7411718.554 ns/op
     p(99.9990) = 7495680.000 ns/op
     p(99.9999) = 7495680.000 ns/op
    p(100.0000) = 7495680.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_site_64k

# Run progress: 96.67% complete, ETA 00:02:24
# Fork: 1 of 1
# Warmup Iteration   1: n = 47, mean = 21323602 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 15663104, 16531456, 26129203, 50633114, 121634816, 121634816, 121634816, 121634816 ns/op
Iteration   1: n = 62, mean = 16213818 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 15499264, 15704064, 17281843, 17660314, 23789568, 23789568, 23789568, 23789568 ns/op
Iteration   2: n = 63, mean = 16019131 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 15499264, 15581184, 17255629, 18454938, 22872064, 22872064, 22872064, 22872064 ns/op
Iteration   3: n = 64, mean = 15816448 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 15499264, 15564800, 16441344, 16904192, 23134208, 23134208, 23134208, 23134208 ns/op
Iteration   4: n = 64, mean = 15782144 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 15499264, 15564800, 15966208, 16797696, 21299200, 21299200, 21299200, 21299200 ns/op
Iteration   5: n = 64, mean = 15790080 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 15499264, 15548416, 15998976, 16908288, 23298048, 23298048, 23298048, 23298048 ns/op
Iteration   6: n = 64, mean = 15832064 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 15499264, 15564800, 16596992, 16822272, 21561344, 21561344, 21561344, 21561344 ns/op
Iteration   7: n = 64, mean = 15789312 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 15499264, 15564800, 16457728, 16965632, 19234816, 19234816, 19234816, 19234816 ns/op
Iteration   8: n = 64, mean = 15765248 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 15499264, 15564800, 16310272, 16715776, 20611072, 20611072, 20611072, 20611072 ns/op
Iteration   9: n = 64, mean = 15695360 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 15384576, 15564800, 15851520, 16998400, 18579456, 18579456, 18579456, 18579456 ns/op
Iteration  10: n = 64, mean = 15717376 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 15482880, 15564800, 15958016, 16752640, 18972672, 18972672, 18972672, 18972672 ns/op


Result "deserialization_site_64k":
  N = 637
  mean = 15840653.061 ±(99.9%) 115811.520 ns/op

  Histogram, ns/op:
    [15000000.000, 15500000.000) = 50 
    [15500000.000, 16000000.000) = 488 
    [16000000.000, 16500000.000) = 34 
    [16500000.000, 17000000.000) = 29 
    [17000000.000, 17500000.000) = 17 
    [17500000.000, 18000000.000) = 3 
    [18000000.000, 18500000.000) = 3 
    [18500000.000, 19000000.000) = 3 
    [19000000.000, 19500000.000) = 3 
    [19500000.000, 20000000.000) = 0 
    [20000000.000, 20500000.000) = 0 
    [20500000.000, 21000000.000) = 1 
    [21000000.000, 21500000.000) = 1 
    [21500000.000, 22000000.000) = 1 
    [22000000.000, 22500000.000) = 0 
    [22500000.000, 23000000.000) = 1 
    [23000000.000, 23500000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 15384576.000 ns/op
     p(50.0000) = 15564800.000 ns/op
     p(90.0000) = 16567500.800 ns/op
     p(95.0000) = 17137664.000 ns/op
     p(99.0000) = 21037711.360 ns/op
     p(99.9000) = 23789568.000 ns/op
     p(99.9900) = 23789568.000 ns/op
     p(99.9990) = 23789568.000 ns/op
     p(99.9999) = 23789568.000 ns/op
    p(100.0000) = 23789568.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.deserialization_site_8k

# Run progress: 96.94% complete, ETA 00:02:12
# Fork: 1 of 1
# Warmup Iteration   1: n = 389, mean = 2568697 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1734656, 1777664, 3973120, 4784128, 16349594, 46202880, 46202880, 46202880 ns/op
Iteration   1: n = 554, mean = 1810025 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1734656, 1744896, 1888256, 2010112, 3373466, 4988928, 4988928, 4988928 ns/op
Iteration   2: n = 556, mean = 1798807 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1732608, 1742848, 1844429, 1946522, 3148718, 4382720, 4382720, 4382720 ns/op
Iteration   3: n = 538, mean = 1859858 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1730560, 1744896, 2211840, 2592768, 2638029, 3895296, 3895296, 3895296 ns/op
Iteration   4: n = 565, mean = 1768965 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1730560, 1742848, 1786266, 1850368, 2750874, 3518464, 3518464, 3518464 ns/op
Iteration   5: n = 565, mean = 1770781 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1728512, 1738752, 1776435, 1880064, 3002778, 3153920, 3153920, 3153920 ns/op
Iteration   6: n = 564, mean = 1773848 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1730560, 1738752, 1769472, 1870848, 3094118, 4423680, 4423680, 4423680 ns/op
Iteration   7: n = 560, mean = 1786189 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1730560, 1740800, 1802240, 1900134, 3102269, 5980160, 5980160, 5980160 ns/op
Iteration   8: n = 566, mean = 1768036 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1730560, 1738752, 1767424, 1800192, 2948956, 5373952, 5373952, 5373952 ns/op
Iteration   9: n = 565, mean = 1770103 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1730560, 1740800, 1792819, 1862656, 2333573, 4603904, 4603904, 4603904 ns/op
Iteration  10: n = 565, mean = 1769269 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1730560, 1740800, 1767424, 1795482, 2336522, 6766592, 6766592, 6766592 ns/op


Result "deserialization_site_8k":
  N = 5598
  mean = 1787177.432 ±(99.9%) 9798.706 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 0 
    [1500000.000, 2000000.000) = 5378 
    [2000000.000, 2500000.000) = 99 
    [2500000.000, 3000000.000) = 70 
    [3000000.000, 3500000.000) = 34 
    [3500000.000, 4000000.000) = 8 
    [4000000.000, 4500000.000) = 3 
    [4500000.000, 5000000.000) = 2 
    [5000000.000, 5500000.000) = 2 
    [5500000.000, 6000000.000) = 1 
    [6000000.000, 6500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 1728512.000 ns/op
     p(50.0000) = 1740800.000 ns/op
     p(90.0000) = 1804288.000 ns/op
     p(95.0000) = 1906688.000 ns/op
     p(99.0000) = 2933227.520 ns/op
     p(99.9000) = 4758298.624 ns/op
     p(99.9900) = 6766592.000 ns/op
     p(99.9990) = 6766592.000 ns/op
     p(99.9999) = 6766592.000 ns/op
    p(100.0000) = 6766592.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_events_1k

# Run progress: 97.22% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: n = 1622, mean = 615469 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 401408, 439296, 981402, 1290240, 2902221, 6753296, 6758400, 6758400 ns/op
Iteration   1: n = 2240, mean = 446557 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 400896, 428032, 451584, 549888, 714936, 2624991, 5545984, 5545984 ns/op
Iteration   2: n = 2251, mean = 444033 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 419328, 432640, 449434, 467456, 718848, 1675166, 2027520, 2027520 ns/op
Iteration   3: n = 2262, mean = 441815 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 420352, 431104, 445952, 459776, 722944, 1517036, 1644544, 1644544 ns/op
Iteration   4: n = 2269, mean = 440693 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 418816, 432640, 448000, 458752, 678502, 1441198, 1753088, 1753088 ns/op
Iteration   5: n = 2248, mean = 444584 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 415744, 431616, 446003, 467840, 731136, 1836898, 2609152, 2609152 ns/op
Iteration   6: n = 2263, mean = 441618 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 418816, 432128, 445952, 461210, 709632, 1479393, 1581056, 1581056 ns/op
Iteration   7: n = 2263, mean = 441735 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 414720, 432128, 444928, 459264, 727040, 1387430, 1404928, 1404928 ns/op
Iteration   8: n = 2288, mean = 436815 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 416768, 429056, 443904, 456474, 618486, 1421443, 1908736, 1908736 ns/op
Iteration   9: n = 2259, mean = 442366 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 417792, 432640, 446464, 459776, 722739, 1428972, 3006464, 3006464 ns/op
Iteration  10: n = 2267, mean = 440978 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 422400, 432640, 444416, 456704, 564019, 2567815, 2973696, 2973696 ns/op


Result "serialization_events_1k":
  N = 22610
  mean = 442105.795 ±(99.9%) 1830.564 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 21934 
    [ 500000.000, 1000000.000) = 606 
    [1000000.000, 1500000.000) = 46 
    [1500000.000, 2000000.000) = 14 
    [2000000.000, 2500000.000) = 3 
    [2500000.000, 3000000.000) = 5 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 400896.000 ns/op
     p(50.0000) = 431616.000 ns/op
     p(90.0000) = 446924.800 ns/op
     p(95.0000) = 460800.000 ns/op
     p(99.0000) = 714752.000 ns/op
     p(99.9000) = 1559554.048 ns/op
     p(99.9900) = 2997908.275 ns/op
     p(99.9990) = 5545984.000 ns/op
     p(99.9999) = 5545984.000 ns/op
    p(100.0000) = 5545984.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_events_2k

# Run progress: 97.50% complete, ETA 00:01:48
# Fork: 1 of 1
# Warmup Iteration   1: n = 780, mean = 1279720 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 841728, 882688, 1748787, 3005440, 7185531, 16908288, 16908288, 16908288 ns/op
Iteration   1: n = 1137, mean = 879321 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 821248, 848896, 905626, 1079706, 1379205, 3037938, 3084288, 3084288 ns/op
Iteration   2: n = 1150, mean = 869362 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 833536, 845824, 876544, 910797, 1453916, 3731370, 3960832, 3960832 ns/op
Iteration   3: n = 1161, mean = 861184 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 830464, 843776, 868352, 889856, 1365033, 2126832, 2138112, 2138112 ns/op
Iteration   4: n = 1148, mean = 873369 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 830464, 843776, 878694, 993997, 1444884, 2000714, 2019328, 2019328 ns/op
Iteration   5: n = 1153, mean = 867131 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 831488, 843776, 873472, 915046, 1411523, 3628438, 3932160, 3932160 ns/op
Iteration   6: n = 1158, mean = 863063 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 832512, 844800, 870400, 897024, 1371791, 2141608, 2150400, 2150400 ns/op
Iteration   7: n = 1162, mean = 860544 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 831488, 842752, 870400, 884736, 1169859, 4504470, 4939776, 4939776 ns/op
Iteration   8: n = 1148, mean = 870685 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 830464, 845824, 886784, 929331, 1399828, 3727753, 4030464, 4030464 ns/op
Iteration   9: n = 1149, mean = 870158 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 832512, 843776, 877568, 921088, 1446912, 2342195, 2437120, 2437120 ns/op
Iteration  10: n = 1159, mean = 862471 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 830464, 843776, 869376, 893952, 1412301, 2006221, 2043904, 2043904 ns/op


Result "serialization_events_2k":
  N = 11525
  mean = 867692.819 ±(99.9%) 3793.561 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 11137 
    [1000000.000, 1500000.000) = 315 
    [1500000.000, 2000000.000) = 51 
    [2000000.000, 2500000.000) = 14 
    [2500000.000, 3000000.000) = 3 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 2 
    [4000000.000, 4500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 821248.000 ns/op
     p(50.0000) = 844800.000 ns/op
     p(90.0000) = 875520.000 ns/op
     p(95.0000) = 919552.000 ns/op
     p(99.0000) = 1408491.520 ns/op
     p(99.9000) = 2348785.664 ns/op
     p(99.9900) = 4801014.989 ns/op
     p(99.9990) = 4939776.000 ns/op
     p(99.9999) = 4939776.000 ns/op
    p(100.0000) = 4939776.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_events_4k

# Run progress: 97.78% complete, ETA 00:01:36
# Fork: 1 of 1
# Warmup Iteration   1: n = 380, mean = 2631858 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1671168, 1808384, 3648307, 6193971, 12133827, 31621120, 31621120, 31621120 ns/op
Iteration   1: n = 564, mean = 1773768 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1679360, 1712128, 1912832, 2063872, 3157402, 3678208, 3678208, 3678208 ns/op
Iteration   2: n = 576, mean = 1742464 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1646592, 1689600, 1765376, 1987072, 2982502, 3452928, 3452928, 3452928 ns/op
Iteration   3: n = 575, mean = 1738225 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1669120, 1703936, 1739571, 1841971, 2841477, 2961408, 2961408, 2961408 ns/op
Iteration   4: n = 573, mean = 1744914 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1667072, 1708032, 1748173, 1836851, 2836890, 2973696, 2973696, 2973696 ns/op
Iteration   5: n = 577, mean = 1733556 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1673216, 1705984, 1746944, 1812480, 2676490, 3088384, 3088384, 3088384 ns/op
Iteration   6: n = 577, mean = 1733978 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1667072, 1705984, 1738752, 1804288, 2692874, 3088384, 3088384, 3088384 ns/op
Iteration   7: n = 575, mean = 1738246 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1671168, 1708032, 1750630, 1813299, 2639790, 4612096, 4612096, 4612096 ns/op
Iteration   8: n = 570, mean = 1754834 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1671168, 1716224, 1755136, 1855283, 2864292, 5152768, 5152768, 5152768 ns/op
Iteration   9: n = 573, mean = 1745014 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1669120, 1714176, 1761280, 1807360, 2719826, 2961408, 2961408, 2961408 ns/op
Iteration  10: n = 573, mean = 1746361 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1671168, 1708032, 1746125, 1892966, 2676408, 3694592, 3694592, 3694592 ns/op


Result "serialization_events_4k":
  N = 5733
  mean = 1745063.898 ±(99.9%) 7946.281 ns/op

  Histogram, ns/op:
    [1000000.000, 1500000.000) = 0 
    [1500000.000, 2000000.000) = 5507 
    [2000000.000, 2500000.000) = 125 
    [2500000.000, 3000000.000) = 82 
    [3000000.000, 3500000.000) = 14 
    [3500000.000, 4000000.000) = 2 
    [4000000.000, 4500000.000) = 1 
    [4500000.000, 5000000.000) = 1 
    [5000000.000, 5500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 1646592.000 ns/op
     p(50.0000) = 1708032.000 ns/op
     p(90.0000) = 1753088.000 ns/op
     p(95.0000) = 1871872.000 ns/op
     p(99.0000) = 2809774.080 ns/op
     p(99.9000) = 3512852.480 ns/op
     p(99.9900) = 5152768.000 ns/op
     p(99.9990) = 5152768.000 ns/op
     p(99.9999) = 5152768.000 ns/op
    p(100.0000) = 5152768.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_events_64k

# Run progress: 98.06% complete, ETA 00:01:24
# Fork: 1 of 1
# Warmup Iteration   1: n = 20, mean = 49971200 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 37355520, 40173568, 74153984, 150955622, 154927104, 154927104, 154927104, 154927104 ns/op
Iteration   1: n = 26, mean = 38958631 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 37289984, 37552128, 43142349, 43486413, 43646976, 43646976, 43646976, 43646976 ns/op
Iteration   2: n = 26, mean = 38633472 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 37027840, 37519360, 42467328, 45717914, 46727168, 46727168, 46727168, 46727168 ns/op
Iteration   3: n = 26, mean = 38701529 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 36896768, 37650432, 42867098, 47238349, 48431104, 48431104, 48431104, 48431104 ns/op
Iteration   4: n = 27, mean = 37845826 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 36831232, 37552128, 39636173, 42323149, 42401792, 42401792, 42401792, 42401792 ns/op
Iteration   5: n = 27, mean = 37872526 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 36831232, 37093376, 39151206, 44367872, 47775744, 47775744, 47775744, 47775744 ns/op
Iteration   6: n = 27, mean = 37904081 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 36831232, 37027840, 42021683, 44079514, 44892160, 44892160, 44892160, 44892160 ns/op
Iteration   7: n = 27, mean = 37748736 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 36831232, 37027840, 39688602, 42611507, 43581440, 43581440, 43581440, 43581440 ns/op
Iteration   8: n = 27, mean = 37651646 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 36765696, 36962304, 39295386, 42598400, 44695552, 44695552, 44695552, 44695552 ns/op
Iteration   9: n = 27, mean = 37486592 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 36765696, 37093376, 38640026, 40212890, 40632320, 40632320, 40632320, 40632320 ns/op
Iteration  10: n = 27, mean = 37637082 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 36831232, 37093376, 39439565, 41051750, 41811968, 41811968, 41811968, 41811968 ns/op


Result "serialization_events_64k":
  N = 267
  mean = 38035916.225 ±(99.9%) 387294.192 ns/op

  Histogram, ns/op:
    [30000000.000, 31250000.000) = 0 
    [31250000.000, 32500000.000) = 0 
    [32500000.000, 33750000.000) = 0 
    [33750000.000, 35000000.000) = 0 
    [35000000.000, 36250000.000) = 0 
    [36250000.000, 37500000.000) = 152 
    [37500000.000, 38750000.000) = 69 
    [38750000.000, 40000000.000) = 17 
    [40000000.000, 41250000.000) = 10 
    [41250000.000, 42500000.000) = 7 
    [42500000.000, 43750000.000) = 5 
    [43750000.000, 45000000.000) = 3 
    [45000000.000, 46250000.000) = 1 
    [46250000.000, 47500000.000) = 1 
    [47500000.000, 48750000.000) = 2 

  Percentiles, ns/op:
      p(0.0000) = 36765696.000 ns/op
     p(50.0000) = 37355520.000 ns/op
     p(90.0000) = 40121139.200 ns/op
     p(95.0000) = 42323148.800 ns/op
     p(99.0000) = 47062712.320 ns/op
     p(99.9000) = 48431104.000 ns/op
     p(99.9900) = 48431104.000 ns/op
     p(99.9990) = 48431104.000 ns/op
     p(99.9999) = 48431104.000 ns/op
    p(100.0000) = 48431104.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_events_8k

# Run progress: 98.33% complete, ETA 00:01:12
# Fork: 1 of 1
# Warmup Iteration   1: n = 159, mean = 6295423 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3670016, 4407296, 9338880, 15482880, 34104934, 46530560, 46530560, 46530560 ns/op
Iteration   1: n = 260, mean = 3844600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3657728, 3690496, 4250010, 4577690, 6286213, 9437184, 9437184, 9437184 ns/op
Iteration   2: n = 264, mean = 3796294 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3657728, 3686400, 3788800, 4677632, 6057984, 7233536, 7233536, 7233536 ns/op
Iteration   3: n = 266, mean = 3761714 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3657728, 3690496, 3796582, 4300390, 5791171, 6340608, 6340608, 6340608 ns/op
Iteration   4: n = 264, mean = 3787760 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3624960, 3682304, 3805184, 4435968, 6829261, 9830400, 9830400, 9830400 ns/op
Iteration   5: n = 269, mean = 3723310 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3624960, 3653632, 3710976, 4079616, 6224282, 6594560, 6594560, 6594560 ns/op
Iteration   6: n = 269, mean = 3726325 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3624960, 3657728, 3796992, 4167680, 4811981, 7135232, 7135232, 7135232 ns/op
Iteration   7: n = 267, mean = 3758747 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3624960, 3657728, 3753574, 4335206, 6427116, 6569984, 6569984, 6569984 ns/op
Iteration   8: n = 269, mean = 3723584 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3624960, 3657728, 3772416, 4200448, 4813619, 5169152, 5169152, 5169152 ns/op
Iteration   9: n = 268, mean = 3738043 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3620864, 3653632, 3747840, 4180582, 6313165, 6684672, 6684672, 6684672 ns/op
Iteration  10: n = 269, mean = 3717524 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 3629056, 3653632, 3715072, 4079616, 5092966, 7725056, 7725056, 7725056 ns/op


Result "serialization_events_8k":
  N = 2665
  mean = 3757370.693 ±(99.9%) 24509.247 ns/op

  Histogram, ns/op:
    [ 3000000.000,  3500000.000) = 0 
    [ 3500000.000,  4000000.000) = 2484 
    [ 4000000.000,  4500000.000) = 78 
    [ 4500000.000,  5000000.000) = 63 
    [ 5000000.000,  5500000.000) = 8 
    [ 5500000.000,  6000000.000) = 8 
    [ 6000000.000,  6500000.000) = 13 
    [ 6500000.000,  7000000.000) = 5 
    [ 7000000.000,  7500000.000) = 3 
    [ 7500000.000,  8000000.000) = 1 
    [ 8000000.000,  8500000.000) = 0 
    [ 8500000.000,  9000000.000) = 0 
    [ 9000000.000,  9500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 3620864.000 ns/op
     p(50.0000) = 3670016.000 ns/op
     p(90.0000) = 3784704.000 ns/op
     p(95.0000) = 4290150.400 ns/op
     p(99.0000) = 5895618.560 ns/op
     p(99.9000) = 8296906.752 ns/op
     p(99.9900) = 9830400.000 ns/op
     p(99.9990) = 9830400.000 ns/op
     p(99.9999) = 9830400.000 ns/op
    p(100.0000) = 9830400.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_site_1k

# Run progress: 98.61% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: n = 2014, mean = 495587 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 322560, 332800, 609792, 1540096, 2394931, 6150349, 7454720, 7454720 ns/op
Iteration   1: n = 2936, mean = 340334 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 321536, 331264, 346778, 365133, 472899, 1560707, 2310144, 2310144 ns/op
Iteration   2: n = 2917, mean = 344512 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 322560, 330240, 345702, 370278, 634696, 2031350, 2347008, 2347008 ns/op
Iteration   3: n = 2957, mean = 337961 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 322560, 330752, 341504, 355840, 470231, 1625641, 2502656, 2502656 ns/op
Iteration   4: n = 2937, mean = 340204 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 320000, 331264, 343552, 358963, 603771, 1456206, 1652736, 1652736 ns/op
Iteration   5: n = 2950, mean = 338716 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 322048, 330752, 342016, 354816, 526295, 1564690, 1769472, 1769472 ns/op
Iteration   6: n = 2954, mean = 338264 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 323584, 331776, 340992, 350720, 385152, 1826130, 5095424, 5095424 ns/op
Iteration   7: n = 2965, mean = 336971 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 323072, 330752, 338944, 353792, 469688, 1413091, 3211264, 3211264 ns/op
Iteration   8: n = 2954, mean = 338281 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 323072, 330752, 342528, 354304, 598733, 1501532, 3125248, 3125248 ns/op
Iteration   9: n = 2973, mean = 336116 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 320512, 330752, 341504, 354304, 459663, 1214546, 1478656, 1478656 ns/op
Iteration  10: n = 2979, mean = 335453 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 321024, 330752, 339968, 351744, 413594, 1291919, 1499136, 1499136 ns/op


Result "serialization_site_1k":
  N = 29522
  mean = 338666.876 ±(99.9%) 1294.341 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 29245 
    [ 500000.000, 1000000.000) = 235 
    [1000000.000, 1500000.000) = 19 
    [1500000.000, 2000000.000) = 14 
    [2000000.000, 2500000.000) = 4 
    [2500000.000, 3000000.000) = 1 
    [3000000.000, 3500000.000) = 3 
    [3500000.000, 4000000.000) = 0 
    [4000000.000, 4500000.000) = 0 
    [4500000.000, 5000000.000) = 0 
    [5000000.000, 5500000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 320000.000 ns/op
     p(50.0000) = 330752.000 ns/op
     p(90.0000) = 342016.000 ns/op
     p(95.0000) = 355840.000 ns/op
     p(99.0000) = 490496.000 ns/op
     p(99.9000) = 1424936.960 ns/op
     p(99.9900) = 3129350.963 ns/op
     p(99.9990) = 5095424.000 ns/op
     p(99.9999) = 5095424.000 ns/op
    p(100.0000) = 5095424.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_site_2k

# Run progress: 98.89% complete, ETA 00:00:48
# Fork: 1 of 1
# Warmup Iteration   1: n = 1076, mean = 927148 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 567296, 606208, 1801011, 2352538, 3560120, 11699339, 11796480, 11796480 ns/op
Iteration   1: n = 1628, mean = 613938 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 566272, 596992, 622592, 710656, 811274, 2910908, 3686400, 3686400 ns/op
Iteration   2: n = 1612, mean = 621479 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 567296, 598016, 623616, 712704, 1134326, 2479247, 2617344, 2617344 ns/op
Iteration   3: n = 1640, mean = 609259 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 569344, 596992, 617472, 646093, 769659, 2426724, 2473984, 2473984 ns/op
Iteration   4: n = 1633, mean = 612062 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 568320, 598016, 619520, 649830, 980193, 2623128, 3874816, 3874816 ns/op
Iteration   5: n = 1635, mean = 611206 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 567296, 596992, 617472, 631194, 827146, 4123296, 4972544, 4972544 ns/op
Iteration   6: n = 1638, mean = 610073 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 568320, 596992, 620544, 634880, 912445, 2516886, 3129344, 3129344 ns/op
Iteration   7: n = 1649, mean = 605942 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 585728, 595968, 615424, 624640, 849920, 1955226, 2596864, 2596864 ns/op
Iteration   8: n = 1638, mean = 610126 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 585728, 598016, 618496, 627712, 1085542, 1607596, 1763328, 1763328 ns/op
Iteration   9: n = 1645, mean = 607608 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 585728, 596992, 612352, 627712, 887788, 2015343, 2744320, 2744320 ns/op
Iteration  10: n = 1646, mean = 607341 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 585728, 598016, 616448, 625664, 1060393, 1838021, 1847296, 1847296 ns/op


Result "serialization_site_2k":
  N = 16364
  mean = 610877.763 ±(99.9%) 2600.412 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 0 
    [ 500000.000, 1000000.000) = 16204 
    [1000000.000, 1500000.000) = 122 
    [1500000.000, 2000000.000) = 19 
    [2000000.000, 2500000.000) = 10 
    [2500000.000, 3000000.000) = 4 
    [3000000.000, 3500000.000) = 1 
    [3500000.000, 4000000.000) = 3 
    [4000000.000, 4500000.000) = 0 

  Percentiles, ns/op:
      p(0.0000) = 566272.000 ns/op
     p(50.0000) = 596992.000 ns/op
     p(90.0000) = 618496.000 ns/op
     p(95.0000) = 637696.000 ns/op
     p(99.0000) = 993638.400 ns/op
     p(99.9000) = 2209894.400 ns/op
     p(99.9900) = 4273840.128 ns/op
     p(99.9990) = 4972544.000 ns/op
     p(99.9999) = 4972544.000 ns/op
    p(100.0000) = 4972544.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_site_4k

# Run progress: 99.17% complete, ETA 00:00:36
# Fork: 1 of 1
# Warmup Iteration   1: n = 515, mean = 1939221 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1140736, 1171456, 3779789, 4675994, 9549251, 24051712, 24051712, 24051712 ns/op
Iteration   1: n = 845, mean = 1183841 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1087488, 1146880, 1234944, 1286144, 2252636, 4431872, 4431872, 4431872 ns/op
Iteration   2: n = 857, mean = 1178616 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1126400, 1140736, 1185792, 1253786, 2231828, 4259840, 4259840, 4259840 ns/op
Iteration   3: n = 853, mean = 1171852 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1097728, 1138688, 1195213, 1246822, 2084987, 4349952, 4349952, 4349952 ns/op
Iteration   4: n = 856, mean = 1167626 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1128448, 1140736, 1185792, 1257779, 2042163, 2461696, 2461696, 2461696 ns/op
Iteration   5: n = 862, mean = 1160270 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1118208, 1140736, 1172890, 1197773, 1453998, 4915200, 4915200, 4915200 ns/op
Iteration   6: n = 866, mean = 1154270 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1128448, 1138688, 1165312, 1189171, 1480663, 2416640, 2416640, 2416640 ns/op
Iteration   7: n = 859, mean = 1163979 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1128448, 1138688, 1169408, 1243136, 2035712, 2347008, 2347008, 2347008 ns/op
Iteration   8: n = 864, mean = 1157585 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1128448, 1140736, 1169408, 1187840, 1368269, 4628480, 4628480, 4628480 ns/op
Iteration   9: n = 852, mean = 1173756 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1126400, 1136640, 1170842, 1325261, 2017034, 2883584, 2883584, 2883584 ns/op
Iteration  10: n = 861, mean = 1161497 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1126400, 1138688, 1163264, 1199923, 2101821, 2797568, 2797568, 2797568 ns/op


Result "serialization_site_4k":
  N = 8575
  mean = 1167270.915 ±(99.9%) 5485.980 ns/op

  Histogram, ns/op:
    [1000000.000, 1250000.000) = 8200 
    [1250000.000, 1500000.000) = 237 
    [1500000.000, 1750000.000) = 24 
    [1750000.000, 2000000.000) = 26 
    [2000000.000, 2250000.000) = 54 
    [2250000.000, 2500000.000) = 16 
    [2500000.000, 2750000.000) = 2 
    [2750000.000, 3000000.000) = 5 
    [3000000.000, 3250000.000) = 3 
    [3250000.000, 3500000.000) = 3 
    [3500000.000, 3750000.000) = 0 
    [3750000.000, 4000000.000) = 0 
    [4000000.000, 4250000.000) = 0 
    [4250000.000, 4500000.000) = 3 
    [4500000.000, 4750000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 1087488.000 ns/op
     p(50.0000) = 1138688.000 ns/op
     p(90.0000) = 1175552.000 ns/op
     p(95.0000) = 1241088.000 ns/op
     p(99.0000) = 2010071.040 ns/op
     p(99.9000) = 3226271.744 ns/op
     p(99.9900) = 4915200.000 ns/op
     p(99.9990) = 4915200.000 ns/op
     p(99.9999) = 4915200.000 ns/op
    p(100.0000) = 4915200.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_site_64k

# Run progress: 99.44% complete, ETA 00:00:24
# Fork: 1 of 1
# Warmup Iteration   1: n = 30, mean = 33689873 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21463040, 24543232, 63412634, 100348723, 123994112, 123994112, 123994112, 123994112 ns/op
Iteration   1: n = 44, mean = 22717905 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 21397504, 21872640, 25673728, 27377664, 31358976, 31358976, 31358976, 31358976 ns/op
Iteration   2: n = 44, mean = 22795357 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20971520, 21446656, 27394048, 33660928, 38141952, 38141952, 38141952, 38141952 ns/op
Iteration   3: n = 47, mean = 21419117 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20938752, 21037056, 22518170, 23350477, 28803072, 28803072, 28803072, 28803072 ns/op
Iteration   4: n = 47, mean = 21681958 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20971520, 21135360, 22491955, 25755648, 32964608, 32964608, 32964608, 32964608 ns/op
Iteration   5: n = 47, mean = 21377983 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20971520, 21037056, 22990029, 23933747, 24543232, 24543232, 24543232, 24543232 ns/op
Iteration   6: n = 47, mean = 21464434 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20971520, 21102592, 22557491, 23180083, 26116096, 26116096, 26116096, 26116096 ns/op
Iteration   7: n = 47, mean = 21402384 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20971520, 21037056, 22098739, 23311155, 26968064, 26968064, 26968064, 26968064 ns/op
Iteration   8: n = 47, mean = 21330574 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20938752, 21069824, 22124954, 22675456, 25198592, 25198592, 25198592, 25198592 ns/op
Iteration   9: n = 46, mean = 21752966 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20971520, 21102592, 22531277, 26060390, 36044800, 36044800, 36044800, 36044800 ns/op
Iteration  10: n = 47, mean = 21524393 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 20971520, 21135360, 22478848, 23586406, 27000832, 27000832, 27000832, 27000832 ns/op


Result "serialization_site_64k":
  N = 463
  mean = 21733606.013 ±(99.9%) 283673.076 ns/op

  Histogram, ns/op:
    [20000000.000, 21250000.000) = 291 
    [21250000.000, 22500000.000) = 113 
    [22500000.000, 23750000.000) = 32 
    [23750000.000, 25000000.000) = 9 
    [25000000.000, 26250000.000) = 5 
    [26250000.000, 27500000.000) = 3 
    [27500000.000, 28750000.000) = 2 
    [28750000.000, 30000000.000) = 1 
    [30000000.000, 31250000.000) = 2 
    [31250000.000, 32500000.000) = 1 
    [32500000.000, 33750000.000) = 1 
    [33750000.000, 35000000.000) = 1 
    [35000000.000, 36250000.000) = 1 
    [36250000.000, 37500000.000) = 0 
    [37500000.000, 38750000.000) = 1 

  Percentiles, ns/op:
      p(0.0000) = 20938752.000 ns/op
     p(50.0000) = 21102592.000 ns/op
     p(90.0000) = 22970368.000 ns/op
     p(95.0000) = 23914086.400 ns/op
     p(99.0000) = 31937003.520 ns/op
     p(99.9000) = 38141952.000 ns/op
     p(99.9900) = 38141952.000 ns/op
     p(99.9990) = 38141952.000 ns/op
     p(99.9999) = 38141952.000 ns/op
    p(100.0000) = 38141952.000 ns/op


# JMH 1.12 (released 78 days ago)
# VM version: JDK 1.8.0_91, VM 25.91-b14
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 1 s each, 100 calls per op
# Measurement: 10 iterations, 1 s each, 100 calls per op
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.komanov.serialization.jmh.ScroogeBenchmark.serialization_site_8k

# Run progress: 99.72% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: n = 280, mean = 3565904 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2265088, 2713600, 5379686, 6171853, 15718318, 39583744, 39583744, 39583744 ns/op
Iteration   1: n = 425, mean = 2353330 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2260992, 2285568, 2462515, 2526003, 4184719, 4612096, 4612096, 4612096 ns/op
Iteration   2: n = 428, mean = 2350157 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2252800, 2277376, 2379776, 2494464, 4376412, 6094848, 6094848, 6094848 ns/op
Iteration   3: n = 432, mean = 2316392 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2248704, 2269184, 2342912, 2460467, 4079411, 4685824, 4685824, 4685824 ns/op
Iteration   4: n = 430, mean = 2329252 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2252800, 2273280, 2359296, 2502656, 4059013, 5283840, 5283840, 5283840 ns/op
Iteration   5: n = 431, mean = 2318155 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2256896, 2273280, 2314240, 2437120, 3494216, 6217728, 6217728, 6217728 ns/op
Iteration   6: n = 432, mean = 2315169 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2252800, 2273280, 2338816, 2391040, 3417784, 6447104, 6447104, 6447104 ns/op
Iteration   7: n = 434, mean = 2303981 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2252800, 2273280, 2318336, 2406400, 3001344, 4034560, 4034560, 4034560 ns/op
Iteration   8: n = 432, mean = 2315605 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2252800, 2273280, 2310144, 2429133, 3692052, 4358144, 4358144, 4358144 ns/op
Iteration   9: n = 432, mean = 2315558 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2256896, 2273280, 2322432, 2448179, 3555328, 4227072, 4227072, 4227072 ns/op
Iteration  10: n = 432, mean = 2313472 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2260992, 2277376, 2333491, 2392269, 3081175, 5955584, 5955584, 5955584 ns/op


Result "serialization_site_8k":
  N = 4308
  mean = 2323022.440 ±(99.9%) 12469.454 ns/op

  Histogram, ns/op:
    [2000000.000, 2500000.000) = 4115 
    [2500000.000, 3000000.000) = 123 
    [3000000.000, 3500000.000) = 18 
    [3500000.000, 4000000.000) = 16 
    [4000000.000, 4500000.000) = 26 
    [4500000.000, 5000000.000) = 3 
    [5000000.000, 5500000.000) = 3 
    [5500000.000, 6000000.000) = 1 
    [6000000.000, 6500000.000) = 3 

  Percentiles, ns/op:
      p(0.0000) = 2248704.000 ns/op
     p(50.0000) = 2273280.000 ns/op
     p(90.0000) = 2351104.000 ns/op
     p(95.0000) = 2472140.800 ns/op
     p(99.0000) = 3839508.480 ns/op
     p(99.9000) = 5748015.104 ns/op
     p(99.9900) = 6447104.000 ns/op
     p(99.9990) = 6447104.000 ns/op
     p(99.9999) = 6447104.000 ns/op
    p(100.0000) = 6447104.000 ns/op


# Run complete. Total time: 01:12:16

Benchmark                                                Mode    Cnt           Score           Error  Units
BooPickleBenchmark.deserialization_events_1k             avgt     10      499806.257 ±      6763.462  ns/op
BooPickleBenchmark.deserialization_events_2k             avgt     10      954951.964 ±      7761.805  ns/op
BooPickleBenchmark.deserialization_events_4k             avgt     10     1607006.021 ±     21452.780  ns/op
BooPickleBenchmark.deserialization_events_64k            avgt     10    40181741.361 ±    799017.304  ns/op
BooPickleBenchmark.deserialization_events_8k             avgt     10     3973598.023 ±     35732.756  ns/op
BooPickleBenchmark.deserialization_site_1k               avgt     10      225195.724 ±      5632.127  ns/op
BooPickleBenchmark.deserialization_site_2k               avgt     10      410275.953 ±      8044.120  ns/op
BooPickleBenchmark.deserialization_site_4k               avgt     10      706285.104 ±     13078.644  ns/op
BooPickleBenchmark.deserialization_site_64k              avgt     10     8146087.678 ±    507960.569  ns/op
BooPickleBenchmark.deserialization_site_8k               avgt     10     1317292.998 ±     51584.903  ns/op
BooPickleBenchmark.serialization_events_1k               avgt     10     1457175.386 ±     34092.586  ns/op
BooPickleBenchmark.serialization_events_2k               avgt     10     2726084.819 ±     29484.448  ns/op
BooPickleBenchmark.serialization_events_4k               avgt     10     5688127.830 ±    141913.201  ns/op
BooPickleBenchmark.serialization_events_64k              avgt     10   142960314.086 ±    106797.231  ns/op
BooPickleBenchmark.serialization_events_8k               avgt     10    14427128.967 ±    775940.734  ns/op
BooPickleBenchmark.serialization_site_1k                 avgt     10      328018.898 ±      7401.603  ns/op
BooPickleBenchmark.serialization_site_2k                 avgt     10      613758.769 ±     18744.056  ns/op
BooPickleBenchmark.serialization_site_4k                 avgt     10     1106272.015 ±     17854.278  ns/op
BooPickleBenchmark.serialization_site_64k                avgt     10    18863218.972 ±   1169287.692  ns/op
BooPickleBenchmark.serialization_site_8k                 avgt     10     2180342.592 ±     52519.177  ns/op
ChillBenchmark.deserialization_events_1k                 avgt     10     3678046.614 ±    106956.517  ns/op
ChillBenchmark.deserialization_events_2k                 avgt     10     5531755.374 ±     42657.071  ns/op
ChillBenchmark.deserialization_events_4k                 avgt     10    14188720.162 ±    297525.536  ns/op
ChillBenchmark.deserialization_events_64k                avgt     10   275456402.458 ±  61053065.741  ns/op
ChillBenchmark.deserialization_events_8k                 avgt     10    25846898.979 ±    491979.685  ns/op
ChillBenchmark.deserialization_site_1k                   avgt     10      567508.965 ±      8673.709  ns/op
ChillBenchmark.deserialization_site_2k                   avgt     10      899586.670 ±     11586.121  ns/op
ChillBenchmark.deserialization_site_4k                   avgt     10     1385242.941 ±     24063.162  ns/op
ChillBenchmark.deserialization_site_64k                  avgt     10    17681250.777 ±    669922.244  ns/op
ChillBenchmark.deserialization_site_8k                   avgt     10     2326874.664 ±     56939.357  ns/op
ChillBenchmark.serialization_events_1k                   avgt     10     3066999.503 ±     22644.330  ns/op
ChillBenchmark.serialization_events_2k                   avgt     10     6518500.753 ±    212160.774  ns/op
ChillBenchmark.serialization_events_4k                   avgt     10    11167745.444 ±    744703.174  ns/op
ChillBenchmark.serialization_events_64k                  avgt     10   250186571.875 ±    220427.770  ns/op
ChillBenchmark.serialization_events_8k                   avgt     10    25146463.063 ±   1042977.255  ns/op
ChillBenchmark.serialization_site_1k                     avgt     10      505176.832 ±      5756.127  ns/op
ChillBenchmark.serialization_site_2k                     avgt     10      769206.831 ±     19053.822  ns/op
ChillBenchmark.serialization_site_4k                     avgt     10     1252724.173 ±     12417.161  ns/op
ChillBenchmark.serialization_site_64k                    avgt     10    23052115.893 ±    568025.223  ns/op
ChillBenchmark.serialization_site_8k                     avgt     10     2348320.757 ±     21038.067  ns/op
JavaPbBenchmark.deserialization_events_1k                avgt     10      244967.048 ±     11829.010  ns/op
JavaPbBenchmark.deserialization_events_2k                avgt     10      519554.211 ±      7958.783  ns/op
JavaPbBenchmark.deserialization_events_4k                avgt     10      970610.872 ±     12611.381  ns/op
JavaPbBenchmark.deserialization_events_64k               avgt     10    20373558.353 ±    354939.265  ns/op
JavaPbBenchmark.deserialization_events_8k                avgt     10     1965781.449 ±     26575.172  ns/op
JavaPbBenchmark.deserialization_site_1k                  avgt     10      275650.540 ±      6389.076  ns/op
JavaPbBenchmark.deserialization_site_2k                  avgt     10      524574.842 ±     18682.025  ns/op
JavaPbBenchmark.deserialization_site_4k                  avgt     10      914219.488 ±     15051.717  ns/op
JavaPbBenchmark.deserialization_site_64k                 avgt     10    15660260.247 ±    563214.743  ns/op
JavaPbBenchmark.deserialization_site_8k                  avgt     10     1795190.628 ±    130251.986  ns/op
JavaPbBenchmark.serialization_events_1k                  avgt     10      316202.681 ±     29892.446  ns/op
JavaPbBenchmark.serialization_events_2k                  avgt     10      604158.571 ±     26991.719  ns/op
JavaPbBenchmark.serialization_events_4k                  avgt     10     1205976.183 ±     26608.659  ns/op
JavaPbBenchmark.serialization_events_64k                 avgt     10    29794204.460 ±   1378351.800  ns/op
JavaPbBenchmark.serialization_events_8k                  avgt     10     2350453.286 ±     59375.560  ns/op
JavaPbBenchmark.serialization_site_1k                    avgt     10      320775.513 ±     93566.339  ns/op
JavaPbBenchmark.serialization_site_2k                    avgt     10      512287.749 ±      7000.209  ns/op
JavaPbBenchmark.serialization_site_4k                    avgt     10     1059060.383 ±    311352.691  ns/op
JavaPbBenchmark.serialization_site_64k                   avgt     10    20893625.781 ±    819911.172  ns/op
JavaPbBenchmark.serialization_site_8k                    avgt     10     2126427.490 ±    358778.422  ns/op
JavaSerializationBenchmark.deserialization_events_1k     avgt     10     7548228.070 ±    483105.765  ns/op
JavaSerializationBenchmark.deserialization_events_2k     avgt     10    13406135.363 ±    779239.743  ns/op
JavaSerializationBenchmark.deserialization_events_4k     avgt     10    32735666.103 ±   1999275.526  ns/op
JavaSerializationBenchmark.deserialization_events_64k    avgt     10  1003324670.700 ±   3333279.334  ns/op
JavaSerializationBenchmark.deserialization_events_8k     avgt     10    78893063.021 ±   4705760.711  ns/op
JavaSerializationBenchmark.deserialization_site_1k       avgt     10     5405798.123 ±    456751.441  ns/op
JavaSerializationBenchmark.deserialization_site_2k       avgt     10     8386175.731 ±   1583942.272  ns/op
JavaSerializationBenchmark.deserialization_site_4k       avgt     10     9750812.545 ±    908694.022  ns/op
JavaSerializationBenchmark.deserialization_site_64k      avgt     10    58251477.573 ±  13695796.767  ns/op
JavaSerializationBenchmark.deserialization_site_8k       avgt     10    12843055.076 ±   1570697.454  ns/op
JavaSerializationBenchmark.serialization_events_1k       avgt     10     1928576.138 ±     79227.459  ns/op
JavaSerializationBenchmark.serialization_events_2k       avgt     10     3401011.140 ±    157379.942  ns/op
JavaSerializationBenchmark.serialization_events_4k       avgt     10     7565427.825 ±    334048.242  ns/op
JavaSerializationBenchmark.serialization_events_64k      avgt     10   170098049.413 ±  15930143.106  ns/op
JavaSerializationBenchmark.serialization_events_8k       avgt     10    16334408.198 ±    882619.245  ns/op
JavaSerializationBenchmark.serialization_site_1k         avgt     10     1471565.264 ±     67195.041  ns/op
JavaSerializationBenchmark.serialization_site_2k         avgt     10     2287534.041 ±    314429.178  ns/op
JavaSerializationBenchmark.serialization_site_4k         avgt     10     3844984.562 ±    355823.708  ns/op
JavaSerializationBenchmark.serialization_site_64k        avgt     10    68199958.298 ±   5168763.877  ns/op
JavaSerializationBenchmark.serialization_site_8k         avgt     10     7987600.528 ±    504412.900  ns/op
JavaThriftBenchmark.deserialization_events_1k            avgt     10      289327.934 ±      4459.471  ns/op
JavaThriftBenchmark.deserialization_events_2k            avgt     10      572870.863 ±      8273.438  ns/op
JavaThriftBenchmark.deserialization_events_4k            avgt     10     1100577.485 ±     14258.262  ns/op
JavaThriftBenchmark.deserialization_events_64k           avgt     10    22842127.745 ±    517862.558  ns/op
JavaThriftBenchmark.deserialization_events_8k            avgt     10     2300701.724 ±     54092.674  ns/op
JavaThriftBenchmark.deserialization_site_1k              avgt     10      235905.451 ±      3713.092  ns/op
JavaThriftBenchmark.deserialization_site_2k              avgt     10      435143.663 ±      7041.327  ns/op
JavaThriftBenchmark.deserialization_site_4k              avgt     10      785811.015 ±     26402.922  ns/op
JavaThriftBenchmark.deserialization_site_64k             avgt     10    14484862.308 ±   2936559.127  ns/op
JavaThriftBenchmark.deserialization_site_8k              avgt     10     1555214.517 ±     54461.617  ns/op
JavaThriftBenchmark.serialization_events_1k              avgt     10      447245.176 ±     71856.454  ns/op
JavaThriftBenchmark.serialization_events_2k              avgt     10      943905.420 ±     96330.603  ns/op
JavaThriftBenchmark.serialization_events_4k              avgt     10     1793337.520 ±    395545.134  ns/op
JavaThriftBenchmark.serialization_events_64k             avgt     10    41439511.118 ±   9707149.454  ns/op
JavaThriftBenchmark.serialization_events_8k              avgt     10     3916418.490 ±    828096.880  ns/op
JavaThriftBenchmark.serialization_site_1k                avgt     10      351262.153 ±    101288.158  ns/op
JavaThriftBenchmark.serialization_site_2k                avgt     10      665979.112 ±    190401.822  ns/op
JavaThriftBenchmark.serialization_site_4k                avgt     10     1297737.985 ±    398113.854  ns/op
JavaThriftBenchmark.serialization_site_64k               avgt     10    25533596.906 ±   8525605.410  ns/op
JavaThriftBenchmark.serialization_site_8k                avgt     10     2797174.893 ±   1124559.043  ns/op
JsonBenchmark.deserialization_events_1k                  avgt     10     1105399.910 ±     21970.836  ns/op
JsonBenchmark.deserialization_events_2k                  avgt     10     1979193.001 ±     56610.954  ns/op
JsonBenchmark.deserialization_events_4k                  avgt     10     4278223.961 ±     73851.770  ns/op
JsonBenchmark.deserialization_events_64k                 avgt     10    84139648.379 ±   3623306.143  ns/op
JsonBenchmark.deserialization_events_8k                  avgt     10     9971475.775 ±    745205.512  ns/op
JsonBenchmark.deserialization_site_1k                    avgt     10      721740.445 ±     43420.833  ns/op
JsonBenchmark.deserialization_site_2k                    avgt     10     1212587.833 ±     66557.553  ns/op
JsonBenchmark.deserialization_site_4k                    avgt     10     2281018.779 ±     38119.320  ns/op
JsonBenchmark.deserialization_site_64k                   avgt     10    36133596.788 ±   1393870.382  ns/op
JsonBenchmark.deserialization_site_8k                    avgt     10     4741816.906 ±    136410.184  ns/op
JsonBenchmark.serialization_events_1k                    avgt     10      881030.502 ±     18481.753  ns/op
JsonBenchmark.serialization_events_2k                    avgt     10     1607471.444 ±     39544.606  ns/op
JsonBenchmark.serialization_events_4k                    avgt     10     3297037.538 ±     75714.385  ns/op
JsonBenchmark.serialization_events_64k                   avgt     10    67169436.720 ±   2266893.912  ns/op
JsonBenchmark.serialization_events_8k                    avgt     10     7371244.027 ±    342283.990  ns/op
JsonBenchmark.serialization_site_1k                      avgt     10      405279.291 ±     12401.332  ns/op
JsonBenchmark.serialization_site_2k                      avgt     10      795411.081 ±     15841.866  ns/op
JsonBenchmark.serialization_site_4k                      avgt     10     1626075.306 ±     24360.639  ns/op
JsonBenchmark.serialization_site_64k                     avgt     10    26829429.065 ±    907608.501  ns/op
JsonBenchmark.serialization_site_8k                      avgt     10     3445659.112 ±     62040.121  ns/op
PicklingBenchmark.deserialization_events_1k              avgt     10     2929480.130 ±    236097.611  ns/op
PicklingBenchmark.deserialization_events_2k              avgt     10     5439820.181 ±    974720.239  ns/op
PicklingBenchmark.deserialization_events_4k              avgt     10    15278463.361 ±   3511844.187  ns/op
PicklingBenchmark.deserialization_events_64k             avgt     10   350726629.633 ±  80720821.631  ns/op
PicklingBenchmark.deserialization_events_8k              avgt     10    43195793.666 ±  12603112.208  ns/op
PicklingBenchmark.deserialization_site_1k                avgt     10     3239177.255 ±    565633.852  ns/op
PicklingBenchmark.deserialization_site_2k                avgt     10     5257483.299 ±    815384.812  ns/op
PicklingBenchmark.deserialization_site_4k                avgt     10    13970974.111 ±   2484162.094  ns/op
PicklingBenchmark.deserialization_site_64k               avgt     10   292030820.758 ±  66324826.515  ns/op
PicklingBenchmark.deserialization_site_8k                avgt     10    37216652.794 ±   5756558.241  ns/op
PicklingBenchmark.serialization_events_1k                avgt     10     4518419.347 ±   1196287.482  ns/op
PicklingBenchmark.serialization_events_2k                avgt     10     8885890.445 ±   1474465.594  ns/op
PicklingBenchmark.serialization_events_4k                avgt     10    23560302.052 ±   4808304.032  ns/op
PicklingBenchmark.serialization_events_64k               avgt     10   551281133.500 ± 240546443.064  ns/op
PicklingBenchmark.serialization_events_8k                avgt     10    64259185.392 ±   4634538.536  ns/op
PicklingBenchmark.serialization_site_1k                  avgt     10     5161066.315 ±    857508.989  ns/op
PicklingBenchmark.serialization_site_2k                  avgt     10     8226490.796 ±   1010644.621  ns/op
PicklingBenchmark.serialization_site_4k                  avgt     10    21743190.470 ±   2961260.969  ns/op
PicklingBenchmark.serialization_site_64k                 avgt     10   551494088.850 ± 241394323.592  ns/op
PicklingBenchmark.serialization_site_8k                  avgt     10    60847603.009 ±   6087662.610  ns/op
ScalaPbBenchmark.deserialization_events_1k               avgt     10      278998.173 ±      3784.894  ns/op
ScalaPbBenchmark.deserialization_events_2k               avgt     10      563022.695 ±      6145.983  ns/op
ScalaPbBenchmark.deserialization_events_4k               avgt     10     1075325.393 ±     14186.192  ns/op
ScalaPbBenchmark.deserialization_events_64k              avgt     10    21891780.849 ±    503442.063  ns/op
ScalaPbBenchmark.deserialization_events_8k               avgt     10     2356884.894 ±     70487.010  ns/op
ScalaPbBenchmark.deserialization_site_1k                 avgt     10      211179.919 ±      2833.121  ns/op
ScalaPbBenchmark.deserialization_site_2k                 avgt     10      391029.666 ±      5105.006  ns/op
ScalaPbBenchmark.deserialization_site_4k                 avgt     10      706897.293 ±      9319.249  ns/op
ScalaPbBenchmark.deserialization_site_64k                avgt     10    12423353.725 ±    697858.310  ns/op
ScalaPbBenchmark.deserialization_site_8k                 avgt     10     1364562.464 ±     22315.329  ns/op
ScalaPbBenchmark.serialization_events_1k                 avgt     10      175669.686 ±      2134.672  ns/op
ScalaPbBenchmark.serialization_events_2k                 avgt     10      375216.848 ±      4450.789  ns/op
ScalaPbBenchmark.serialization_events_4k                 avgt     10      748610.732 ±      6826.619  ns/op
ScalaPbBenchmark.serialization_events_64k                avgt     10    14917730.243 ±    682607.891  ns/op
ScalaPbBenchmark.serialization_events_8k                 avgt     10     1444655.892 ±     28958.947  ns/op
ScalaPbBenchmark.serialization_site_1k                   avgt     10      204670.929 ±      2918.819  ns/op
ScalaPbBenchmark.serialization_site_2k                   avgt     10      393443.001 ±     29175.561  ns/op
ScalaPbBenchmark.serialization_site_4k                   avgt     10      792316.747 ±    338123.639  ns/op
ScalaPbBenchmark.serialization_site_64k                  avgt     10    12760070.271 ±    322304.912  ns/op
ScalaPbBenchmark.serialization_site_8k                   avgt     10     1485886.974 ±    391447.901  ns/op
ScroogeBenchmark.deserialization_events_1k               avgt     10      294310.377 ±      5296.178  ns/op
ScroogeBenchmark.deserialization_events_2k               avgt     10      603041.084 ±      9087.403  ns/op
ScroogeBenchmark.deserialization_events_4k               avgt     10     1158329.298 ±     13880.983  ns/op
ScroogeBenchmark.deserialization_events_64k              avgt     10    23655965.969 ±    705474.079  ns/op
ScroogeBenchmark.deserialization_events_8k               avgt     10     2443141.591 ±     33801.065  ns/op
ScroogeBenchmark.deserialization_site_1k                 avgt     10      269998.886 ±      3346.374  ns/op
ScroogeBenchmark.deserialization_site_2k                 avgt     10      483470.474 ±      5167.557  ns/op
ScroogeBenchmark.deserialization_site_4k                 avgt     10      865635.478 ±      6966.768  ns/op
ScroogeBenchmark.deserialization_site_64k                avgt     10    16004668.922 ±    277531.663  ns/op
ScroogeBenchmark.deserialization_site_8k                 avgt     10     1873556.938 ±    117593.476  ns/op
ScroogeBenchmark.serialization_events_1k                 avgt     10      437185.877 ±     12756.238  ns/op
ScroogeBenchmark.serialization_events_2k                 avgt     10      869664.473 ±     11865.052  ns/op
ScroogeBenchmark.serialization_events_4k                 avgt     10     1725663.199 ±     26219.098  ns/op
ScroogeBenchmark.serialization_events_64k                avgt     10    39569104.737 ±   1612874.798  ns/op
ScroogeBenchmark.serialization_events_8k                 avgt     10     3819098.327 ±     55945.776  ns/op
ScroogeBenchmark.serialization_site_1k                   avgt     10      330682.014 ±      5046.268  ns/op
ScroogeBenchmark.serialization_site_2k                   avgt     10      610743.912 ±     12471.581  ns/op
ScroogeBenchmark.serialization_site_4k                   avgt     10     1164310.378 ±     11471.779  ns/op
ScroogeBenchmark.serialization_site_64k                  avgt     10    21898222.127 ±    798410.466  ns/op
ScroogeBenchmark.serialization_site_8k                   avgt     10     2327097.706 ±     30739.270  ns/op
BooPickleBenchmark.deserialization_events_1k           sample  20001      500093.600 ±      1768.800  ns/op
BooPickleBenchmark.deserialization_events_2k           sample  10642      940230.988 ±      5318.624  ns/op
BooPickleBenchmark.deserialization_events_4k           sample   5507     1816713.228 ±     10073.334  ns/op
BooPickleBenchmark.deserialization_events_64k          sample    259    39304393.637 ±    407460.520  ns/op
BooPickleBenchmark.deserialization_events_8k           sample   2554     3921456.514 ±     20219.108  ns/op
BooPickleBenchmark.deserialization_site_1k             sample  43870      227979.245 ±      1167.362  ns/op
BooPickleBenchmark.deserialization_site_2k             sample  24251      412832.983 ±      1625.455  ns/op
BooPickleBenchmark.deserialization_site_4k             sample  14186      705021.762 ±      2845.660  ns/op
BooPickleBenchmark.deserialization_site_64k            sample   1358     7390197.443 ±     53544.258  ns/op
BooPickleBenchmark.deserialization_site_8k             sample   7641     1308524.049 ±      5827.904  ns/op
BooPickleBenchmark.serialization_events_1k             sample   6920     1444936.213 ±      7290.143  ns/op
BooPickleBenchmark.serialization_events_2k             sample   3590     2789710.297 ±     18108.864  ns/op
BooPickleBenchmark.serialization_events_4k             sample   1873     5351685.330 ±     37947.268  ns/op
BooPickleBenchmark.serialization_events_64k            sample     90   118646374.400 ±   1607720.095  ns/op
BooPickleBenchmark.serialization_events_8k             sample    795    12660669.021 ±     87026.995  ns/op
BooPickleBenchmark.serialization_site_1k               sample  30541      327210.481 ±      1205.147  ns/op
BooPickleBenchmark.serialization_site_2k               sample  16450      607654.797 ±      2388.038  ns/op
BooPickleBenchmark.serialization_site_4k               sample   8980     1114077.791 ±      5365.415  ns/op
BooPickleBenchmark.serialization_site_64k              sample    538    18698833.844 ±    307695.760  ns/op
BooPickleBenchmark.serialization_site_8k               sample   4655     2149348.943 ±     11377.303  ns/op
ChillBenchmark.deserialization_events_1k               sample   2652     3774959.783 ±     22081.814  ns/op
ChillBenchmark.deserialization_events_2k               sample   1571     6379534.340 ±     42317.153  ns/op
ChillBenchmark.deserialization_events_4k               sample    748    13457440.856 ±     98951.198  ns/op
ChillBenchmark.deserialization_events_64k              sample     40   267681792.000 ±   5696608.035  ns/op
ChillBenchmark.deserialization_events_8k               sample    410    24679179.239 ±    203008.227  ns/op
ChillBenchmark.deserialization_site_1k                 sample  17284      578181.362 ±      2672.549  ns/op
ChillBenchmark.deserialization_site_2k                 sample  11498      869918.636 ±      3939.784  ns/op
ChillBenchmark.deserialization_site_4k                 sample   6849     1460204.265 ±      6522.771  ns/op
ChillBenchmark.deserialization_site_64k                sample    585    17299543.521 ±    163231.321  ns/op
ChillBenchmark.deserialization_site_8k                 sample   4329     2310594.380 ±     14226.538  ns/op
ChillBenchmark.serialization_events_1k                 sample   3075     3258094.267 ±     29093.887  ns/op
ChillBenchmark.serialization_events_2k                 sample   1830     5479248.297 ±     45340.058  ns/op
ChillBenchmark.serialization_events_4k                 sample    789    12758401.460 ±    111531.525  ns/op
ChillBenchmark.serialization_events_64k                sample     50   229355028.480 ±   2060692.557  ns/op
ChillBenchmark.serialization_events_8k                 sample    396    25568390.465 ±    396330.891  ns/op
ChillBenchmark.serialization_site_1k                   sample  19834      504086.149 ±      2489.345  ns/op
ChillBenchmark.serialization_site_2k                   sample  13098      763870.461 ±      3127.951  ns/op
ChillBenchmark.serialization_site_4k                   sample   8012     1247849.314 ±      7181.505  ns/op
ChillBenchmark.serialization_site_64k                  sample    463    21836439.499 ±    290946.259  ns/op
ChillBenchmark.serialization_site_8k                   sample   4185     2390238.662 ±     16187.235  ns/op
JavaPbBenchmark.deserialization_events_1k              sample  41031      243793.989 ±       870.735  ns/op
JavaPbBenchmark.deserialization_events_2k              sample  19784      505506.290 ±      2077.030  ns/op
JavaPbBenchmark.deserialization_events_4k              sample  10008      999890.980 ±      4429.455  ns/op
JavaPbBenchmark.deserialization_events_64k             sample    499    20178718.269 ±    192789.289  ns/op
JavaPbBenchmark.deserialization_events_8k              sample   4810     2080920.429 ±     11695.265  ns/op
JavaPbBenchmark.deserialization_site_1k                sample  36406      274558.474 ±      1116.905  ns/op
JavaPbBenchmark.deserialization_site_2k                sample  19664      508537.048 ±      2128.257  ns/op
JavaPbBenchmark.deserialization_site_4k                sample  11402      877197.539 ±      4654.598  ns/op
JavaPbBenchmark.deserialization_site_64k               sample    686    14657207.603 ±    137504.172  ns/op
JavaPbBenchmark.deserialization_site_8k                sample   5909     1693433.978 ±      8553.561  ns/op
JavaPbBenchmark.serialization_events_1k                sample  33350      299878.032 ±      1204.285  ns/op
JavaPbBenchmark.serialization_events_2k                sample  16581      602811.156 ±      2509.467  ns/op
JavaPbBenchmark.serialization_events_4k                sample   8800     1136060.509 ±      5418.725  ns/op
JavaPbBenchmark.serialization_events_64k               sample    378    26911976.974 ±    245198.148  ns/op
JavaPbBenchmark.serialization_events_8k                sample   4105     2438682.567 ±     12174.318  ns/op
JavaPbBenchmark.serialization_site_1k                  sample  34614      288691.054 ±      1221.310  ns/op
JavaPbBenchmark.serialization_site_2k                  sample  19320      517642.759 ±      3157.566  ns/op
JavaPbBenchmark.serialization_site_4k                  sample  10871      920063.765 ±      5071.389  ns/op
JavaPbBenchmark.serialization_site_64k                 sample    490    20614816.914 ±    209704.292  ns/op
JavaPbBenchmark.serialization_site_8k                  sample   4805     2082011.718 ±     18833.815  ns/op
JavaSerializationBenchmark.deserialization_events_1k   sample   1302     7706891.404 ±     80865.262  ns/op
JavaSerializationBenchmark.deserialization_events_2k   sample    755    13346623.407 ±    183233.803  ns/op
JavaSerializationBenchmark.deserialization_events_4k   sample    321    31367448.723 ±    613144.190  ns/op
JavaSerializationBenchmark.deserialization_events_64k  sample     20   678952960.000 ±  19663565.268  ns/op
JavaSerializationBenchmark.deserialization_events_8k   sample    138    73547538.551 ±   1218388.840  ns/op
JavaSerializationBenchmark.deserialization_site_1k     sample   1841     5442607.279 ±     62010.081  ns/op
JavaSerializationBenchmark.deserialization_site_2k     sample   1253     8007382.525 ±    122934.320  ns/op
JavaSerializationBenchmark.deserialization_site_4k     sample   1046     9599113.055 ±    154866.460  ns/op
JavaSerializationBenchmark.deserialization_site_64k    sample    187    55339719.872 ±   1584679.651  ns/op
JavaSerializationBenchmark.deserialization_site_8k     sample    841    11960709.631 ±    135393.955  ns/op
JavaSerializationBenchmark.serialization_events_1k     sample   5257     1902631.347 ±     13577.751  ns/op
JavaSerializationBenchmark.serialization_events_2k     sample   2899     3455030.397 ±     37529.213  ns/op
JavaSerializationBenchmark.serialization_events_4k     sample   1461     6860387.877 ±     82864.405  ns/op
JavaSerializationBenchmark.serialization_events_64k    sample     69   159755872.464 ±   2873917.916  ns/op
JavaSerializationBenchmark.serialization_events_8k     sample    576    17503943.111 ±    241579.490  ns/op
JavaSerializationBenchmark.serialization_site_1k       sample   7674     1303838.624 ±      8996.990  ns/op
JavaSerializationBenchmark.serialization_site_2k       sample   4470     2237032.691 ±     13559.538  ns/op
JavaSerializationBenchmark.serialization_site_4k       sample   2610     3841575.626 ±     41138.577  ns/op
JavaSerializationBenchmark.serialization_site_64k      sample    157    65164072.764 ±   1626413.779  ns/op
JavaSerializationBenchmark.serialization_site_8k       sample   1230     8160237.685 ±    120429.819  ns/op
JavaThriftBenchmark.deserialization_events_1k          sample  34424      290311.005 ±      1247.666  ns/op
JavaThriftBenchmark.deserialization_events_2k          sample  17200      581237.165 ±      2636.162  ns/op
JavaThriftBenchmark.deserialization_events_4k          sample   9083     1101892.545 ±      5956.408  ns/op
JavaThriftBenchmark.deserialization_events_64k         sample    445    22770888.198 ±    270445.098  ns/op
JavaThriftBenchmark.deserialization_events_8k          sample   4384     2281664.467 ±     12859.679  ns/op
JavaThriftBenchmark.deserialization_site_1k            sample  42752      233762.527 ±      1099.279  ns/op
JavaThriftBenchmark.deserialization_site_2k            sample  22170      451057.705 ±      2027.471  ns/op
JavaThriftBenchmark.deserialization_site_4k            sample  12772      783550.898 ±      3281.344  ns/op
JavaThriftBenchmark.deserialization_site_64k           sample    738    13646406.764 ±    147973.129  ns/op
JavaThriftBenchmark.deserialization_site_8k            sample   6528     1531844.078 ±      9577.405  ns/op
JavaThriftBenchmark.serialization_events_1k            sample  24025      416413.617 ±      2072.870  ns/op
JavaThriftBenchmark.serialization_events_2k            sample  11829      845071.128 ±      5127.032  ns/op
JavaThriftBenchmark.serialization_events_4k            sample   5893     1697429.525 ±     12294.574  ns/op
JavaThriftBenchmark.serialization_events_64k           sample    255    40000604.361 ±   1266648.240  ns/op
JavaThriftBenchmark.serialization_events_8k            sample   2718     3683812.497 ±     40266.994  ns/op
JavaThriftBenchmark.serialization_site_1k              sample  28081      356222.509 ±      1757.839  ns/op
JavaThriftBenchmark.serialization_site_2k              sample  15134      660923.458 ±      4287.183  ns/op
JavaThriftBenchmark.serialization_site_4k              sample   7985     1252057.945 ±     10259.926  ns/op
JavaThriftBenchmark.serialization_site_64k             sample    419    24116935.179 ±    842318.508  ns/op
JavaThriftBenchmark.serialization_site_8k              sample   3943     2538189.293 ±     29607.875  ns/op
JsonBenchmark.deserialization_events_1k                sample   9493     1054302.763 ±      6253.475  ns/op
JsonBenchmark.deserialization_events_2k                sample   4963     2016868.584 ±     12914.476  ns/op
JsonBenchmark.deserialization_events_4k                sample   2366     4234396.673 ±     47350.470  ns/op
JsonBenchmark.deserialization_events_64k               sample    129    82298991.132 ±    912270.432  ns/op
JsonBenchmark.deserialization_events_8k                sample   1077     9322526.425 ±     89119.422  ns/op
JsonBenchmark.deserialization_site_1k                  sample  13804      724170.070 ±      4732.597  ns/op
JsonBenchmark.deserialization_site_2k                  sample   8260     1211459.688 ±      8666.743  ns/op
JsonBenchmark.deserialization_site_4k                  sample   4461     2243428.139 ±     18491.858  ns/op
JsonBenchmark.deserialization_site_64k                 sample    295    34669432.624 ±    366628.387  ns/op
JsonBenchmark.deserialization_site_8k                  sample   2165     4623095.605 ±     38101.575  ns/op
JsonBenchmark.serialization_events_1k                  sample  11703      854371.071 ±      4801.747  ns/op
JsonBenchmark.serialization_events_2k                  sample   6212     1609880.314 ±      9688.639  ns/op
JsonBenchmark.serialization_events_4k                  sample   2941     3403126.991 ±     41998.176  ns/op
JsonBenchmark.serialization_events_64k                 sample    159    65896654.088 ±    617714.911  ns/op
JsonBenchmark.serialization_events_8k                  sample   1383     7252496.659 ±     62184.828  ns/op
JsonBenchmark.serialization_site_1k                    sample  26239      380981.036 ±      2266.386  ns/op
JsonBenchmark.serialization_site_2k                    sample  12129      824470.869 ±      4732.093  ns/op
JsonBenchmark.serialization_site_4k                    sample   6168     1622097.681 ±     10157.214  ns/op
JsonBenchmark.serialization_site_64k                   sample    378    26740075.005 ±    279041.815  ns/op
JsonBenchmark.serialization_site_8k                    sample   2943     3400709.915 ±     22306.652  ns/op
PicklingBenchmark.deserialization_events_1k            sample   3364     2975510.221 ±     25983.717  ns/op
PicklingBenchmark.deserialization_events_2k            sample   1888     5304137.763 ±     79299.891  ns/op
PicklingBenchmark.deserialization_events_4k            sample    675    14941674.003 ±    245976.866  ns/op
PicklingBenchmark.deserialization_events_64k           sample     40   290966732.800 ±   5751147.378  ns/op
PicklingBenchmark.deserialization_events_8k            sample    261    39240244.966 ±    909328.266  ns/op
PicklingBenchmark.deserialization_site_1k              sample   3136     3192043.102 ±     33379.874  ns/op
PicklingBenchmark.deserialization_site_2k              sample   1891     5293171.342 ±     79526.812  ns/op
PicklingBenchmark.deserialization_site_4k              sample    727    13827712.880 ±    360603.355  ns/op
PicklingBenchmark.deserialization_site_64k             sample     42   255091078.095 ±   7667970.989  ns/op
PicklingBenchmark.deserialization_site_8k              sample    287    35344683.707 ±    527478.612  ns/op
PicklingBenchmark.serialization_events_1k              sample   2210     4532737.390 ±     52779.991  ns/op
PicklingBenchmark.serialization_events_2k              sample   1228     8179565.238 ±    226198.722  ns/op
PicklingBenchmark.serialization_events_4k              sample    439    22986863.964 ±    590709.018  ns/op
PicklingBenchmark.serialization_events_64k             sample     29   457540713.931 ±  22888376.458  ns/op
PicklingBenchmark.serialization_events_8k              sample    165    61913249.358 ±   1433095.398  ns/op
PicklingBenchmark.serialization_site_1k                sample   1979     5064055.139 ±     53324.822  ns/op
PicklingBenchmark.serialization_site_2k                sample   1222     8203744.995 ±    109779.635  ns/op
PicklingBenchmark.serialization_site_4k                sample    474    21408288.405 ±    309197.378  ns/op
PicklingBenchmark.serialization_site_64k               sample     29   404063337.931 ±  27778536.850  ns/op
PicklingBenchmark.serialization_site_8k                sample    177    57763874.712 ±   1290253.240  ns/op
ScalaPbBenchmark.deserialization_events_1k             sample  35444      281961.379 ±      1085.536  ns/op
ScalaPbBenchmark.deserialization_events_2k             sample  18019      554674.698 ±      2574.813  ns/op
ScalaPbBenchmark.deserialization_events_4k             sample   9415     1062059.736 ±      4662.755  ns/op
ScalaPbBenchmark.deserialization_events_64k            sample    426    23778337.653 ±    210007.519  ns/op
ScalaPbBenchmark.deserialization_events_8k             sample   4325     2312524.889 ±     13982.931  ns/op
ScalaPbBenchmark.deserialization_site_1k               sample  46785      213639.707 ±       915.407  ns/op
ScalaPbBenchmark.deserialization_site_2k               sample  25681      389175.106 ±      1487.663  ns/op
ScalaPbBenchmark.deserialization_site_4k               sample  13332      749860.023 ±      3556.724  ns/op
ScalaPbBenchmark.deserialization_site_64k              sample    795    12653641.419 ±     97538.525  ns/op
ScalaPbBenchmark.deserialization_site_8k               sample   6298     1588221.073 ±     13062.099  ns/op
ScalaPbBenchmark.serialization_events_1k               sample  59767      167177.346 ±       580.836  ns/op
ScalaPbBenchmark.serialization_events_2k               sample  27450      364401.405 ±      1294.964  ns/op
ScalaPbBenchmark.serialization_events_4k               sample  13423      744708.901 ±      4361.010  ns/op
ScalaPbBenchmark.serialization_events_64k              sample    693    14565210.505 ±    148188.136  ns/op
ScalaPbBenchmark.serialization_events_8k               sample   6772     1477303.872 ±      8722.557  ns/op
ScalaPbBenchmark.serialization_site_1k                 sample  48821      205332.031 ±       817.799  ns/op
ScalaPbBenchmark.serialization_site_2k                 sample  25480      392589.202 ±      1642.082  ns/op
ScalaPbBenchmark.serialization_site_4k                 sample  13679      730880.356 ±      7000.927  ns/op
ScalaPbBenchmark.serialization_site_64k                sample    852    11819498.366 ±    113500.384  ns/op
ScalaPbBenchmark.serialization_site_8k                 sample   6571     1522088.498 ±     11466.548  ns/op
ScroogeBenchmark.deserialization_events_1k             sample  33151      301460.615 ±      1058.384  ns/op
ScroogeBenchmark.deserialization_events_2k             sample  16585      602641.442 ±      2356.456  ns/op
ScroogeBenchmark.deserialization_events_4k             sample   8654     1155432.423 ±      6978.922  ns/op
ScroogeBenchmark.deserialization_events_64k            sample    417    24165732.067 ±    228172.519  ns/op
ScroogeBenchmark.deserialization_events_8k             sample   4124     2426847.224 ±     13970.895  ns/op
ScroogeBenchmark.deserialization_site_1k               sample  37076      269677.537 ±      1244.522  ns/op
ScroogeBenchmark.deserialization_site_2k               sample  21237      470726.103 ±      1771.043  ns/op
ScroogeBenchmark.deserialization_site_4k               sample  11403      876749.554 ±      4978.824  ns/op
ScroogeBenchmark.deserialization_site_64k              sample    637    15840653.061 ±    115811.520  ns/op
ScroogeBenchmark.deserialization_site_8k               sample   5598     1787177.432 ±      9798.706  ns/op
ScroogeBenchmark.serialization_events_1k               sample  22610      442105.795 ±      1830.564  ns/op
ScroogeBenchmark.serialization_events_2k               sample  11525      867692.819 ±      3793.561  ns/op
ScroogeBenchmark.serialization_events_4k               sample   5733     1745063.898 ±      7946.281  ns/op
ScroogeBenchmark.serialization_events_64k              sample    267    38035916.225 ±    387294.192  ns/op
ScroogeBenchmark.serialization_events_8k               sample   2665     3757370.693 ±     24509.247  ns/op
ScroogeBenchmark.serialization_site_1k                 sample  29522      338666.876 ±      1294.341  ns/op
ScroogeBenchmark.serialization_site_2k                 sample  16364      610877.763 ±      2600.412  ns/op
ScroogeBenchmark.serialization_site_4k                 sample   8575     1167270.915 ±      5485.980  ns/op
ScroogeBenchmark.serialization_site_64k                sample    463    21733606.013 ±    283673.076  ns/op
ScroogeBenchmark.serialization_site_8k                 sample   4308     2323022.440 ±     12469.454  ns/op

Benchmark result is saved to jmh-result.csv
